{"version":3,"file":"static/webpack/static/development/pages/index.js.206067dd1db19e6d1a35.hot-update.js","sources":["webpack:///./utils/sortForChart.js"],"sourcesContent":["// meant for Line Chart Cases/Deaths Chart\n\nconst firstWhole = (arr, n = 0) => {\n  if (arr[n] > 0) return n\n  if (arr[n] == undefined) return 0\n  n++\n  return firstWhole(arr, n)\n}\n\n\nconst sortForChart = obj => {\n\n  const zeroNull = c => c === null ? 0 : c\n  const sortedObj = obj.sort((a,b) => new Date(a.date) - new Date(b.date))\n\n  const initCasesArray = sortedObj.map(o => o.total_cases)\n  // console.log(initCasesArray);\n  const firstNumIndex = firstWhole(initCasesArray)\n  const fObj = sortedObj.slice(firstNumIndex)\n  const cases = fObj.map(o => o.total_cases)\n  const labels = fObj.map(o => o.date)\n  const deaths = fObj.map(o => zeroNull(o.total_deaths))\n  const newCases = fObj.map(o => zeroNull(o.new_cases))\n  const label = obj[0].location\n\n  const shortLabels = labels.map(label => {\n    let d = new Date(label)\n    return `${d.getDate() + '.' + d.getMonth()}`\n  })\n\n\n  const datasets = [\n    {\n      label: 'new cases',\n      data: newCases,\n      backgroundColor: '#fc3111',\n      borderColor: '#fc3111',\n      strokeColor: '#301934',\n      pointRadius: 2,\n      borderWidth: 2\n    },\n    {\n      label: 'deaths',\n      data: deaths,\n      backgroundColor: 'rgba(29,82,209,1) 100%)',\n      borderColor: 'rgba(21, 21, 21, 1)',\n      strokeColor: \"rgba(222, 222, 34, 1)\",\n      pointRadius: 3,\n      borderWidth: 3\n    },\n    {\n      label: 'cases',\n      data: cases,\n      backgroundColor: 'rgba(208,42,144,1)',\n      borderColor: 'rgba(186, 50, 60, 1)',\n      strokeColor: \"rgba(200, 200, 200, 1)\",\n      pointRadius: 2,\n      borderWidth: 3,\n      fill: false\n    }\n  ]\n\n  return {\n    datasets,\n    shortLabels,\n    label\n  }\n}\n\nexport default sortForChart\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAYA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;;;;A","sourceRoot":""}