{"version":3,"file":"static/webpack/static/development/pages/_app.js.9536e8d40005c265447b.hot-update.js","sources":["webpack:///./components/Burger/Burger.js","webpack:///./components/Burger/Burger.styled.js","webpack:///./components/Burger/index.js","webpack:///./pages/_app.js"],"sourcesContent":["import React from 'react';\nimport { StyledBurger } from './Burger.styled';\n\nconst Burger = () => {\n  return (\n    <StyledBurger>\n      <div />\n      <div />\n      <div />\n    </StyledBurger>\n  )\n}\n\nexport default Burger\n","import styled from 'styled-components';\n\nexport const StyledBurger = styled.button`\n  position: absolute;\n  top: 5%;\n  left: 2rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  width: 2rem;\n  height: 2rem;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  z-index: 10;\n  \n  &:focus {\n    outline: none;\n  }\n  \n  div {\n    width: 2rem;\n    height: 0.25rem;\n    background: ${({ theme }) => theme.bgColor};\n    border-radius: 10px;\n    transition: all 0.3s linear;\n    position: relative;\n    transform-origin: 1px;\n  }\n`;\n","export { default } from './Burger'\n","import App from 'next/app'\nimport Router from 'next/router'\nimport { ThemeProvider } from 'styled-components'\nimport GlobalStyle from './Global'\n\nimport Header from '../components/Header'\nimport { Button } from '../components/S'\n\nimport Burger from '../components/Burger';\n\nimport { MoonIcon, SunIcon, WorldIcon } from '../components/Icons/ThemeIcon'\nimport { themes } from '../utils/themes'\nimport * as gtag from '../utils/gtag'\n\nRouter.events.on('routeChangeComplete', url => gtag.pageview(url))\n\nconst lightTheme = () => ({\n  ...themes['common'],\n  ...themes['light'],\n})\n\nconst darkTheme = () => ({\n  ...themes['common'],\n  ...themes['dark'],\n})\n\nexport default class MyApp extends App {\n\n  state = {\n    theme: lightTheme(),\n    isHeb: true,\n    menuOpen: false\n  }\n\n  toggleMenu    = () => this.setState({ menuOpen: !this.state.menuOpen })\n  toggleLang    = () => this.setState(prevState => ({ ...prevState, isHeb: !prevState.isHeb }))\n  setDarkTheme  = () => this.setState(prevState => ({ ...prevState, theme: darkTheme() }))\n  setLightTheme = () => this.setState(prevState => ({ ...prevState, theme: lightTheme() }))\n\n  render() {\n    const { theme, isHeb } = this.state\n    const displayLang = isHeb ? 'English' : 'עברית'\n    const isLight = theme.type === 'light'\n    const themeButton = (isLight && <MoonIcon onClick={this.setDarkTheme} />) || <SunIcon onClick={this.setLightTheme} />\n    const { Component, pageProps } = this.props\n\n    return (\n      <ThemeProvider theme={theme}>\n        <GlobalStyle isHeb={isHeb}/>\n        <Header title='nCorona' isHeb={isHeb}>\n          <Menu onClick={this.toggleMenu} />\n          <Burger onClick={this.toggleMenu} />\n          { themeButton }\n          <Button langBtn onClick={this.toggleLang}>\n            <div style={{display: 'flex', alignItems: 'center'}}>\n              <WorldIcon />\n              {displayLang}\n            </div>\n          </Button>\n        </Header>\n        <Component {...pageProps} isHeb={isHeb}/>\n      </ThemeProvider>\n    )\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;ACbA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAsBA;AAAA;AAAA;;;;;;;;;;;;ACxBA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AACA;AAIA;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AAAA;AAAA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AArCA;AACA;;;;;A","sourceRoot":""}