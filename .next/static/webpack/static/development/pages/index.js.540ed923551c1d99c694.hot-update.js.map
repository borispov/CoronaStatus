{"version":3,"file":"static/webpack/static/development/pages/index.js.540ed923551c1d99c694.hot-update.js","sources":["webpack:///./components/QuickStats/QuickStats.js"],"sourcesContent":["import { Container } from '../S'\nimport { Column, InRow, Row, Percentage, Header, Number } from './QuickStats.styled'\n\n\n// utils\nimport { F } from './QuickStats.utils'\n// locale hook\nimport useTranslation from '../../hooks/useTranslation.js'\n\n\nconst labels = {\n  cases: { heb: 'מאומתים', eng: 'Confirmed' },\n  todayCases: { heb: 'מקרים חדשים', eng: 'New Cases'},\n  deaths: { heb: 'נפטרו', eng: 'Deaths' },\n  recovered: { heb: 'החלימו', eng: 'Recovered' },\n  active: { heb: 'פעילים', eng: 'Active' },\n  affectedCountries: { heb: 'מדינות נגועות', eng: 'Infected Countries' }\n}\n\nconst engLbl = k => labels[k]['eng']\nconst hebLbl = k => labels[k]['heb']\nconst putLabel = (heb, k) => heb && hebLbl(k) || engLbl(k)\n\nexport default ({ S, country, isHeb, yday, comparison=true}) => {\n\n  return (\n    <Container>\n      <Row world={country.toLowerCase() === 'world'}>\n\n    {\n      Object.keys(S).map((k,i) => {\n        return (\n          <Column key={i}>\n            <Header> { putLabel(isHeb,k) }</Header>\n            <InRow>\n              <Number>\n                {\n                  S[k] && F.formatNumber(S[k])\n                }\n                {\n                  comparison  \n                    && yday \n                    && country !== 'world' \n                    && country !== 'World' \n                    && <span>\n                        ({F.formatNumber(yday[k])})\n                       </span>\n                }\n              </Number>\n              <br />\n              {\n                comparison && yday && <Percentage>\n                <span>{ F.calcDiff(S[k])(yday[k]) < 0 && \"\\u2B07\" || '\\u2B06' }</span>\n                %{ Math.abs(F.calcDiff(S[k])(yday[k]))} \n                </Percentage>\n              }\n            </InRow>\n          </Column>\n        )\n      })\n    }\n\n\n      </Row>\n    </Container>\n  )\n\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AANA;AACA;AAQA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAQA;;;;A","sourceRoot":""}