{"version":3,"file":"static/webpack/static/development/pages/index.js.f65f5df11df75bddbb40.hot-update.js","sources":["webpack:///./components/CoronaApp.js","webpack:///./utils/mapDataForTodayGraph.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport Input from './Input'\nimport Stats from './Stats'\nimport Header from './Header'\nimport useTime from '../utils/useTime'\nimport Chart from './Chart'\nimport Container from './Container'\nimport sortForChart from '../utils/sortForChart'\nimport mapDataForTodayGraph from '../utils/mapDataForTodayGraph'\n\n\nexport default () => {\n  const [country, setCountry] = useState('')\n  const [inputValue, setInput] = useState('')\n  const url = 'http://covid19.borisky.me:3003/api/v1/'\n\n  const { todayStats } = useTodayStats(url, country)\n  const { worldStats, timeError, timeLoading } = useTime()\n\n  const todayStatsSorted = mapDataForTodayGraph(todayStats)\n\n  const handleChange = e => setInput(e.target.value)\n  const handleSubmit = e => {\n    e.preventDefault();\n    setCountry(inputValue)\n  }\n\n  if (timeLoading || timeError) return <div> Loading....</div>\n  if (timeError) return <div> We've encountered an Error. Maybe you typed wrong country</div>\n\n  return (\n    <div>\n      <Header>Covid19 Feed</Header>\n\n      <Stats \n        url={url}\n        cn={country || todayStats.country}\n        isWorld={false}\n        timeData={worldStats}\n        single={todayStatsSorted}\n      />\n\n      <Chart type='line' {...worldStats} label={country + '\\'s Outbreak Over Time'} />\n\n      <form \n        style={{\n          width: '100%',\n          margin: '54px 0 auto',\n          display: 'flex',\n          justifyContent: 'center'\n\n        }}\n        onSubmit={handleSubmit}>\n        <label style={{fontSize: '16px'}}>\n          Search For Country:\n          <Input type=\"text\" value={inputValue} onChange={handleChange} />\n        </label>\n        <input type=\"submit\" value=\"submit\" />\n      </form>\n\n    </div>\n  )\n  \n\n}\n","const vocab = {\n  'cases': 'infected',\n  'recovered': 'recovered',\n  'country': 'country',\n  'deaths': 'deaths',\n  'todayCases': 'today',\n}\n\nconst prop = o => k => o[k]\nconst switchToVocab = word => vocab[word]\n\nconst mapDataForTodayGraph = d => {\n  const mapToKeyword = (k) => ({[switchToVocab(k)]: prop(d)(k)})\n  return Object.keys(d).map(mapToKeyword)\n}\nexport default mapDataForTodayGraph\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AAJA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAOA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;;;;;;;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;;;;A","sourceRoot":""}