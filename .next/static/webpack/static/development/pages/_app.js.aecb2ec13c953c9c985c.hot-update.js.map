{"version":3,"file":"static/webpack/static/development/pages/_app.js.aecb2ec13c953c9c985c.hot-update.js","sources":["webpack:///./context/LocaleContext.js"],"sourcesContent":["import {\n  useState,\n  useEffect,\n  useRef,\n  createContext\n} from 'react'\n\nexport const LocaleContext = createContext()\n\nexport const LocaleProvider = (props) => {\n  // Default Setting\n  const initialState = 'he'\n\n  const [ locale, setLocale ] = useState(initialState)\n  const prev = useRef()\n\n  useEffect(() => {\n\n    if (prev.current === undefined && locale === 'he') {\n      const readLocal = localStorage.getItem('locale')\n      if (readLocal !== 'he') {\n        setLocale(readLocal)\n        return\n      } else { setLocale(readLocal) }\n    } else {\n      localStorage.setItem('locale', locale)\n      prev.current = locale\n    }\n  }, [locale])\n\n  return (\n    <LocaleContext.Provider value={{ locale, setLocale }} >\n      {props.children}\n    </LocaleContext.Provider>\n  )\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAOA;AAEA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AACA;AAIA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;A","sourceRoot":""}