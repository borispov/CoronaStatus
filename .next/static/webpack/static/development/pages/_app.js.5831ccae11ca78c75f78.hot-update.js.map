{"version":3,"file":"static/webpack/static/development/pages/_app.js.5831ccae11ca78c75f78.hot-update.js","sources":["webpack:///./pages/_app.js","webpack:///./utils/useOutSide.js"],"sourcesContent":["import App from 'next/app'\nimport Router from 'next/router'\nimport Link from 'next/link';\nimport { useEffect, useState } from 'react'\nimport { ThemeProvider } from 'styled-components'\n\nimport useOutSide from '../utils/useOutSide'\nimport GlobalStyle from './Global'\nimport Header from '../components/Header'\nimport { Button } from '../components/S'\nimport Burger from '../components/Burger';\nimport Menu from '../components/Menu';\nimport { MoonIcon, SunIcon, WorldIcon } from '../components/Icons/ThemeIcon'\nimport { themes } from '../utils/themes'\nimport * as gtag from '../utils/gtag'\n\nRouter.events.on('routeChangeComplete', url => gtag.pageview(url))\n\nconst lightTheme = () => ({\n  ...themes['common'],\n  ...themes['light'],\n})\n\nconst darkTheme = () => ({\n  ...themes['common'],\n  ...themes['dark'],\n})\n\n\nexport default (props) => {\n  const [theme, setTheme] = useState(lightTheme())\n  const [isHeb, setHeb] = useState(true)\n  const [menuOpen, setOpen] = useState(false)\n\n  const toggleMenu    = () => setOpen(!menuOpen)\n  const toggleLang    = () => setHebwhh\n  const setDarkTheme  = () => setTheme(setDarkTheme())\n  const setLightTheme = () => setTheme(setLightTheme())\n\n\n  const displayLang       = isHeb ? 'English' : 'עברית'\n  const isLight           = theme.type === 'light'\n  const themeButton       = isLight\n    && <MoonIcon onClick={setDarkTheme} />\n    || <SunIcon onClick={setLightTheme} />\n\n  const { Component, pageProps } = props\n\n\n  return (\n    <ThemeProvider theme={theme}>\n\n      <GlobalStyle isHeb={isHeb}/>\n      <Header title='nCorona' isHeb={isHeb} closeMenu={useOutSide}>\n        <Burger setOpen={toggleMenu} open={menuOpen} />\n        <Menu setOpen={toggleMenu} open={menuOpen} >\n          <a onClick={isLight ?setDarkTheme :setLightTheme}>\n            <span>{ isLight ? '🌒' : '🌞'}</span>\n            {\n              isLight\n                ? (isHeb && 'מצב לילה' || 'Dark Mode')\n                : (isHeb && 'מצב יום' || 'Light Mode')\n            }\n          </a>\n          <a onClick={this.toggleLang}>\n            <span>&#127760;</span>\n            {displayLang}\n          </a>\n          <Link href=\"/News\">\n            <a alt=\"news\">\n              <span>&#128240;</span>\n              { isHeb && 'חדשות' || 'News' }\n            </a>\n          </Link>\n\n        </Menu>\n\n      </Header>\n      <Component {...pageProps} isHeb={isHeb}/>\n    </ThemeProvider>\n  )\n\n}\n\n\n\n\n// export default class MyApp extends App {\n//\n//   state = {\n//     theme: lightTheme(),\n//     isHeb: true,\n//     menuOpen: false\n//   }\n//\n//   toggleMenu    = () => this.setState({ menuOpen: !this.state.menuOpen })\n//   toggleLang    = () => this.setState({ isHeb: !this.state.isHeb })\n//   setDarkTheme  = () => this.setState(prevState => ({ ...prevState, theme: darkTheme() }))\n//   setLightTheme = () => this.setState(prevState => ({ ...prevState, theme: lightTheme() }))\n//\n//   render() {\n//     const { theme, isHeb }  = this.state\n//     const displayLang       = isHeb ? 'English' : 'עברית'\n//     const isLight           = theme.type === 'light'\n//     const themeButton       = isLight\n//       && <MoonIcon onClick={this.setDarkTheme} />\n//       || <SunIcon onClick={this.setLightTheme} />\n//\n//     const { Component, pageProps } = this.props\n//\n//     return (\n//       <ThemeProvider theme={theme}>\n//         <GlobalStyle isHeb={isHeb}/>\n//         <Header title='nCorona' isHeb={isHeb} closeMenu={this.closeMenu}>\n//           <Burger setOpen={this.toggleMenu} open={this.state.menuOpen} />\n//           <Menu setOpen={this.toggleMenu} open={this.state.menuOpen} >\n//             <a onClick={isLight ? this.setDarkTheme : this.setLightTheme}>\n//               <span>{ isLight ? '🌒' : '🌞'}</span>\n//               {\n//                 isLight\n//                   ? (isHeb && 'מצב לילה' || 'Dark Mode')\n//                   : (isHeb && 'מצב יום' || 'Light Mode')\n//               }\n//             </a>\n//             <a onClick={this.toggleLang}>\n//               <span>&#127760;</span>\n//               {displayLang}\n//             </a>\n//             <Link href=\"/News\">\n//               <a alt=\"news\">\n//                 <span>&#128240;</span>\n//                 { isHeb && 'חדשות' || 'News' }\n//               </a>\n//             </Link>\n//\n//           </Menu>\n//\n//         </Header>\n//         <Component {...pageProps} isHeb={isHeb}/>\n//       </ThemeProvider>\n//     )\n//   }\n// }\n","import { useEffect } from 'react';\n\nexport default (ref, handler) => {\n  useEffect(() => {\n    const listener = event => {\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n      handler(event);\n    };\n    document.addEventListener('mousedown', listener);\n    return () => {\n      document.removeEventListener('mousedown', listener);\n    };\n  },\n  [ref, handler],\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAhBA;AAAA;AAoBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC9IA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;;;;A","sourceRoot":""}