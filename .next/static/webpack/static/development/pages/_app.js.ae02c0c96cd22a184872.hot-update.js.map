{"version":3,"file":"static/webpack/static/development/pages/_app.js.ae02c0c96cd22a184872.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import App from 'next/app'\nimport Router from 'next/router'\nimport { ThemeProvider } from 'styled-components'\nimport GlobalStyle from './Global'\nimport Link from 'next/link';\n\nimport Header from '../components/Header'\nimport { Button } from '../components/S'\n\nimport Burger from '../components/Burger';\nimport Menu from '../components/Menu';\n\nimport { MoonIcon, SunIcon, WorldIcon } from '../components/Icons/ThemeIcon'\nimport { themes } from '../utils/themes'\nimport * as gtag from '../utils/gtag'\nimport useOnClickOutside from '../utils/useOnClickOutside'\n\nRouter.events.on('routeChangeComplete', url => gtag.pageview(url))\n\nconst lightTheme = () => ({\n  ...themes['common'],\n  ...themes['light'],\n})\n\nconst darkTheme = () => ({\n  ...themes['common'],\n  ...themes['dark'],\n})\n\nexport default class MyApp extends App {\n\n  constructor(props) {\n    super(props)\n    this.myRef = React.createRef();\n  }\n\n  state = {\n    theme: lightTheme(),\n    isHeb: true,\n    menuOpen: false\n  }\n\n  toggleMenu    = () => this.setState({ menuOpen: !this.state.menuOpen })\n  toggleLang    = () => this.setState({ isHeb: !this.state.isHeb })\n  setDarkTheme  = () => this.setState(prevState => ({ ...prevState, theme: darkTheme() }))\n  setLightTheme = () => this.setState(prevState => ({ ...prevState, theme: lightTheme() }))\n\n\n  render() {\n    const { theme, isHeb }  = this.state\n    const displayLang       = isHeb ? 'English' : '◊¢◊ë◊®◊ô◊™'\n    const isLight           = theme.type === 'light'\n    const themeButton       = isLight\n      && <MoonIcon onClick={this.setDarkTheme} />\n      || <SunIcon onClick={this.setLightTheme} />\n\n    const { Component, pageProps } = this.props\n\n    return (\n      <ThemeProvider theme={theme}>\n        <GlobalStyle isHeb={isHeb}/>\n        <Header title='nCorona' isHeb={isHeb}>\n          <Burger setOpen={this.toggleMenu} open={this.state.menuOpen} />\n          <Menu setOpen={this.toggleMenu} open={this.state.menuOpen} >\n            <a onClick={isLight ? this.setDarkTheme : this.setLightTheme}>\n              <span>{ isLight ? 'üåí' : 'üåû'}</span>\n              {\n                isLight\n                  ? (isHeb && '◊û◊¶◊ë ◊ú◊ô◊ú◊î' || 'Dark Mode')\n                  : (isHeb && '◊û◊¶◊ë ◊ô◊ï◊ù' || 'Light Mode')\n              }\n            </a>\n            <a onClick={this.toggleLang}>\n              <span>&#127760;</span>\n              {displayLang}\n            </a>\n            <Link href=\"/News\">\n              <a alt=\"news\">\n                <span>&#128240;</span>\n                { isHeb && '◊ó◊ì◊©◊ï◊™' || 'News' }\n              </a>\n            </Link>\n\n          </Menu>\n\n        </Header>\n        <Component {...pageProps} isHeb={isHeb}/>\n      </ThemeProvider>\n    )\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AACA;AAIA;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAMA;AACA;AACA;AAHA;AACA;AANA;AAWA;AAAA;AAAA;AAAA;AACA;AAZA;AAYA;AAAA;AAAA;AAAA;AACA;AAbA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAdA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAbA;AAFA;AAGA;AACA;;;AAaA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAPA;AAAA;AAAA;AAUA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AA5DA;AACA;;;;;A","sourceRoot":""}