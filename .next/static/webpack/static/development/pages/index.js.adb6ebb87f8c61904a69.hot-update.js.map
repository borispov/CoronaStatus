{"version":3,"file":"static/webpack/static/development/pages/index.js.adb6ebb87f8c61904a69.hot-update.js","sources":["webpack:///./components/Button.js","webpack:///./components/CoronaApp.js","webpack:///./utils/useTime.js"],"sourcesContent":["import styled from 'styled-components'\n\nconst Btn = styled.button`\n  border-radius: 4px;\n  padding: 8px 2px;\n  font-size: 16px;\n  background: ${props => props.theme.bgColor};\n  color: ${props => props.theme.color};\n  font-family: 'Sans'\n  :hover & {\n    background: ${props => props.theme.color};\n    color: ${props => props.theme.bgColor};\n  }\n`\nexport default (props) => (\n  <Button>\n    {props.children}\n  </Button>\n)\n","import { useState, useEffect } from 'react'\nimport Input from './Input'\nimport Stats from './Stats'\nimport Header from './Header'\nimport useTime from '../utils/useTime'\nimport useTodayStats from '../utils/useTodayStats'\nimport Chart from './Chart'\nimport Container from './Container'\nimport HeaderDescription from './HeaderDescription'\nimport sortForChart from '../utils/sortForChart'\nimport mapDataForTodayGraph from '../utils/mapDataForTodayGraph'\nimport Button from './Button'\n\nexport default () => {\n  const [country, setCountry] = useState('')\n  const [inputValue, setInput] = useState('')\n  const [isWorld, setWorld] = useState(true)\n\n  const url = 'http://covid19.borisky.me:3003/api/v1/'\n\n  const { todayStats } = useTodayStats(url, country)\n  const { timeStats, timeError, timeLoading } = useTime()\n  const { countryStats, countryLoading, countryError } = useTime(country)\n  const todayStatsSorted = todayStats && \n    {\n      cases: todayStats.cases,\n      todayCases: todayStats.todayCases,\n      recovered: todayStats.recovered,\n      deaths: todayStats.deaths\n    } || ''\n\n\n  const handleChange = e => setInput(e.target.value)\n  const handleSubmit = e => {\n    e.preventDefault();\n    setCountry(inputValue)\n  }\n\n  console.log(todayStats);\n  if (timeLoading || timeError) return <div> Loading....</div>\n  if (timeError) return <div> We've encountered an Error. Maybe you typed wrong country</div>\n\n  const timeChart = (isWorld && timeStats) || (countryStats && countryStats)\n\n  return (\n    <div>\n      <Header>Covid19 Feed</Header>\n      <HeaderDescription />\n\n      <Stats\n        isWorld={isWorld}\n        cn={country || todayStats && todayStats.country}\n        timeData={timeStats}\n        todayStats={todayStatsSorted}\n      />\n\n      <div style={{display: 'flex'}}>\n        <Button onClick={() => setWorld(true)}>World</Button><span> | </span>\n        <Button onClick={() => setWorld(false)}>{country}</Button>\n        <Chart \n          type='line' \n          {...timeChart} \n          label={isWorld && 'World' + '\\'s Outbreak Over Time'} \n        />\n\n      </div>\n\n      <form \n        style={{ maxWidth: '520px', margin: '54px auto'}}\n        onSubmit={handleSubmit}>\n\n        <label style={{fontSize: '16px'}}>\n          Search For Country:\n        </label>\n\n        <div style={{ display: 'flex', margin: '0 auto' }}>\n          <Input type=\"text\" value={inputValue} onChange={handleChange} />\n          <Input type=\"submit\" value=\"submit\" btn={true}/>\n        </div>\n      </form>\n\n    </div>\n  )\n  \n\n}\n","import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport sortForChart from './sortForChart'\n\nconst baseURL = `http://46.101.156.51:3003/api/v1/alltime/`\n\nasync function currentCountry(){\n  return await axios\n    .get('https://extreme-ip-lookup.com/json/')\n    .then(res => res.data.country)\n    .catch(e => 'Israel')\n}\n\nfunction useTime(url = baseURL, country = 'world') {\n  const [timeStats, setData] = useState();\n  const [timeLoading, setLoading] = useState(false);\n  const [timeError, setError] = useState(false);\n\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true)\n      setError()\n\n      const URL = country === 'world' ? baseURL : baseURL+country\n\n      const data = await axios.get(URL)\n        .then(res => res.data)\n        .catch(err => setError(err))\n      const timeStats = sortForChart(data);\n      setData(timeStats)\n      setLoading(false)\n    }\n\n    fetchData();\n  }, [country])\n\n  if ( country !== 'world' ) {\n    const counntryStats = timeStats\n    const counntryLoading = timeLoading\n    const counntryError = timeError\n    return { counntryStats, counntryLoading, counntryError }\n  }\n\n  return {\n    timeStats, timeLoading, timeError\n  }\n}\n\nexport default useTime;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAIA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAIA;AACA;AANA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AASA;AAEA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAGA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;;;;;;;;;;;;;;;;;;ACrFA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AALA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAJA;AAAA;AAOA;AAAA;AACA;AAAA;AACA;AATA;AAMA;AAGA;AACA;AACA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AACA;;;;A","sourceRoot":""}