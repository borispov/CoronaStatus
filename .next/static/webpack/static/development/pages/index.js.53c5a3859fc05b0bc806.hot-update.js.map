{"version":3,"file":"static/webpack/static/development/pages/index.js.53c5a3859fc05b0bc806.hot-update.js","sources":["webpack:///./utils/useTime.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport sortForChart from './sortForChart'\n\nconst baseURL = `http://46.101.156.51:3003/api/v1/alltime/`\n\nasync function currentCountry(){\n  return await axios\n    .get('https://extreme-ip-lookup.com/json/')\n    .then(res => res.data.country)\n    .catch(e => 'israel')\n}\n\nasync function useTime(country, url = baseURL) {\n  const [timeStats, setData] = useState();\n  const [countryStats, setCountryStats] = useState();\n  const [timeLoading, setLoading] = useState(false);\n  const [timeError, setError] = useState(false);\n  const [geo, setGeo] = useState('')\n\n  useEffect(async () => {\n    console.log('inside Geo Location Effect');\n    let geoLocation = await currentCountry()\n    console.log(geoLocation);\n    setGeo(geoLocation)\n  }, [])\n\n  async function fetchData(cn) {\n    setLoading(true)\n    setError()\n\n    const URL = cn === 'world' ? baseURL : baseURL + country || geo\n    const data = await axios.get(URL)\n      .then(res => res.data)\n      .catch(err => setError(err))\n    const timeStats = sortForChart(data);\n    console.log(timeStats);\n    setData(timeStats)\n    setLoading(false)\n  }\n\n  // useEffect(() => {\n  //   console.log('inside World effect');\n  //   fetchData('world')\n  // }, [])\n\n  useEffect(() => {\n    console.log('inside Country Effect');\n    console.log(country || geo);\n    fetchData(country);\n    console.log('ran cn ');\n  }, [country])\n\n  console.log(countryStats);\n\n  return {\n    countryStats, timeStats, timeLoading, timeError\n  }\n}\n\nexport default useTime;\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AALA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAcA;AAdA;AAAA;AAAA;AAAA;AAAA;AAeA;AACA;AAEA;AAlBA;AAAA;AAoBA;AAAA;AACA;AAAA;AACA;AAtBA;AAmBA;AAGA;AACA;AACA;AACA;AACA;AA1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAxCA;AA2CA;AAAA;AAAA;AAAA;AADA;AACA;AA3CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA8CA;;;;A","sourceRoot":""}