{"version":3,"file":"static/webpack/static/development/pages/index.js.4cdbbcfde1051703b139.hot-update.js","sources":["webpack:///./components/CaseChart.js"],"sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport useTime from '../utils/useTime'\nimport sortForChart from '../utils/sortForChart'\nimport Chart from './Chart'\nimport Container from './Container'\n\nconst baseURL = `http://covid19.borisky.me:3003/api/v1/alltime/`\n\nconst countryTimeData = async (cn) => {\n  console.log('fetchinGGGGG');\n  const loc = cn || await currentCountry()\n  const data = await axios.get(baseURL+loc)\n  const dataRes = await sortForChart(data.data)\n  console.log(dataRes);\n  return dataRes\n}\n\nconst worldTimeData = async () => {\n  const data = await axios.get(baseURL)\n  const dataRes = await sortForChart(data.data)\n      // .then(res => sortForChart(res.data))\n      // .catch(err => console.log(err))\n  return dataRes\n}\n\nasync function currentCountry(){\n  return await axios\n    .get('https://extreme-ip-lookup.com/json/')\n    .then(res => res.data.country)\n    .catch(e => 'israel')\n}\n\n\nclass CaseChart extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      // country: this.props.country,\n      worldData: [],\n      countryData: [],\n      worldLabels: [],\n      countryLabels: [],\n      worldCases: [],\n      countryCases: [],\n      showWorld: true\n    }\n  }\n\n  setShowWorld() {\n    const showWorld = !this.state.showWorld\n    this.setState({ showWorld })\n  }\n\n  async componentDidMount() {\n    const timeStats = await worldTimeData()\n    const countryStats = await countryTimeData(this.props.country)\n\n\n    const worldCases = timeStats && timeStats.datasets.filter(a => a.label === 'cases')\n    const countryCases = countryStats && countryStats.datasets.filter(a => a.label === 'cases')\n\n    this.setState({\n      worldData: timeStats,\n      countryData: countryStats,\n      worldCases,\n      countryCases\n    })\n\n  }\n\n  render() {\n    return (\n      <Container>\n        <Chart \n          type='line'\n          labels={this.state.showWorld ? this.state.worldLabels : this.state.countryLabels}\n          data={this.state.showWorld ? this.state.worldCases : this.state.countryCases}\n          label='Infection Growth - Country/World'\n        />\n      </Container>\n    )\n  }\n\n}\n\nexport default CaseChart\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AACA;AADA;AAGA;AAHA;AAAA;AACA;AADA;AAIA;AACA;AALA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AALA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAFA;AAYA;AACA;;;AACA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;;;AAGA;AACA;;AADA;;AACA;AACA;;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;;;;;;;;;;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;AAjDA;AACA;AAoDA;;;;A","sourceRoot":""}