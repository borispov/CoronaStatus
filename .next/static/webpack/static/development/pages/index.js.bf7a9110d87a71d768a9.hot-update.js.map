{"version":3,"file":"static/webpack/static/development/pages/index.js.bf7a9110d87a71d768a9.hot-update.js","sources":["webpack:///./components/CaseChart.js"],"sourcesContent":["import React from 'react'\nimport { Button, Container, Paragraph } from './S'\nimport axios from 'axios'\nimport sortForChart from '../utils/sortForChart'\nimport Chart from './Chart'\nimport Spinner from './Spinner'\n\nconst baseURL = `https://nCorona.live/api/v1/alltime/`\n\nconst worldTimeData = async (theme) => {\n  const data = await axios.get(baseURL)\n  const dataRes = await sortForChart(data.data, theme)\n  return dataRes\n}\n\nclass CaseChart extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      active: 'worldCases',\n      dataToPresent: 'worldCases',\n      worldData: [],\n      worldLabels: [],\n      worldCases: [],\n      deathCases: [],\n      newCases: [],\n      showWorld: true,\n      loading: false\n    }\n  }\n\n  present = val => {\n    this.setState({dataToPresent: val, active: val})\n  }\n\n  async componentDidMount() {\n    this.setState({ loading: true })\n\n    try {\n      const timeStats = await worldTimeData(this.props.theme)\n      const worldCases = timeStats && timeStats.datasets.filter(a => a.label === 'cases')\n      const deathCases = timeStats && timeStats.datasets.filter(a => a.label === 'deaths')\n      const newCases = timeStats && timeStats.datasets.filter(a => a.label === 'new cases')\n      const worldLabels = timeStats && timeStats.labels\n\n\n\n      this.setState({\n        worldData: timeStats,\n        worldCases,\n        deathCases,\n        newCases,\n        worldLabels,\n        loading: false\n      })\n    } catch(err) {\n      this.setState({ loading: false, error: err })\n    }\n\n  }\n\n  render() {\n\n    if (this.state.loading) {\n      return <Container><h1>Loading Data . . .</h1></Container>\n    }\n    if (this.state.error) {\n      return <Container><h1>{' error occured:' + this.state.error}</h1></Container>\n    }\n\n    return (\n      <>\n          <Paragraph mw='auto' center secondary>\n          {this.props.isHeb &&\n            'להלן: שיעור התפשטות הנגיף בעולם לפי: מקרי מוות ומסרים מקרים חדשים ליום'\n                || 'Growth Rate of the virus in the world, including deaths and new cases'}\n          </Paragraph>\n\n        <div style={{display: 'flex', justifyContent: 'space-evenly', padding: '34px 32px 8px 32px'}}>\n\n          <Button\n            active={this.state.active === 'worldCases'} \n            bg='transparent' \n            fat \n            outline='primaryDark' \n            btnColor='onBg' \n            medium \n            onClick={() => this.present('worldCases')}>\n              {this.props.isHeb && 'נדבקים' || 'Cases'}\n          </Button>\n\n          <Button \n            active={this.state.active === 'deathCases'} \n            bg='transparent' \n            fat\n            hoverColor='primaryColor'\n            outline='primaryDark' \n            btnColor='onBg'\n            medium \n            onClick={() => this.present('deathCases')}>\n              {this.props.isHeb && 'מקרי מוות' || 'Deaths'}\n          </Button>\n\n          <Button \n            active={this.state.active === 'newCases'} \n            bg='transparent' \n            fat \n            outline='primaryDark' \n            btnColor='onBg' \n            medium \n            onClick={() => this.present('newCases')}>\n              {this.props.isHeb && 'מקרים חדשים' || 'New cases'}\n          </Button>\n\n        </div>\n        {\n          this.state.worldData &&\n            <Chart \n              type='line'\n              labels={this.state.worldLabels}\n              data={this.state[this.state.dataToPresent]}\n              label={this.props.isHeb ? 'נתונים מהעולם' : 'Global'}\n              theme={this.props.theme}\n            /> || <div> Loading Charts ... </div>\n        }\n      </>\n    )\n  }\n\n}\n\nexport default CaseChart\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAgBA;AAAA;AAAA;AAAA;AACA;AACA;AAhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAFA;AAaA;AACA;;;;;;;;;AAMA;AAAA;AAAA;;;AAGA;AACA;;AADA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;;;;;;AASA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;AAIA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAjHA;AACA;AAoHA;;;;A","sourceRoot":""}