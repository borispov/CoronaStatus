{"version":3,"file":"static/webpack/static/development/pages/index.js.e4d4f96f1ec3a7e7e148.hot-update.js","sources":["webpack:///./utils/sortForChart.js"],"sourcesContent":["// meant for Line Chart Cases/Deaths Chart\n\nconst firstWhole = (arr, n = 0) => {\n  if (arr[n] > 0) return n\n  if (arr[n] == undefined) return 0\n  n++\n  return firstWhole(arr, n)\n}\n\nconst parseLabel = label => {\n  let d = new Date(label)\n  return d.getDate() + '.' + ('0' + (d.getMonth()+1)).toString()\n}\n\nconst sortForChart = obj => {\n\n  const zeroNull = c => c === null ? 0 : c\n  const sortedObj = obj.sort((a,b) => new Date(a.date) - new Date(b.date))\n\n  const initCasesArray = sortedObj.map(o => o.total_cases)\n  // console.log(initCasesArray);\n  const firstNumIndex = firstWhole(initCasesArray)\n  const fObj = sortedObj.slice(firstNumIndex)\n  const cases = fObj.map(o => o.total_cases)\n  const labels = fObj.map(o => parseLabel(o.date))\n  const deaths = fObj.map(o => zeroNull(o.total_deaths))\n  const newCases = fObj.map(o => zeroNull(o.new_cases))\n  const label = obj[0].location\n\n  const datasets = [\n    {\n      label: 'new cases',\n      data: newCases,\n      backgroundColor: '#fc3111',\n      borderColor: '#fc3111',\n      strokeColor: '#301934',\n      pointRadius: 2,\n      borderWidth: 2,\n      fill: true,\n      datalabels: {\n        display: ctx => ctx.dataIndex % 2,\n        align: 'end',\n        anchor: 'end'\n      }\n    },\n    {\n      label: 'deaths',\n      data: deaths,\n      backgroundColor: 'rgba(29,82,209,1) 100%)',\n      borderColor: 'rgba(21, 21, 21, 1)',\n      strokeColor: \"rgba(222, 222, 34, 1)\",\n      pointRadius: 3,\n      borderWidth: 3,\n      datalabels: {\n        display: ctx => ctx.dataIndex % 2,\n        align: 'end',\n        anchor: 'end'\n      }\n    },\n    {\n      label: 'cases',\n      data: cases,\n      backgroundColor: 'rgba(208,42,55,0.1)',\n      borderColor: 'rgba(210, 50, 120, 1)',\n      strokeColor: \"rgba(200, 200, 200, 1)\",\n      pointBorderColor: 'rgba(75,10,192,1)',\n      pointBackgroundColor: '#fff',\n      pointHoverBackgroundColor: 'rgba(45, 20, 19, 1)',\n      pointRadius: 0.3,\n      borderWidth: 4,\n      datalabels: {\n        // display: ctx => ctx.dataIndex % 2,\n        display: 'auto',\n        align: 'end',\n        anchor: 'end'\n      }\n    }\n  ]\n\n  return {\n    datasets,\n    labels,\n    label\n  }\n}\n\nexport default sortForChart\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAHA;AATA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAHA;AARA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAXA;AAoBA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;;;;A","sourceRoot":""}