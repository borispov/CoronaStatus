{"version":3,"file":"static/webpack/static/development/pages/index.js.d5d676db00a131ea08ee.hot-update.js","sources":["webpack:///./components/LineChart.js","webpack:///./components/Stats.js"],"sourcesContent":["import React from 'react';\nimport {Line} from 'react-chartjs-2';\n\nconst data = {\n  labels: ['Infected', 'Deaths'],\n  datasets: [\n    {\n      label: 'My First dataset',\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: 'rgba(75,192,192,0.4)',\n      backgroundColor: [\n        'rgba(255, 99, 132, 1)',\n        'rgba(54, 162, 235, 1)',\n      ],\n      borderColor: [\n        'rgba(75,192,192,1)',\n        'rgba(168,101, 60, 1)'\n      ],\n      borderCapStyle: 'butt',\n      options: {\n        scales: { yAxes: [{ stacked: true }] }\n      },\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: 'rgba(75,192,192,1)',\n      pointBackgroundColor: '#fff',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: [250, 0]\n    }\n  ]\n};\n\nexport default () => {\n  return (\n    <div>\n      <h2>Line Example</h2>\n      <Line data={data} />\n    </div>\n  )\n}\n\n// export default function LineChart({\n//   displayName: 'LineChart',\n//\n//   render() {\n//     return (\n//       <div>\n//         <h2>Line Example</h2>\n//         <Line data={data} />\n//       </div>\n//     );\n//   }\n// });\n","import useStats from '../utils/useStats'\nimport StatBlock from './StatBlock'\nimport React from 'react'\nimport styled from 'styled-components'\nimport Spinner from './Spinner'\nimport Bar from './Bar'\nimport LineChart from './LineChart'\n\nconst vocab = {\n  'cases': 'infected',\n  'recovered': 'recovered',\n  'country': 'country',\n  'deaths': 'deaths',\n  'todayCases': 'new today',\n  'critical': 'critical'\n}\nconst prop = o => k => o[k]\nconst switchToVocab = word => vocab[word]\n\nconst Container = styled.div`\n  max-width: 760px;\n  margin: 0 auto;\n  text-align: center;\n`\n\nconst Grid = styled.div`\n  margin-top: 64px;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 1.5rem;\n`\n\nexport default function Stats({ url, cn = '', search }) {\n\n  const { stats, error, loading } = useStats(url, cn);\n\n  if (error) return <div> We've encountered an Error. Maybe you typed wrong country</div>\n  if (!stats) return <div><Spinner /></div>\n\n  const {\n    country,\n    cases,\n    recovered,\n    deaths,\n    todayCases,\n    critical\n  } = stats\n\n  const o = {\n    cases, todayCases, recovered, critical, deaths\n  }\n\n  const organizeData = d => {\n    const mapToKeyword = (k) => ({[switchToVocab(k)]: prop(d)(k)})\n    return Object.keys(d).map(mapToKeyword)\n  }\n  const organizedData = organizeData(o)\n\n  return (\n    <Container>\n\n      <h1>Country: {country}</h1>\n\n      <Bar info={organizedData} />\n      <LineChart info={organizedData} />\n\n      <Grid>\n        <StatBlock \n          title=\"Infected\"\n          data={cases}\n        />\n        <StatBlock \n          title=\"Recovered\"\n          data={recovered}\n        />\n        <StatBlock \n          title=\"Total Deaths\"\n          data={deaths}\n        />\n        <StatBlock \n          title=\"Critical Cases\"\n          data={critical}\n        />\n        <StatBlock \n          title=\"New Cases Today\"\n          data={todayCases}\n        />\n      </Grid>\n    </Container>\n  )\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AALA;AAgBA;AAAA;AAAA;AAAA;AAAA;AADA;AAjBA;AAqCA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAMA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;A","sourceRoot":""}