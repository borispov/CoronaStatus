{"version":3,"file":"static/webpack/static/development/pages/index.js.7fee810d41ed589f71a2.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import CoronaApp from '../components/CoronaApp'\nimport styled, { css, ThemeProvider } from 'styled-components'\nimport GlobalStyle from './Global'\nimport { themes } from '../utils/themes'\nimport React, { useState } from 'react'\nimport MoonSVG from '../utils/moon.svg'\nimport SunSVG from '../assets/icons/sun.svg'\nimport Header from '../components/Header'\nimport Button from '../components/Button'\n\nimport InfoSection from '../components/InfoSection'\nimport Footer from '../components/Footer'\n\n\nconst lightTheme = () => ({\n  ...themes['common'],\n  ...themes['light'],\n})\n\nconst darkTheme = () => ({\n  ...themes['common'],\n  ...themes['dark'],\n})\n\nconst ThemeIcon = css`\n  width: 4rem;\n  height: 4rem;\n  margin-left: auto;\n  cursor: pointer;\n  @media (max-width: 768px) {\n    width: 2rem;\n    height: 2rem;\n  }\n`\n\nconst MoonIcon = styled(MoonSVG)`\n  ${ThemeIcon}\n  color: lightblue;\n`\n\nconst SunIcon = styled(SunSVG)`\n  ${ThemeIcon}\n`\n\n\nconst Btn = styled.button`\n  color: ${props => props.theme.bgColor};\n  background-color: ${props => props.theme.color};\n  border-radius: 50%;\n  position: absolute;\n  top: ${props => props.top};\n  right: ${props => props.right};\n  left: ${props => props.left};\n  padding: 6px 2px;\n  outline: none;\n`\nconst LangBtn = styled.button`\n  position: relative;\n  background: ${props => props.theme.bgColor};\n  color: ${props => props.theme.color};\n  font-size: 14px;\n  font-weight: 600;\n  font-family: 'Sans';\n  padding: 8px 10px;\n  width: 100%;\n  outline: none;\n  text-align: center;\n  border: none;\n  border-radius: 6px;\n  margin: 0 6px;\n  margin-left: 16px;\n  @media (max-width: 768px) {\n    // width: 30px;\n    font-size: 12px;\n    font-weight: 400;\n    padding: 4px 6px;\n  }\n\n`\n\nexport default function IndexPage() {\n  const [theme, setTheme] = useState(lightTheme())\n  const setDarkTheme = () => setTheme(darkTheme())\n  const setLightTheme = () => setTheme(lightTheme())\n\n  const [lang, setLang] = useState('heb');\n  const setHeb = () => setLang('heb')\n  const setEng = () => setLang('eng')\n\n  const isLight = theme.type === 'light'\n  const handleLanguage = lang === 'heb' ? setEng : setHeb\n\n  const themeButton = isLight && <MoonIcon onClick={setDarkTheme} /> || <SunIcon onClick={setLightTheme} />\n  const displayLang = lang === 'heb' ? 'English' : 'עברית'\n\n\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <GlobalStyle lang={lang}/>\n\n        <Header title='C19.FeeD'>\n          { themeButton }\n          <LangBtn onClick={handleLanguage}>{displayLang}</LangBtn>\n        </Header>\n\n        <CoronaApp theme={theme} lang={lang}/>\n\n        <InfoSection theme={theme} />\n\n        <Footer />\n\n      </ThemeProvider>\n    </>\n  )\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AACA;AAIA;AAWA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAqBA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AACA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;A","sourceRoot":""}