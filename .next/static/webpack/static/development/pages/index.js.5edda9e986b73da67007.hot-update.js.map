{"version":3,"file":"static/webpack/static/development/pages/index.js.5edda9e986b73da67007.hot-update.js","sources":["webpack:///./context/proxy-context.js"],"sourcesContent":["import React, {\n    useState,\n    useEffect,\n    useRef,\n    createContext\n} from 'react'\n\nexport const ProxyContext = createContext()\n\nexport const ProxyContextProvider = (props) => {\n\n    const initialState = {\n        ipAddress: 'localhost',\n        countryName: 'israel',\n    }\n\n    // Declare shareable proxy state\n    const [proxy, setProxy] = useState(initialState)\n    const prev = useRef()\n\n    // Read and Write Proxy State to Local Storage\n    useEffect(() => {\n        if (proxy.countryName == 'israel') {\n            const localState = JSON.parse(localStorage.getItem('ip2proxy'))\n            if (localState) {\n                console.info('reading local storage')\n                prev.current = localState.ipAddress\n                setProxy(localState)\n            }\n        } else if (prev.current !== proxy.ipAddress) {\n            console.info('writing local storage')\n            localStorage.setItem('ip2proxy', JSON.stringify(proxy))\n        }\n    }, [proxy])\n\n    return(\n        <ProxyContext.Provider value={[proxy, setProxy]}>\n            {props.children}\n        </ProxyContext.Provider>\n    )\n}\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AAOA;AAEA;AAEA;AACA;AACA;AAFA;AACA;AAHA;AAAA;AAAA;AACA;AAQA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;A","sourceRoot":""}