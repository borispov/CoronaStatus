{"version":3,"file":"static/webpack/static/development/pages/index.js.9f3dc5cae13da81ba5b9.hot-update.js","sources":["webpack:///./components/LineChart.js","webpack:///./utils/sortForChart.js"],"sourcesContent":["import React from 'react';\nimport {Line} from 'react-chartjs-2';\n\nconst popVal = o => Object.values(o)[0]\n\nconst defaultColors = [\n  'rgba(112, 120, 176, 1)',\n  'rgba(233,233,100,1)',\n  'rgba(213, 199, 23, 1)',\n  'rgba(245, 55, 66, 1)',\n  'rgba(18, 18, 21, 1)'\n]\n\nconst defaultSettings = {\n  fillColor: \"rgba(220,220,220,0.2)\",\n  strokeColor: \"rgba(220,220,220,1)\",\n  // pointColor: \"rgba(220,220,220,1)\",\n  // pointStrokeColor: \"#fff\",\n  // pointHighlightFill: \"#fff\",\n  // pointHighlightStroke: \"rgba(220,220,220,1)\",\n  // pointBackgroundColor: '#fff',\n  // pointBorderWidth: 1,\n  // pointHoverRadius: 5,\n  // pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  // pointHoverBorderColor: 'rgba(220,220,220,1)',\n  // pointHoverBorderWidth: 2,\n  // pointRadius: 1,\n  // pointHitRadius: 10,\n}\n\nconst parseDatasets = arrayOfSets => {\n  return arrayOfSets.map(set => ({\n    ...defaultSettings,\n    ...set\n  }))\n}\n\nexport default ( props ) => {\n\n  const data = {\n    labels: props.labels,\n    datasets: props.datasets && parseDatasets(props.datasets)\n  };\n\n  console.log(data);\n\n\n  return (\n    <div>\n      <h2>{props.label}</h2>\n      <Line\n        data={data}\n        width={4}\n        height={1}\n      />\n    </div>\n  )\n}\n","// meant for Line Chart Cases/Deaths Chart\n\nconst sortForChart = obj => {\n\n  const labels = obj.map(o => o.date)\n  const deaths = obj.map(o => o.total_deaths)\n  const cases = obj.map(o => o.total_cases)\n  const newCases = obj.map(o => o.new_cases)\n  const label = obj.location\n\n  const datasets = [\n    {\n      label: 'new cases',\n      data: newCases,\n      fillColor: 'rgba(165, 42, 42, 0.7)',\n      strokeColor: '#301934'\n    },\n    {\n      label: 'deaths',\n      data: deaths,\n      fillColor: \"#bb0a1e\",\n      strokeColor: \"rgba(200, 200, 200, 0.3)\",\n    },\n    {\n      label: 'cases',\n      data: cases,\n      fillColor: \"rgba(230,140,140,0.6)\",\n      strokeColor: \"rgba(200, 200, 200, 0.3)\",\n    }\n  ]\n\n  return {\n    datasets,\n    labels,\n    label\n  }\n}\n\nexport default sortForChart\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAQA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AACA;AAgBA;AACA;AAAA;AAAA;AAIA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;;;;;;;;;ACzDA;AAAA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAQA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;;;;A","sourceRoot":""}