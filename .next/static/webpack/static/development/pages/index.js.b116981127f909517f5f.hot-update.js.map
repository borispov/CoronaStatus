{"version":3,"file":"static/webpack/static/development/pages/index.js.b116981127f909517f5f.hot-update.js","sources":["webpack:///./components/LineChart.js"],"sourcesContent":["import {Line} from 'react-chartjs-2';\nimport 'chartjs-plugin-datalabels';\nimport styled, { withTheme, keyframes }  from 'styled-components'\n\nconst BaseAnimation = styled.div`  \n  animation-duration: ${props => props.duration};  \n  animation-timing-function: ${props => props.timingFunction};      \n  animation-delay: ${props => props.delay};  \n  animation-iteration-count: ${props => props.iterationCount};  \n  animation-direction: ${props => props.direction}; \n  animation-fill-mode: ${props => props.fillMode};  \n  animation-play-state:  ${props => props.playState};  \n  display: ${props => props.display};\n`\n\nBaseAnimation.defaultProps = {  \n  duration: '1s',\n  timingFunction: 'ease',\n  delay: '0s',\n  iterationCount: '1',\n  direction: 'normal',\n  fillMode: 'both',\n  playState: 'running',\n  display: 'block'\n}; \n\nconst fadeInAnimation = keyframes`\n  from {\n    transform: scale(.25);\n    opacity: 0;\n  }\n\n  to {\n    transform: scale(1);\n    opacity: 1;\n  }\n`;\n\nconst FadeIn = styled(BaseAnimation)`\n  animation-name: ${fadeInAnimation};\n`\n\n\nconst Div = styled.div`\n  margin-top: 32px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 48px;\n  height: 375px;\n  text-align: center;\n  width: 80%;\n  direction: rtl;\n  animation: FadeIn;\n  > * {\n    direction: rtl;\n  }\n  @media (max-width: 768px) {\n    height: 40vh;\n    margin-bottom: 48px;\n    width: 80vw;\n    max-width: 80%;\n  }\n`\n\n\nconst filterBy5 = (x, i) => !(i % 4)\nconst subtractArray = arr => arr.filter(filterBy5)\n\nconst parseDatasets = (arrayOfSets, fill) => {\n  return arrayOfSets.map(set => ({\n    ...set,\n    data: set.data.length > 30 ? subtractArray(set.data) : set.data,\n    fill: fill || false\n  }))\n}\n\nconst LineChart = ( props, {theme} ) => {\n\n  const data2 = {\n    labels: props.labels.length > 30 ? subtractArray(props.labels) : props.labels,\n    datasets: parseDatasets(props.data, props.fill)\n  };\n\n  const data = canvas => {\n    const ctx = canvas.getContext('2d')\n    const gradient = ctx.createLinearGradient(0,0,100,0)\n\n    return {\n      ...data2,\n      background: gradient\n    }\n  }\n  \n\n  var options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    onAnimationComplete: function(){\n      this.showTooltip(this.datasets[0].points, true)\n    },\n    animation: {\n        easing: 'easeInOutQuad',\n        duration: 1050\n    },\n    scales: {\n        xAxes: [{\n            gridLines: {\n                color: 'rgba(200, 200, 200, 0.05)',\n                lineWidth: 1\n            }\n        }],\n        yAxes: [{\n          ticks: {\n            maxTicksLimit: 5,\n          },\n            gridLines: {\n                color: 'rgba(200, 200, 200, 0.08)',\n                lineWidth: 1\n            }\n        }]\n    },\n    elements: {\n        line: {\n            tension: 0.4\n        }\n    },\n    legend: {\n      display: props.showLegend!==undefined?false:true,\n      position: 'bottom'\n    },\n    tooltips: {\n        titleFontFamily: 'Open Sans',\n        backgroundColor: 'rgba(20,20,20, 0.4)',\n        titleFontColor: '#fff',\n        caretSize: 10,\n        cornerRadius: 5,\n        xPadding: 15,\n        yPadding: 15\n    },\n    plugins: {\n       datalabels: {\n        display: ctx => {\n          let i = ctx.dataIndex\n          return i === 0 || i === (ctx.dataset.data.length - 1) || !(i % 5)\n        },\n        align: ctx => { return ctx.dataIndex === ctx.dataset.data.length -1 ? 'start' : 'end' },\n        anchor: 'end',\n        color: props.theme.color,\n         labels: {\n           title: { font: { weight: 'bold', style: 'italic', family: 'Roboto' } }\n         }\n       }\n    }\n};\n\n  return (\n    <FadeIn duration=\"2s\" delay=\"0.059s\">\n      <Div>\n        <h1 style={{fontSize: '1.65rem'}}>{props.label}</h1>\n          <Line\n            label={props.label}\n            data={data}\n            width={100}\n            options={options}\n            // height={40}\n          />\n      </Div>\n    </FadeIn>\n  )\n}\n\nexport default withTheme(LineChart)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AAYA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AACA;AAqBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAHA;AAAA;AAKA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AAEA;AAEA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAJA;AAPA;AAiBA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AARA;AADA;AA7CA;AA6DA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;;;;A","sourceRoot":""}