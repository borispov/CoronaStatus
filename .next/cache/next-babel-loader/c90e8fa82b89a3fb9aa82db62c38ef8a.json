{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useEffect } from 'react';\n\nfunction getCountry(list) {\n  return function (queryCountry) {\n    return list.reduce(function (a, c) {\n      return c.country === queryCountry ? c : a;\n    }, {});\n  };\n}\n\nfunction useStats() {\n  var _useState = useState(),\n      stats = _useState[0],\n      setStats = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  useEffect(function () {\n    function fetchData() {\n      var data;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              console.log('fetching data...');\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(fetch('https://corona.lmao.ninja/countries').then(function (res) {\n                return res.json();\n              }).then(function (d) {\n                return getCountry(d)(\"Israel\");\n              }));\n\n            case 4:\n              data = _context.sent;\n              setStats(data);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData();\n  }, []);\n  return stats;\n}\n\nexport default useStats;","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/utils/useStats.js"],"names":["useState","useEffect","getCountry","list","queryCountry","reduce","a","c","country","useStats","stats","setStats","loading","setLoading","error","setError","fetchData","console","log","fetch","then","res","json","d","data"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAAyB;AACvB,SAAO,UAASC,YAAT,EAAuB;AAC5B,WAAOD,IAAI,CAACE,MAAL,CAAY,UAACC,CAAD,EAAGC,CAAH;AAAA,aAASA,CAAC,CAACC,OAAF,KAAcJ,YAAd,GAA6BG,CAA7B,GAAiCD,CAA1C;AAAA,KAAZ,EAAyD,EAAzD,CAAP;AACD,GAFD;AAGD;;AAED,SAASG,QAAT,GAAoB;AAAA,kBACQT,QAAQ,EADhB;AAAA,MACXU,KADW;AAAA,MACJC,QADI;;AAAA,mBAEYX,QAAQ,CAAC,KAAD,CAFpB;AAAA,MAEXY,OAFW;AAAA,MAEFC,UAFE;;AAAA,mBAGQb,QAAQ,CAAC,KAAD,CAHhB;AAAA,MAGXc,KAHW;AAAA,MAGJC,QAHI;;AAKlBd,EAAAA,SAAS,CAAC,YAAM;AACd,aAAee,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACEH,cAAAA,UAAU,CAAC,IAAD,CAAV;AACAI,cAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AAFF;AAAA,+CAIIC,KAAK,CAAC,qCAAD,CAAL,CACCC,IADD,CACM,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,eADT,EAECF,IAFD,CAEM,UAAAG,CAAC;AAAA,uBAAIrB,UAAU,CAACqB,CAAD,CAAV,CAAc,QAAd,CAAJ;AAAA,eAFP,CAJJ;;AAAA;AAGQC,cAAAA,IAHR;AAOEb,cAAAA,QAAQ,CAACa,IAAD,CAAR;;AAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASAR,IAAAA,SAAS;AACV,GAXQ,EAWN,EAXM,CAAT;AAYA,SAAON,KAAP;AACD;;AAED,eAAeD,QAAf","sourcesContent":["import { useState, useEffect } from 'react'\n\nfunction getCountry(list){\n  return function(queryCountry) {\n    return list.reduce((a,c) => c.country === queryCountry ? c : a, {})\n  }\n}\n\nfunction useStats() {\n  const [stats, setStats] = useState();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true)\n      console.log('fetching data...')\n      const data = await\n        fetch('https://corona.lmao.ninja/countries')\n        .then(res => res.json())\n        .then(d => getCountry(d)(\"Israel\"))\n      setStats(data)\n    }\n    fetchData();\n  }, [])\n  return stats\n}\n\nexport default useStats;\n"]},"metadata":{},"sourceType":"module"}