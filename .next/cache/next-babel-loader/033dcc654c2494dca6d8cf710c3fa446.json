{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/components/CoronaApp.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  &.Select--multi  {\\n    .Select-value {\\n        display: inline-flex;\\n        align-items: center;\\n        color: \", \";\\n      }\\n    }\\n\\n    & .Select-placeholder {\\n      color: \", \";\\n      font-size: smaller;\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useState, useEffect } from 'react';\nimport Input from './Input';\nimport Stats from './Stats';\nimport Header from './Header';\nimport useTime from '../utils/useTime';\nimport useTodayStats from '../utils/useTodayStats';\nimport useCountries from '../utils/useCountries';\nimport Chart from './Chart';\nimport Container from './Container';\nimport HeaderDescription from './HeaderDescription';\nimport CaseChart from './CaseChart';\nimport Select from 'react-select';\nvar MultiSelect = styled(Select)(_templateObject(), function (props) {\n  return props.theme.color;\n}, function (props) {\n  return props.theme.color;\n});\nvar allCountries = {\n  israel: '',\n  usa: '',\n  uk: '',\n  france: '',\n  lebanon: '',\n  germany: '',\n  poland: '',\n  russia: '',\n  india: '',\n  ukraine: '',\n  moldova: '',\n  spain: '',\n  italy: ''\n};\n\nvar translateCountries = function translateCountries(countries) {\n  return function (cn) {\n    return countries[Object.keys(countries).filter(function (c) {\n      return c === 'cn';\n    })];\n  };\n};\n\nexport default (function (_ref) {\n  var theme = _ref.theme,\n      lang = _ref.lang;\n\n  var _useState = useState(true),\n      showWorld = _useState[0],\n      setShowWorld = _useState[1];\n\n  var _useState2 = useState(''),\n      country = _useState2[0],\n      setCountry = _useState2[1];\n\n  var _useState3 = useState(''),\n      inputValue = _useState3[0],\n      setInput = _useState3[1];\n\n  var url = 'http://covid19.borisky.me:3003/api/v1/';\n\n  var _useTime = useTime(country),\n      countryStats = _useTime.countryStats;\n\n  var _useTodayStats = useTodayStats(url, country),\n      todayStats = _useTodayStats.todayStats;\n\n  var worldToday = useTodayStats(url, 'world').todayStats;\n\n  var _useCountries = useCountries(),\n      countries = _useCountries.countries;\n\n  var worldTodaySorted = worldToday && {\n    cases: worldToday.cases,\n    todayCases: worldToday.todayCases,\n    recovered: worldToday.recovered,\n    deaths: worldToday.deaths\n  } || '';\n  var todayStatsSorted = todayStats && {\n    cases: todayStats.cases,\n    todayCases: todayStats.todayCases,\n    recovered: todayStats.recovered,\n    deaths: todayStats.deaths\n  } || '';\n\n  var handleChange = function handleChange(selected) {\n    setCountry(selected.value);\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    setCountry(inputValue);\n  };\n\n  var selectOptions = countries && countries.map(function (a) {\n    return {\n      value: a,\n      label: a\n    };\n  });\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, __jsx(Header, {\n    title: \"Covid19 Status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), __jsx(HeaderDescription, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, countryStats && __jsx(Chart, {\n    isHeb: lang === 'heb',\n    type: \"line\",\n    labels: countryStats.labels,\n    data: countryStats.datasets.filter(function (a) {\n      return a.label === 'cases';\n    }),\n    label: country || 'israel',\n    theme: theme,\n    fill: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), __jsx(Stats, {\n    cn: country || todayStats && todayStats.country,\n    todayStats: todayStatsSorted,\n    isHeb: lang === 'heb',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), __jsx(\"form\", {\n    style: {\n      maxWidth: '520px',\n      margin: '54px auto'\n    },\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    style: {\n      fontSize: '16px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, lang === 'eng' ? \"Search For Country:\" : \"\\u05D7\\u05D9\\u05E4\\u05D5\\u05E9 \\u05DC\\u05E4\\u05D9 \\u05DE\\u05D3\\u05D9\\u05E0\\u05D4\"), __jsx(MultiSelect, {\n    styles: cStyles,\n    options: selectOptions,\n    value: country,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  })), __jsx(Stats, {\n    cn: 'World',\n    todayWorld: worldTodaySorted,\n    isHeb: lang === 'heb',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }), __jsx(CaseChart, {\n    showWorld: showWorld,\n    theme: theme,\n    country: country,\n    isHeb: lang === 'heb',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  })));\n});","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/components/CoronaApp.js"],"names":["useState","useEffect","Input","Stats","Header","useTime","useTodayStats","useCountries","Chart","Container","HeaderDescription","CaseChart","Select","MultiSelect","styled","props","theme","color","allCountries","israel","usa","uk","france","lebanon","germany","poland","russia","india","ukraine","moldova","spain","italy","translateCountries","countries","cn","Object","keys","filter","c","lang","showWorld","setShowWorld","country","setCountry","inputValue","setInput","url","countryStats","todayStats","worldToday","worldTodaySorted","cases","todayCases","recovered","deaths","todayStatsSorted","handleChange","selected","value","handleSubmit","e","preventDefault","selectOptions","map","a","label","labels","datasets","maxWidth","margin","fontSize","cStyles"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport Input from './Input'\nimport Stats from './Stats'\nimport Header from './Header'\nimport useTime from '../utils/useTime'\nimport useTodayStats from '../utils/useTodayStats'\nimport useCountries from '../utils/useCountries'\nimport Chart from './Chart'\nimport Container from './Container'\nimport HeaderDescription from './HeaderDescription'\nimport CaseChart from './CaseChart'\nimport Select from 'react-select'\n\nconst MultiSelect = styled(Select)`\n  &.Select--multi  {\n    .Select-value {\n        display: inline-flex;\n        align-items: center;\n        color: ${props => props.theme.color};\n      }\n    }\n\n    & .Select-placeholder {\n      color: ${props => props.theme.color};\n      font-size: smaller;\n    }\n`\n\nconst allCountries = {\n  israel: '',\n  usa: '',\n  uk: '',\n  france: '',\n  lebanon: '',\n  germany: '',\n  poland: '',\n  russia: '',\n  india: '',\n  ukraine: '',\n  moldova: '',\n  spain: '',\n  italy: '',\n}\nconst translateCountries = countries => cn => countries[Object.keys(countries).filter(c => c === 'cn')]\n\n\nexport default ({ theme, lang}) => {\n\n  const [showWorld, setShowWorld] = useState(true)\n  const [country, setCountry] = useState('')\n  const [inputValue, setInput] = useState('')\n\n  const url = 'http://covid19.borisky.me:3003/api/v1/'\n\n  const { countryStats } = useTime(country)\n  const { todayStats } = useTodayStats(url, country)\n  const worldToday = useTodayStats(url, 'world').todayStats\n\n  const { countries } = useCountries()\n\n  const worldTodaySorted = worldToday &&\n    {\n      cases: worldToday.cases,\n      todayCases: worldToday.todayCases,\n      recovered: worldToday.recovered,\n      deaths: worldToday.deaths\n    } || ''\n\n  const todayStatsSorted = todayStats && \n    {\n      cases: todayStats.cases,\n      todayCases: todayStats.todayCases,\n      recovered: todayStats.recovered,\n      deaths: todayStats.deaths\n    } || ''\n\n  const handleChange = selected => {\n    setCountry(selected.value)\n  }\n  const handleSubmit = e => {\n    e.preventDefault();\n    setCountry(inputValue)\n  }\n\n  const selectOptions = countries && countries.map(a => ({ value: a, label: a }))\n\n  return (\n    <div>\n      <Header title='Covid19 Status' />\n      <HeaderDescription />\n\n      <Container>\n\n      {\n        countryStats &&\n          (\n              <Chart\n                isHeb={lang === 'heb'}\n                type='line'\n                labels={countryStats.labels}\n                data={countryStats.datasets.filter(a => a.label === 'cases')}\n                label={country || 'israel'}\n                theme={theme}\n                fill={true}\n              />\n          )\n      }\n      <Stats\n        cn={country || todayStats && todayStats.country}\n        todayStats={todayStatsSorted}\n        isHeb={lang === 'heb'}\n      />\n\n      <form \n        style={{ maxWidth: '520px', margin: '54px auto'}}\n        onSubmit={handleSubmit}>\n\n        <label style={{fontSize: '16px'}}>\n          {\n            lang === 'eng'\n            ? `Search For Country:`\n            : `חיפוש לפי מדינה`\n          }\n        </label>\n\n        <MultiSelect\n          styles={cStyles}\n          options={selectOptions}\n          value={country}\n          onChange={handleChange}\n        />\n      </form>\n\n      <Stats\n        cn={'World'}\n        todayWorld={worldTodaySorted}\n        isHeb={lang==='heb'}\n      />\n\n      <CaseChart\n        showWorld={showWorld} \n        theme={theme}\n        country={country}\n        isHeb={lang === 'heb'}\n      />\n\n    </Container>\n\n    </div>\n  )\n  \n\n}\n"]},"metadata":{},"sourceType":"module"}