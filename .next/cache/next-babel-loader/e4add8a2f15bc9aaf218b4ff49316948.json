{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport sortForChart from './sortForChart';\nconst baseURL = `http://46.101.156.51:3003/api/v1/alltime/`;\n\nasync function currentCountry() {\n  return await axios.get('https://extreme-ip-lookup.com/json/').then(res => res.data.country).catch(e => 'israel');\n}\n\nfunction useTime(country = 'world', url = baseURL) {\n  const {\n    0: timeStats,\n    1: setData\n  } = useState();\n  const {\n    0: timeLoading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: timeError,\n    1: setError\n  } = useState(false);\n  useEffect(() => {\n    console.log('use time triggered');\n\n    async function fetchData() {\n      setLoading(true);\n      setError();\n      const URL = country === 'init' ? baseURL + (await currentCountry()) : country !== 'world' ? baseURL + country : baseURL;\n      const data = await axios.get(URL).then(res => res.data).catch(err => setError(err));\n      const timeStats = sortForChart(data);\n      setData(timeStats);\n      setLoading(false);\n      console.log(country === 'init' && timeStats);\n    }\n\n    fetchData();\n  }, [country]);\n\n  if (country !== 'world') {\n    const counntryStats = timeStats;\n    const counntryLoading = timeLoading;\n    const counntryError = timeError;\n    return {\n      counntryStats,\n      counntryLoading,\n      counntryError\n    };\n  }\n\n  return {\n    timeStats,\n    timeLoading,\n    timeError\n  };\n}\n\nexport default useTime;","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/utils/useTime.js"],"names":["useState","useEffect","axios","sortForChart","baseURL","currentCountry","get","then","res","data","country","catch","e","useTime","url","timeStats","setData","timeLoading","setLoading","timeError","setError","console","log","fetchData","URL","err","counntryStats","counntryLoading","counntryError"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,MAAMC,OAAO,GAAI,2CAAjB;;AAEA,eAAeC,cAAf,GAA+B;AAC7B,SAAO,MAAMH,KAAK,CACfI,GADU,CACN,qCADM,EAEVC,IAFU,CAELC,GAAG,IAAIA,GAAG,CAACC,IAAJ,CAASC,OAFX,EAGVC,KAHU,CAGJC,CAAC,IAAI,QAHD,CAAb;AAID;;AAED,SAASC,OAAT,CAAiBH,OAAO,GAAG,OAA3B,EAAoCI,GAAG,GAAGV,OAA1C,EAAmD;AACjD,QAAM;AAAA,OAACW,SAAD;AAAA,OAAYC;AAAZ,MAAuBhB,QAAQ,EAArC;AACA,QAAM;AAAA,OAACiB,WAAD;AAAA,OAAcC;AAAd,MAA4BlB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAA,OAACmB,SAAD;AAAA,OAAYC;AAAZ,MAAwBpB,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;;AACA,mBAAeC,SAAf,GAA2B;AACzBL,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,MAAAA,QAAQ;AAER,YAAMI,GAAG,GAAGd,OAAO,KAAK,MAAZ,GACRN,OAAO,IAAG,MAAMC,cAAc,EAAvB,CADC,GAERK,OAAO,KAAK,OAAZ,GACEN,OAAO,GAACM,OADV,GAEEN,OAJN;AAMA,YAAMK,IAAI,GAAG,MAAMP,KAAK,CAACI,GAAN,CAAUkB,GAAV,EAChBjB,IADgB,CACXC,GAAG,IAAIA,GAAG,CAACC,IADA,EAEhBE,KAFgB,CAEVc,GAAG,IAAIL,QAAQ,CAACK,GAAD,CAFL,CAAnB;AAGA,YAAMV,SAAS,GAAGZ,YAAY,CAACM,IAAD,CAA9B;AACAO,MAAAA,OAAO,CAACD,SAAD,CAAP;AACAG,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAO,KAAK,MAAZ,IAAsBK,SAAlC;AACD;;AAEDQ,IAAAA,SAAS;AACV,GAtBQ,EAsBN,CAACb,OAAD,CAtBM,CAAT;;AAwBA,MAAKA,OAAO,KAAK,OAAjB,EAA2B;AACzB,UAAMgB,aAAa,GAAGX,SAAtB;AACA,UAAMY,eAAe,GAAGV,WAAxB;AACA,UAAMW,aAAa,GAAGT,SAAtB;AACA,WAAO;AAAEO,MAAAA,aAAF;AAAiBC,MAAAA,eAAjB;AAAkCC,MAAAA;AAAlC,KAAP;AACD;;AAED,SAAO;AACLb,IAAAA,SADK;AACME,IAAAA,WADN;AACmBE,IAAAA;AADnB,GAAP;AAGD;;AAED,eAAeN,OAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport sortForChart from './sortForChart'\n\nconst baseURL = `http://46.101.156.51:3003/api/v1/alltime/`\n\nasync function currentCountry(){\n  return await axios\n    .get('https://extreme-ip-lookup.com/json/')\n    .then(res => res.data.country)\n    .catch(e => 'israel')\n}\n\nfunction useTime(country = 'world', url = baseURL) {\n  const [timeStats, setData] = useState();\n  const [timeLoading, setLoading] = useState(false);\n  const [timeError, setError] = useState(false);\n\n  useEffect(() => {\n    console.log('use time triggered');\n    async function fetchData() {\n      setLoading(true)\n      setError()\n\n      const URL = country === 'init' \n        ? baseURL + await currentCountry() \n        : country !== 'world' \n          ? baseURL+country \n          : baseURL\n\n      const data = await axios.get(URL)\n        .then(res => res.data)\n        .catch(err => setError(err))\n      const timeStats = sortForChart(data);\n      setData(timeStats)\n      setLoading(false)\n      console.log(country === 'init' && timeStats);\n    }\n\n    fetchData();\n  }, [country])\n\n  if ( country !== 'world' ) {\n    const counntryStats = timeStats\n    const counntryLoading = timeLoading\n    const counntryError = timeError\n    return { counntryStats, counntryLoading, counntryError }\n  }\n\n  return {\n    timeStats, timeLoading, timeError\n  }\n}\n\nexport default useTime;\n"]},"metadata":{},"sourceType":"module"}