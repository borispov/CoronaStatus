{"ast":null,"code":"import { useState, useEffect, useReducer } from 'react';\nimport axios from 'axios';\nimport sortForChart from './sortForChart';\nconst baseURL = `http://46.101.156.51:3003/api/v1/alltime/`;\n\nasync function currentCountry() {\n  return await axios.get('https://extreme-ip-lookup.com/json/').then(res => res.data.country).catch(e => 'israel');\n} // function useTime(loc, url = baseURL) {\n\n\nfunction useTime(loc) {\n  let geoLocation = currentCountry();\n  const {\n    0: countryStats,\n    1: setCountryStats\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState(false);\n  const {\n    0: country,\n    1: setCountry\n  } = useState(geoLocation);\n  useEffect(() => {\n    async function fetchData(cn) {\n      setLoading(true);\n      setError(); // if (!country || !country.length) {\n      //   setCountry(geoLocation)\n      // }\n\n      const URL = baseURL + country;\n      console.log(URL);\n      const data = await axios.get(URL).then(res => res.data).catch(err => setError(err));\n      const timeStats = sortForChart(data);\n      setCountryStats(timeStats);\n      setLoading(false);\n    }\n\n    fetchData(country);\n  }, [country]);\n  return {\n    countryStats,\n    loading,\n    error\n  };\n}\n\nexport default useTime;","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/utils/useTime.js"],"names":["useState","useEffect","useReducer","axios","sortForChart","baseURL","currentCountry","get","then","res","data","country","catch","e","useTime","loc","geoLocation","countryStats","setCountryStats","loading","setLoading","error","setError","setCountry","fetchData","cn","URL","console","log","err","timeStats"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,MAAMC,OAAO,GAAI,2CAAjB;;AAEA,eAAeC,cAAf,GAA+B;AAC7B,SAAO,MAAMH,KAAK,CACfI,GADU,CACN,qCADM,EAEVC,IAFU,CAELC,GAAG,IAAIA,GAAG,CAACC,IAAJ,CAASC,OAFX,EAGVC,KAHU,CAGJC,CAAC,IAAI,QAHD,CAAb;AAID,C,CAED;;;AACA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AAEpB,MAAIC,WAAW,GAAGV,cAAc,EAAhC;AAEA,QAAM;AAAA,OAACW,YAAD;AAAA,OAAeC;AAAf,MAAkClB,QAAQ,EAAhD;AACA,QAAM;AAAA,OAACmB,OAAD;AAAA,OAAUC;AAAV,MAAwBpB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACqB,KAAD;AAAA,OAAQC;AAAR,MAAoBtB,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM;AAAA,OAACW,OAAD;AAAA,OAAUY;AAAV,MAAwBvB,QAAQ,CAACgB,WAAD,CAAtC;AAGAf,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeuB,SAAf,CAAyBC,EAAzB,EAA6B;AAC3BL,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,MAAAA,QAAQ,GAFmB,CAG3B;AACA;AACA;;AACA,YAAMI,GAAG,GAAGrB,OAAO,GAAGM,OAAtB;AACAgB,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,YAAMhB,IAAI,GAAG,MAAMP,KAAK,CAACI,GAAN,CAAUmB,GAAV,EAChBlB,IADgB,CACXC,GAAG,IAAIA,GAAG,CAACC,IADA,EAEhBE,KAFgB,CAEViB,GAAG,IAAIP,QAAQ,CAACO,GAAD,CAFL,CAAnB;AAGA,YAAMC,SAAS,GAAG1B,YAAY,CAACM,IAAD,CAA9B;AACAQ,MAAAA,eAAe,CAACY,SAAD,CAAf;AACAV,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AACDI,IAAAA,SAAS,CAACb,OAAD,CAAT;AAED,GAlBQ,EAkBN,CAACA,OAAD,CAlBM,CAAT;AAoBA,SAAO;AACLM,IAAAA,YADK;AACSE,IAAAA,OADT;AACkBE,IAAAA;AADlB,GAAP;AAGD;;AAED,eAAeP,OAAf","sourcesContent":["import { useState, useEffect, useReducer } from 'react'\nimport axios from 'axios'\nimport sortForChart from './sortForChart'\n\nconst baseURL = `http://46.101.156.51:3003/api/v1/alltime/`\n\nasync function currentCountry(){\n  return await axios\n    .get('https://extreme-ip-lookup.com/json/')\n    .then(res => res.data.country)\n    .catch(e => 'israel')\n}\n\n// function useTime(loc, url = baseURL) {\nfunction useTime(loc) {\n\n  let geoLocation = currentCountry()\n\n  const [countryStats, setCountryStats] = useState();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [country, setCountry] = useState(geoLocation)\n\n\n  useEffect(() => {\n    async function fetchData(cn) {\n      setLoading(true)\n      setError()\n      // if (!country || !country.length) {\n      //   setCountry(geoLocation)\n      // }\n      const URL = baseURL + country\n      console.log(URL);\n      const data = await axios.get(URL)\n        .then(res => res.data)\n        .catch(err => setError(err))\n      const timeStats = sortForChart(data);\n      setCountryStats(timeStats)\n      setLoading(false)\n    }\n    fetchData(country)\n\n  }, [country])\n\n  return {\n    countryStats, loading, error\n  }\n}\n\nexport default useTime;\n"]},"metadata":{},"sourceType":"module"}