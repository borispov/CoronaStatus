{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport App from 'next/app';\nimport Router from 'next/router';\nimport Link from 'next/link';\nimport { useState, useRef, useEffect, useContext } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport axios from 'axios';\nimport { getInitialLocale } from '../locales/getInitialLocale';\nimport { LocaleProvider, LocaleContext } from '../context/proxy-context';\nimport { ProxyContextProvider } from '../context/proxy-context';\nimport useOutSide from '../utils/useOutSide';\nimport GlobalStyle from './Global';\nimport Header from '../components/Header';\nimport Burger from '../components/Burger';\nimport Menu from '../components/Menu';\nimport { MoonIcon, SunIcon, WorldIcon } from '../components/Icons/ThemeIcon';\nimport { themes } from '../utils/themes';\nimport * as gtag from '../utils/gtag';\n\nvar getCountryFromData = function getCountryFromData(response) {\n  return response.data.country;\n};\n\nvar currentCountry = function currentCountry(url) {\n  return _regeneratorRuntime.async(function currentCountry$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(url).then(getCountryFromData)[\"catch\"](function (e) {\n            return 'israel';\n          }));\n\n        case 2:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}; // async function currentCountry(url){\n//   return await axios\n//     .get(url)\n//     .then( res => res.data.country)\n//     .catch(e => 'israel')\n// }\n\n\nRouter.events.on('routeChangeComplete', function (url) {\n  return gtag.pageview(url);\n});\n\nvar lightTheme = function lightTheme() {\n  return _objectSpread({}, themes['common'], {}, themes['light']);\n};\n\nvar darkTheme = function darkTheme() {\n  return _objectSpread({}, themes['common'], {}, themes['dark']);\n};\n\nfunction MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps,\n      newProxy = _ref.newProxy;\n\n  var _useContext = useContext(LocaleContext),\n      locale = _useContext[0],\n      setLocale = _useContext[1];\n\n  useEffect(function () {\n    var ig = false;\n\n    if (locale && !ig) {\n      var loc = getInitialLocale(newProxy && newProxy.countryName);\n      setLocale(loc);\n    }\n  }, [locale]);\n\n  var _useState = useState(lightTheme()),\n      theme = _useState[0],\n      setTheme = _useState[1];\n\n  var _useState2 = useState(newProxy && newProxy.countryName.toLowerCase() === 'israel' ? true : false),\n      isHeb = _useState2[0],\n      setHeb = _useState2[1];\n\n  var _useState3 = useState(false),\n      menuOpen = _useState3[0],\n      setOpen = _useState3[1];\n\n  var closeMenu = function closeMenu() {\n    return setOpen(false);\n  };\n\n  var toggleMenu = function toggleMenu() {\n    return setOpen(!menuOpen);\n  };\n\n  var toggleLang = function toggleLang() {\n    closeMenu(), setHeb(!isHeb);\n  };\n\n  var setDarkTheme = function setDarkTheme() {\n    closeMenu(), setTheme(darkTheme());\n  };\n\n  var setLightTheme = function setLightTheme() {\n    closeMenu(), setTheme(lightTheme());\n  };\n\n  var node = useRef();\n  useOutSide(node, closeMenu);\n  var displayLang = isHeb ? 'English' : 'עברית';\n  var isLight = theme.type === 'light';\n  return __jsx(ProxyContextProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(ThemeProvider, {\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, __jsx(GlobalStyle, {\n    isHeb: isHeb,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), __jsx(LocaleProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, __jsx(Header, {\n    title: \"nCorona\",\n    isHeb: isHeb,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    ref: node,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(Burger, {\n    setOpen: toggleMenu,\n    open: menuOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), __jsx(Menu, {\n    setOpen: toggleMenu,\n    open: menuOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/News\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    alt: \"news\",\n    onClick: function onClick() {\n      return closeMenu();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"\\uD83D\\uDCF0\"), isHeb && 'חדשות' || 'News')), __jsx(Link, {\n    href: \"/Statistics\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    alt: \"stats\",\n    onClick: function onClick() {\n      return closeMenu();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \" \\uD83D\\uDDFA\"), isHeb && 'נתונים' || 'Data')), __jsx(Link, {\n    href: \"/About\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    alt: \"about\",\n    onClick: function onClick() {\n      return closeMenu();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \" \\uD83D\\uDDFA\"), isHeb && 'אודות' || 'About')), __jsx(\"a\", {\n    onClick: toggleLang,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"\\uD83C\\uDF10\"), displayLang)))), __jsx(Component, _extends({}, pageProps, {\n    isHeb: isHeb,\n    newProxy: newProxy,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  })))));\n}\n\nMyApp.getInitialProps = function _callee(appContext) {\n  var appProps, proxyUrl, req, ipAddress, localAddresses, countryName, newProxy;\n  return _regeneratorRuntime.async(function _callee$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(App.getInitialProps(appContext));\n\n        case 2:\n          appProps = _context2.sent;\n          req = appContext.ctx && appContext.ctx.req;\n\n          if (!req) {\n            _context2.next = 19;\n            break;\n          }\n\n          // grab client's ip address\n          ipAddress = req.headers['x-forwarded-for'] || req.connection.remoteAddress;\n          localAddresses = ['::1', '127.0.0.1', 'localhost']; // Construct URL with IP ADDRESS\n\n          if (!localAddresses.includes(ipAddress)) {\n            proxyUrl = \"https://extreme-ip-lookup.com/json/\".concat(ipAddress);\n          }\n\n          _context2.prev = 8;\n          _context2.next = 11;\n          return _regeneratorRuntime.awrap(currentCountry(proxyUrl));\n\n        case 11:\n          countryName = _context2.sent;\n          newProxy = {\n            countryName: countryName,\n            ipAddress: ipAddress\n          };\n          return _context2.abrupt(\"return\", _objectSpread({\n            newProxy: newProxy\n          }, appProps));\n\n        case 16:\n          _context2.prev = 16;\n          _context2.t0 = _context2[\"catch\"](8);\n          return _context2.abrupt(\"return\", _objectSpread({\n            errorCode: _context2.t0.code,\n            errorMessage: _context2.t0.message\n          }, appProps));\n\n        case 19:\n          return _context2.abrupt(\"return\", _objectSpread({}, appProps, {\n            newProxy: null\n          }));\n\n        case 20:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[8, 16]], Promise);\n};\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/pages/_app.js"],"names":["App","Router","Link","useState","useRef","useEffect","useContext","ThemeProvider","axios","getInitialLocale","LocaleProvider","LocaleContext","ProxyContextProvider","useOutSide","GlobalStyle","Header","Burger","Menu","MoonIcon","SunIcon","WorldIcon","themes","gtag","getCountryFromData","response","data","country","currentCountry","url","get","then","e","events","on","pageview","lightTheme","darkTheme","MyApp","Component","pageProps","newProxy","locale","setLocale","ig","loc","countryName","theme","setTheme","toLowerCase","isHeb","setHeb","menuOpen","setOpen","closeMenu","toggleMenu","toggleLang","setDarkTheme","setLightTheme","node","displayLang","isLight","type","getInitialProps","appContext","appProps","req","ctx","ipAddress","headers","connection","remoteAddress","localAddresses","includes","proxyUrl","errorCode","code","errorMessage","message"],"mappings":"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","sourcesContent":["import App from 'next/app'\nimport Router from 'next/router'\nimport Link from 'next/link';\nimport { useState, useRef, useEffect, useContext } from 'react'\nimport { ThemeProvider } from 'styled-components'\nimport axios from 'axios'\n\nimport { getInitialLocale } from '../locales/getInitialLocale'\nimport { LocaleProvider, LocaleContext } from '../context/proxy-context'\nimport { ProxyContextProvider } from '../context/proxy-context'\nimport useOutSide from '../utils/useOutSide'\nimport GlobalStyle from './Global'\nimport Header from '../components/Header'\nimport Burger from '../components/Burger';\nimport Menu from '../components/Menu';\nimport { MoonIcon, SunIcon, WorldIcon } from '../components/Icons/ThemeIcon'\nimport { themes } from '../utils/themes'\nimport * as gtag from '../utils/gtag'\n\nconst getCountryFromData = response => response.data.country\nconst currentCountry = async (url) => await axios.get(url).then(getCountryFromData).catch(e => 'israel')\n\n// async function currentCountry(url){\n//   return await axios\n//     .get(url)\n//     .then( res => res.data.country)\n//     .catch(e => 'israel')\n// }\n\nRouter.events.on('routeChangeComplete', url => gtag.pageview(url))\n\nconst lightTheme = () => ({\n  ...themes['common'],\n  ...themes['light'],\n})\n\nconst darkTheme = () => ({\n  ...themes['common'],\n  ...themes['dark'],\n})\n\n\nfunction MyApp ({ Component, pageProps, newProxy }) {\n\n  const [locale, setLocale] = useContext(LocaleContext)\n  useEffect(() => {\n    let ig = false\n    if (locale && !ig) {\n      let loc = getInitialLocale(newProxy && newProxy.countryName)\n      setLocale(loc)\n    }\n  }, [locale])\n\n\n  const [theme, setTheme] = useState(lightTheme())\n  const [isHeb, setHeb] = useState(newProxy && newProxy.countryName.toLowerCase() === 'israel' ? true : false)\n  const [menuOpen, setOpen] = useState(false)\n\n  const closeMenu     = () => setOpen(false)\n  const toggleMenu    = () => setOpen(!menuOpen)\n  const toggleLang    = () => {closeMenu(), setHeb(!isHeb)}\n  const setDarkTheme  = () => {closeMenu(), setTheme(darkTheme())}\n  const setLightTheme = () => {closeMenu(), setTheme(lightTheme())}\n\n  const node          = useRef()\n  useOutSide(node, closeMenu)\n\n  const displayLang   = isHeb ? 'English' : 'עברית'\n  const isLight       = theme.type === 'light'\n\n  return (\n    <ProxyContextProvider>\n      <ThemeProvider theme={theme}>\n        <GlobalStyle isHeb={isHeb}/>\n        <LocaleProvider>\n\n          <Header title='nCorona' isHeb={isHeb} >\n            <div ref={node}>\n              <Burger setOpen={toggleMenu} open={menuOpen} />\n              <Menu setOpen={toggleMenu} open={menuOpen} >\n\n                <Link href=\"/News\">\n                  <a alt=\"news\" onClick={() => closeMenu()}>\n                    <span>&#128240;</span>\n                    { isHeb && 'חדשות' || 'News' }\n                  </a>\n                </Link>\n\n                <Link href=\"/Statistics\">\n                  <a alt=\"stats\" onClick={() => closeMenu()}>\n                    <span>\t&#128506;</span>\n                    { isHeb && 'נתונים' || 'Data' }\n                  </a>\n                </Link>\n\n                <Link href=\"/About\">\n                  <a alt=\"about\" onClick={() => closeMenu()}>\n                    <span>\t&#128506;</span>\n                    { isHeb && 'אודות' || 'About' }\n                  </a>\n                </Link>\n\n        {/*\n        // This is Night Mode.. Currently disabled\n                <a onClick={isLight ?setDarkTheme : setLightTheme}>\n                  <span>{ isLight ? '🌒' : '🌞'}</span>\n                  {\n                    isLight\n                    ? (isHeb && 'מצב לילה' || 'Dark Mode')\n                    : (isHeb && 'מצב יום' || 'Light Mode')\n                  }\n                </a>\n        */}\n\n                <a onClick={toggleLang}>\n                  <span>&#127760;</span>\n                  {displayLang}\n                </a>\n\n              </Menu>\n            </div>\n\n          </Header>\n          <Component {...pageProps} isHeb={isHeb} newProxy={newProxy} />\n\n        </LocaleProvider>\n\n      </ThemeProvider>\n    </ProxyContextProvider>\n  )\n}\n\n\nMyApp.getInitialProps = async (appContext) => {\n  const appProps = await App.getInitialProps(appContext)\n  let proxyUrl\n  const req = appContext.ctx && appContext.ctx.req\n\n  if (req) {\n    // grab client's ip address\n    const ipAddress = req.headers['x-forwarded-for'] || req.connection.remoteAddress\n    const localAddresses = ['::1', '127.0.0.1', 'localhost']\n    // Construct URL with IP ADDRESS\n    if (!localAddresses.includes(ipAddress)) {\n      proxyUrl = `https://extreme-ip-lookup.com/json/${ipAddress}`\n    }\n    try {\n      const countryName = await currentCountry(proxyUrl)\n      const newProxy = { countryName, ipAddress }\n      return { newProxy, ...appProps }\n    } catch(e) {\n      return { errorCode: e.code, errorMessage: e.message, ...appProps }\n    }\n  }\n  return { ...appProps, newProxy: null }\n}\n\nexport default MyApp\n"]},"metadata":{},"sourceType":"module"}