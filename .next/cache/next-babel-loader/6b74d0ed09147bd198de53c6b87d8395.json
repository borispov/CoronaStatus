{"ast":null,"code":"var _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/components/QuickStats.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled from 'styled-components';\nimport { Container } from './S';\n\nconst formatNumber = x => x.toString().split('').reverse().map((x, i) => i % 3 === 0 ? x + ',' : x).reverse().join('').slice(0, -1);\n\nconst Column = styled.div.withConfig({\n  displayName: \"QuickStats__Column\",\n  componentId: \"lmgi17-0\"\n})([\"display:flex;flex-flow:column wrap;direction:\", \";align-items:start;width:100%;background:#fafafa;padding:16px 3em 12px;border-radius:2px;border-bottom:1px solid #e4e7eb;@media (min-width:660px){box-shadow:none;border:1px solid #e4e7eb;height:auto;flex:1 0 \", \";}&:last-child{border-bottom:none;}\"], props => props.ltr ? 'ltr' : 'rtl', props => props.world ? '249px' : '235px');\nconst InRow = styled.div.withConfig({\n  displayName: \"QuickStats__InRow\",\n  componentId: \"lmgi17-1\"\n})([\"display:flex;flex-flow:row wrap;font-weight:700;color:\", \";justify-content:\", \";width:100%;line-height:1.45;\"], props => props.theme.primaryColor, props => props.justify || 'space-between');\nconst TheRow = styled.div.withConfig({\n  displayName: \"QuickStats__TheRow\",\n  componentId: \"lmgi17-2\"\n})([\"display:flex;flex-flow:column wrap;justify-content:center;box-shadow:\", \";margin-bottom:28px;border-radius:8px;border:1px solid #e4e7eb;margin-left:auto;margin-right:auto;@media (min-width:660px) and (max-width:920px){max-width:620px;flex-flow:\", \";}@media (min-width:921px) and (max-width:1023px){max-width:\", \";flex-flow:\", \";}@media (min-width:1024px){max-width:1064px;flex-flow:\", \";}\"], props => props.theme.shadows[1], props => props.world ? 'row wrap' : 'row wrap', props => props.world ? '900px' : '620px', props => props.world ? 'row wrap' : 'row wrap', props => props.world ? 'row wrap' : 'row wrap');\nconst Percentage = styled.h1.withConfig({\n  displayName: \"QuickStats__Percentage\",\n  componentId: \"lmgi17-3\"\n})([\"font-size:10px;font-weight:500;color:\", \";align-self:flex-end;padding-bottom:2px;border-radius:12px;background:#DFF7EC;padding:0.5em 1em;span{font-family:'Verdana';background:#DFF7EC;color:\", \";}@media (min-width:350px){font-size:12px;}\"], props => props.theme.text.secondary, props => props.theme.primaryLight);\nconst Header = styled.div.withConfig({\n  displayName: \"QuickStats__Header\",\n  componentId: \"lmgi17-4\"\n})([\"font-size:20px;font-weight:500;color:\", \";width:auto;letter-spacing:0.1px;line-height:1.85;@media (min-width:660px) and (max-width:920px){font-size:12px;line-height:1.65;letter-spacing:0.025px;}@media (min-width:921px) and (max-width:1023px){font-size:14px;}@media (min-width:1024px){font-size:16x;}\"], props => props.theme.text.primary);\nconst Number = styled.h1.withConfig({\n  displayName: \"QuickStats__Number\",\n  componentId: \"lmgi17-5\"\n})([\"font-size:24px;font-weight:700;color:\", \";letter-spacing:0.4px;font-family:'Montserrat';padding:0;margin:0;line-height:1.65;span{font-size:10px;font-family:'Montserrat';letter-spacing:-0.2px;color:#717171;margin-left:1em;margin-right:1em;margin-bottom:4px;}@media (min-width:660px) and (max-width:920px){h1{font-size:14px;line-height:1.65;letter-spacing:0.5px;}}@media (min-width:921px) and (max-width:1023px){h1{font-size:12px;letter-spacing:0.8px;}}@media (min-width:1024px){h1{font-size:16px;}}\"], props => props.theme.primaryVariant);\n\nconst isPercentDown = x => x < 0;\n\nconst showPercent = x => x !== 0;\n\nconst calcDiff = current => prev => current !== 0 ? ((current - prev) / prev * 100).toFixed(2) : 0; // Percentage of increase = |100 - 150|/100 = 50/100 = 0.5 = 50%\n\n\nconst labels = {\n  cases: {\n    heb: 'מאומתים',\n    eng: 'Confirmed'\n  },\n  todayCases: {\n    heb: 'מקרים חדשים',\n    eng: 'New Cases'\n  },\n  deaths: {\n    heb: 'נפטרו',\n    eng: 'Deaths'\n  },\n  recovered: {\n    heb: 'החלימו',\n    eng: 'Recovered'\n  },\n  active: {\n    heb: 'פעילים',\n    eng: 'Active'\n  },\n  affectedCountries: {\n    heb: 'מדינות נגועות',\n    eng: 'Infected Countries'\n  }\n};\n\nconst engLbl = k => labels[k]['eng'];\n\nconst hebLbl = k => labels[k]['heb'];\n\nconst putLabel = (heb, k) => heb && hebLbl(k) || engLbl(k);\n\nexport default (({\n  S,\n  country,\n  isHeb,\n  yday,\n  comparison = true\n}) => {\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, __jsx(TheRow, {\n    world: country.toLowerCase() === 'world',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, Object.keys(S).map((k, i) => {\n    return __jsx(Column, {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, __jsx(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \" \", putLabel(isHeb, k)), __jsx(InRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, __jsx(Number, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, S[k] && formatNumber(S[k]), comparison && yday && country !== 'world' && country !== 'World' && __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"(\", formatNumber(yday[k]), \")\")), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }), comparison && yday && __jsx(Percentage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, calcDiff(S[k])(yday[k]) < 0 && \"\\u2B07\" || '\\u2B06'), \"%\", Math.abs(calcDiff(S[k])(yday[k])))));\n  })));\n});","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/components/QuickStats.js"],"names":["styled","Container","formatNumber","x","toString","split","reverse","map","i","join","slice","Column","div","props","ltr","world","InRow","theme","primaryColor","justify","TheRow","shadows","Percentage","h1","text","secondary","primaryLight","Header","primary","Number","primaryVariant","isPercentDown","showPercent","calcDiff","current","prev","toFixed","labels","cases","heb","eng","todayCases","deaths","recovered","active","affectedCountries","engLbl","k","hebLbl","putLabel","S","country","isHeb","yday","comparison","toLowerCase","Object","keys","Math","abs"],"mappings":"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","sourcesContent":["import styled from 'styled-components'\nimport { Container } from './S'\n\nconst formatNumber = x => x\n  .toString()\n  .split('')\n  .reverse()\n  .map((x,i) => i % 3 === 0 ? x + ',' : x)\n  .reverse()\n  .join('')\n  .slice(0, -1)\n\nconst Column = styled.div`\n  display: flex;\n  flex-flow: column wrap;\n  direction: ${props => props.ltr ? 'ltr' : 'rtl'};\n  align-items: start;\n  // justify-content: center;\n\n  width: 100%;\n  background: #fafafa;\n  padding: 16px 3em 12px;\n  border-radius: 2px;\n  border-bottom: 1px solid #e4e7eb;\n\n  @media (min-width: 660px) {\n    box-shadow: none;\n    border: 1px solid #e4e7eb;\n    height: auto;\n    flex: 1 0 ${props => props.world ? '249px' : '235px'};\n  }\n\n  &:last-child {\n    border-bottom: none;\n  }\n\n`\n\nconst InRow = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  font-weight: 700;\n  color: ${props => props.theme.primaryColor};\n  justify-content: ${props => props.justify || 'space-between'};\n  width: 100%;\n  line-height: 1.45;\n`\n\nconst TheRow = styled.div`\n  display: flex;\n  flex-flow: column wrap;\n  justify-content: center;\n  box-shadow: ${props => props.theme.shadows[1]};\n  margin-bottom: 28px;\n  border-radius: 8px;\n  border: 1px solid #e4e7eb;\n  margin-left: auto;\n  margin-right: auto;\n  @media (min-width:660px) and (max-width: 920px) {\n    max-width: 620px;\n    flex-flow: ${props => props.world ? 'row wrap' : 'row wrap'};\n  }\n  @media (min-width: 921px) and (max-width: 1023px) {\n    max-width: ${props => props.world ? '900px' : '620px'};\n    flex-flow: ${props => props.world ? 'row wrap' : 'row wrap'};\n  }\n  @media (min-width: 1024px) {\n    max-width: 1064px;\n    flex-flow: ${props => props.world ? 'row wrap' : 'row wrap'};\n  }\n`\n\nconst Percentage = styled.h1`\n  font-size: 10px;\n  font-weight: 500;\n  color: ${props => props.theme.text.secondary};\n  align-self: flex-end;\n  padding-bottom: 2px;\n  border-radius: 12px;\n  background: #DFF7EC;\n  padding: 0.5em 1em;\n  span {\n    font-family: 'Verdana';\n    background: #DFF7EC;\n    color: ${props => props.theme.primaryLight};\n  }\n\n  @media (min-width: 350px) {\n    font-size: 12px;\n  }\n\n`\n\nconst Header = styled.div`\n  font-size: 20px;\n  font-weight: 500;\n  color: ${props => props.theme.text.primary};\n  width: auto;\n  letter-spacing: 0.1px;\n  line-height: 1.85;\n\n  @media (min-width:660px) and (max-width: 920px) {\n    font-size: 12px;\n    line-height: 1.65;\n    letter-spacing: 0.025px;\n  }\n  @media (min-width: 921px) and (max-width: 1023px) {\n    font-size: 14px;\n  }\n  @media (min-width: 1024px) {\n    font-size: 16x;\n  }\n`\n\nconst Number = styled.h1`\n  font-size: 24px;\n  font-weight: 700;\n  color: ${props => props.theme.primaryVariant};\n  letter-spacing: 0.4px;\n  font-family: 'Montserrat';\n  padding: 0;\n  margin: 0;\n  line-height: 1.65;\n\n  span {\n    font-size: 10px;\n    font-family: 'Montserrat';\n    letter-spacing: -0.2px;\n    color: #717171;\n    margin-left: 1em;\n    margin-right: 1em;\n    margin-bottom: 4px;\n  }\n\n  @media (min-width:660px) and (max-width: 920px) {\n    h1 {\n      font-size: 14px;\n      line-height: 1.65;\n      letter-spacing: 0.5px;\n    }\n  }\n  @media (min-width: 921px) and (max-width: 1023px) {\n    h1 {\n      font-size: 12px;\n      letter-spacing: 0.8px;\n    }\n  }\n  @media (min-width: 1024px) {\n    h1 {\n      font-size: 16px;\n    }\n  }\n`\n\n\nconst isPercentDown = x => x < 0\nconst showPercent = x => x !== 0\nconst calcDiff = current => prev => current !== 0 ? ((current - prev) / prev * 100).toFixed(2) : 0\n// Percentage of increase = |100 - 150|/100 = 50/100 = 0.5 = 50%\n\nconst labels = {\n  cases: { heb: 'מאומתים', eng: 'Confirmed' },\n  todayCases: { heb: 'מקרים חדשים', eng: 'New Cases'},\n  deaths: { heb: 'נפטרו', eng: 'Deaths' },\n  recovered: { heb: 'החלימו', eng: 'Recovered' },\n  active: { heb: 'פעילים', eng: 'Active' },\n  affectedCountries: { heb: 'מדינות נגועות', eng: 'Infected Countries' }\n}\n\nconst engLbl = k => labels[k]['eng']\nconst hebLbl = k => labels[k]['heb']\nconst putLabel = (heb, k) => heb && hebLbl(k) || engLbl(k)\n\nexport default ({ S, country, isHeb, yday, comparison=true}) => {\n\n  return (\n    <Container>\n      <TheRow world={country.toLowerCase() === 'world'}>\n\n    {\n      Object.keys(S).map((k,i) => {\n        return (\n          <Column key={i}>\n            <Header> { putLabel(isHeb,k) }</Header>\n            <InRow>\n              <Number>\n                {\n                  S[k] && formatNumber(S[k])\n                }\n                {\n                  comparison  \n                    && yday \n                    && country !== 'world' \n                    && country !== 'World' \n                    && <span>\n                        ({formatNumber(yday[k])})\n                       </span>\n                }\n              </Number>\n              <br />\n              {\n                comparison && yday && <Percentage>\n                <span>{ calcDiff(S[k])(yday[k]) < 0 && \"\\u2B07\" || '\\u2B06' }</span>\n                %{ Math.abs(calcDiff(S[k])(yday[k]))} \n                </Percentage>\n              }\n            </InRow>\n          </Column>\n        )\n      })\n    }\n\n\n      </TheRow>\n    </Container>\n  )\n\n}\n"]},"metadata":{},"sourceType":"module"}