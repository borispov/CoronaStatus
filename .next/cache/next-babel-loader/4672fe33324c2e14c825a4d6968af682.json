{"ast":null,"code":"var _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/components/CaseChart.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport axios from 'axios';\nimport worldTimeData from '../utils/worldTimeData';\nimport useTime from '../utils/useTime';\nimport sortForChart from '../utils/sortForChart';\nimport Chart from './Chart';\nimport Container from './Container';\n\nclass CaseChart extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      country: '',\n      worldData: [],\n      countryData: [],\n      worldLabels: [],\n      countryLabels: [],\n      worldCases: [],\n      countryCases: [],\n      showWorld: true\n    });\n  }\n\n  setShowWorld() {\n    const showWorld = !this.state.showWorld;\n    this.setState({\n      showWorld\n    });\n  }\n\n  componentDidMount() {\n    const {\n      timeStats\n    } = worldTimeData(country);\n    const {\n      countryStats\n    } = useTime();\n    const worldCases = timeStats && timeStats.datasets.filter(a => a.label === 'cases');\n    const countryCases = countryStats && countryStats.datasets.filter(a => a.label === 'cases');\n    this.setState({\n      worldData: timeStats,\n      countryData: countryStats,\n      worldCases,\n      countryCases\n    });\n  }\n\n  render() {\n    return __jsx(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default CaseChart;","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/components/CaseChart.js"],"names":["React","axios","worldTimeData","useTime","sortForChart","Chart","Container","CaseChart","Component","country","worldData","countryData","worldLabels","countryLabels","worldCases","countryCases","showWorld","setShowWorld","state","setState","componentDidMount","timeStats","countryStats","datasets","filter","a","label","render"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAGA,MAAMC,SAAN,SAAwBP,KAAK,CAACQ,SAA9B,CAAwC;AAAA;AAAA;;AAAA,mCAE9B;AACNC,MAAAA,OAAO,EAAE,EADH;AAENC,MAAAA,SAAS,EAAE,EAFL;AAGNC,MAAAA,WAAW,EAAE,EAHP;AAINC,MAAAA,WAAW,EAAE,EAJP;AAKNC,MAAAA,aAAa,EAAE,EALT;AAMNC,MAAAA,UAAU,EAAE,EANN;AAONC,MAAAA,YAAY,EAAE,EAPR;AAQNC,MAAAA,SAAS,EAAE;AARL,KAF8B;AAAA;;AAatCC,EAAAA,YAAY,GAAG;AACb,UAAMD,SAAS,GAAG,CAAC,KAAKE,KAAL,CAAWF,SAA9B;AACA,SAAKG,QAAL,CAAc;AAAEH,MAAAA;AAAF,KAAd;AACD;;AAEDI,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAgBnB,aAAa,CAACO,OAAD,CAAnC;AACA,UAAM;AAAEa,MAAAA;AAAF,QAAmBnB,OAAO,EAAhC;AAEA,UAAMW,UAAU,GAAGO,SAAS,IAAIA,SAAS,CAACE,QAAV,CAAmBC,MAAnB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,KAAF,KAAY,OAA3C,CAAhC;AACA,UAAMX,YAAY,GAAGO,YAAY,IAAIA,YAAY,CAACC,QAAb,CAAsBC,MAAtB,CAA6BC,CAAC,IAAIA,CAAC,CAACC,KAAF,KAAY,OAA9C,CAArC;AAEA,SAAKP,QAAL,CAAc;AACZT,MAAAA,SAAS,EAAEW,SADC;AAEZV,MAAAA,WAAW,EAAEW,YAFD;AAGZR,MAAAA,UAHY;AAIZC,MAAAA;AAJY,KAAd;AAOD;;AAEDY,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAtCqC;;AA0CxC,eAAepB,SAAf","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport worldTimeData from '../utils/worldTimeData'\nimport useTime from '../utils/useTime'\nimport sortForChart from '../utils/sortForChart'\nimport Chart from './Chart'\nimport Container from './Container'\n\n\nclass CaseChart extends React.Component {\n\n  state = {\n    country: '',\n    worldData: [],\n    countryData: [],\n    worldLabels: [],\n    countryLabels: [],\n    worldCases: [],\n    countryCases: [],\n    showWorld: true\n  }\n\n  setShowWorld() {\n    const showWorld = !this.state.showWorld\n    this.setState({ showWorld })\n  }\n\n  componentDidMount() {\n    const { timeStats } = worldTimeData(country)\n    const { countryStats } = useTime()\n\n    const worldCases = timeStats && timeStats.datasets.filter(a => a.label === 'cases')\n    const countryCases = countryStats && countryStats.datasets.filter(a => a.label === 'cases')\n\n    this.setState({\n      worldData: timeStats,\n      countryData: countryStats,\n      worldCases,\n      countryCases\n    })\n\n  }\n\n  render() {\n    return (\n      <Container />\n    )\n  }\n\n}\n\nexport default CaseChart\n"]},"metadata":{},"sourceType":"module"}