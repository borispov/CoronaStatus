{"ast":null,"code":"var _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport App from 'next/app';\nimport Router from 'next/router';\nimport Link from 'next/link';\nimport { useState, useRef, useEffect } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport axios from 'axios';\nimport { LocaleProvider } from '../context/LocaleContext';\nimport { ProxyContextProvider } from '../context/proxy-context';\nimport useOutSide from '../hooks/useOutSide';\nimport GlobalStyle from './Global';\nimport Header from '../components/Header';\nimport Burger from '../components/Burger';\nimport Menu from '../components/Menu';\nimport { themes } from '../utils/themes';\nimport * as gtag from '../utils/gtag';\nimport Layout from '../components/Layout';\n\nconst getCountryFromData = response => response.data.country;\n\nconst currentCountry = async url => await axios.get(url).then(getCountryFromData).catch(e => 'israel');\n\nRouter.events.on('routeChangeComplete', url => gtag.pageview(url));\n\nconst lightTheme = () => _objectSpread({}, themes['common'], {}, themes['light']);\n\nfunction MyApp({\n  Component,\n  pageProps,\n  newProxy\n}) {\n  const {\n    0: theme,\n    1: setTheme\n  } = useState(lightTheme());\n  return __jsx(ProxyContextProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(ThemeProvider, {\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(GlobalStyle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), __jsx(LocaleProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(Layout, {\n    newProxy: newProxy,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(Component, _extends({}, pageProps, {\n    newProxy: newProxy,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }))))));\n} // MyApp.getInitialProps = async (appContext) => {\n//   const appProps = await App.getInitialProps(appContext)\n//\n//   let proxyUrl\n//   const req = appContext.ctx && appContext.ctx.req\n//\n//   if (req) {\n//     // grab client's ip address\n//     const ipAddress = req.headers['x-forwarded-for'] || req.connection.remoteAddress\n//     const localAddresses = ['::1', '127.0.0.1', 'localhost']\n//     // Construct URL with IP ADDRESS\n//     if (!localAddresses.includes(ipAddress)) {\n//       proxyUrl = `https://extreme-ip-lookup.com/json/${ipAddress}`\n//     }\n//     try {\n//       const countryName = await currentCountry(proxyUrl)\n//       const newProxy = { countryName, ipAddress }\n//       return { newProxy, ...appProps }\n//     } catch(e) {\n//       return { errorCode: e.code, errorMessage: e.message, ...appProps }\n//     }\n//   }\n//   return { ...appProps, newProxy: null }\n// }\n\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/pages/_app.js"],"names":["App","Router","Link","useState","useRef","useEffect","ThemeProvider","axios","LocaleProvider","ProxyContextProvider","useOutSide","GlobalStyle","Header","Burger","Menu","themes","gtag","Layout","getCountryFromData","response","data","country","currentCountry","url","get","then","catch","e","events","on","pageview","lightTheme","MyApp","Component","pageProps","newProxy","theme","setTheme"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,cAAT,QAA+B,0BAA/B;AACA,SAASC,oBAAT,QAAqC,0BAArC;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,WAAP,MAAwB,UAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAO,KAAKC,IAAZ,MAAsB,eAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,CAAcC,OAArD;;AACA,MAAMC,cAAc,GAAG,MAAOC,GAAP,IAAe,MAAMhB,KAAK,CAACiB,GAAN,CAAUD,GAAV,EAAeE,IAAf,CAAoBP,kBAApB,EAAwCQ,KAAxC,CAA8CC,CAAC,IAAI,QAAnD,CAA5C;;AAEA1B,MAAM,CAAC2B,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwCN,GAAG,IAAIP,IAAI,CAACc,QAAL,CAAcP,GAAd,CAA/C;;AAEA,MAAMQ,UAAU,GAAG,wBACdhB,MAAM,CAAC,QAAD,CADQ,MAEdA,MAAM,CAAC,OAAD,CAFQ,CAAnB;;AAMA,SAASiB,KAAT,CAAgB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,SAAb;AAAwBC,EAAAA;AAAxB,CAAhB,EAAoD;AAElD,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBlC,QAAQ,CAAC4B,UAAU,EAAX,CAAlC;AAEA,SACE,MAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEK,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA,MAAC,MAAD;AAAQ,IAAA,QAAQ,EAAED,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD,eAAeD,SAAf;AAA0B,IAAA,QAAQ,EAAEC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,CAFA,CAFF,CADF,CADF;AAcD,C,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeH,KAAf","sourcesContent":["import App from 'next/app'\nimport Router from 'next/router'\nimport Link from 'next/link';\nimport { useState, useRef, useEffect } from 'react'\nimport { ThemeProvider } from 'styled-components'\nimport axios from 'axios'\n\nimport { LocaleProvider } from '../context/LocaleContext'\nimport { ProxyContextProvider } from '../context/proxy-context'\nimport useOutSide from '../hooks/useOutSide'\nimport GlobalStyle from './Global'\nimport Header from '../components/Header'\nimport Burger from '../components/Burger';\nimport Menu from '../components/Menu';\nimport { themes } from '../utils/themes'\nimport * as gtag from '../utils/gtag'\nimport Layout from '../components/Layout';\n\nconst getCountryFromData = response => response.data.country\nconst currentCountry = async (url) => await axios.get(url).then(getCountryFromData).catch(e => 'israel')\n\nRouter.events.on('routeChangeComplete', url => gtag.pageview(url))\n\nconst lightTheme = () => ({\n  ...themes['common'],\n  ...themes['light'],\n})\n\n\nfunction MyApp ({ Component, pageProps, newProxy }) {\n\n  const [theme, setTheme] = useState(lightTheme())\n\n  return (\n    <ProxyContextProvider>\n      <ThemeProvider theme={theme}>\n        <GlobalStyle />\n        <LocaleProvider>\n\n        <Layout newProxy={newProxy} >\n            <Component {...pageProps} newProxy={newProxy} />\n          </Layout>\n        </LocaleProvider>\n\n      </ThemeProvider>\n    </ProxyContextProvider>\n  )\n}\n\n\n// MyApp.getInitialProps = async (appContext) => {\n//   const appProps = await App.getInitialProps(appContext)\n//\n//   let proxyUrl\n//   const req = appContext.ctx && appContext.ctx.req\n//\n//   if (req) {\n//     // grab client's ip address\n//     const ipAddress = req.headers['x-forwarded-for'] || req.connection.remoteAddress\n//     const localAddresses = ['::1', '127.0.0.1', 'localhost']\n//     // Construct URL with IP ADDRESS\n//     if (!localAddresses.includes(ipAddress)) {\n//       proxyUrl = `https://extreme-ip-lookup.com/json/${ipAddress}`\n//     }\n//     try {\n//       const countryName = await currentCountry(proxyUrl)\n//       const newProxy = { countryName, ipAddress }\n//       return { newProxy, ...appProps }\n//     } catch(e) {\n//       return { errorCode: e.code, errorMessage: e.message, ...appProps }\n//     }\n//   }\n//   return { ...appProps, newProxy: null }\n// }\n\nexport default MyApp\n"]},"metadata":{},"sourceType":"module"}