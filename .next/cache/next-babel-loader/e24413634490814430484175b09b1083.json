{"ast":null,"code":"var _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from 'axios';\nimport Head from 'next/head';\nimport { useEffect, useContext } from 'react';\nimport CoronaApp from '../components/CoronaApp';\nimport InfoSection from '../components/InfoSection';\nimport Footer from '../components/Footer';\nimport { FadeIn } from '../components/S';\nimport useWorldData from '../utils/useWorldData';\nimport { ProxyContext } from '../context/proxy-context';\n\nfunction IndexPage({\n  isHeb,\n  newProxy,\n  worldTime,\n  yesterdayGlobal\n}) {\n  const {\n    0: proxy,\n    1: setProxy\n  } = useContext(ProxyContext);\n  useEffect(() => {\n    console.log('settings new proxy');\n    let ignore = false;\n    newProxy && !ignore && setProxy(newProxy);\n    return () => {\n      ignore: true;\n    };\n  }, [newProxy]);\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"nCorona - Novel Coronavirus Statistics & Resources for Coping\")), __jsx(FadeIn, {\n    delay: \"0.5s\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(CoronaApp, {\n    isHeb: isHeb,\n    userLocation: newProxy.countryName,\n    worldTime: worldTime,\n    yesterdayGlobal: yesterdayGlobal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), __jsx(InfoSection, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })));\n}\n\nIndexPage.getInitialProps = async ctx => {\n  const worldTime = await useWorldData();\n  const globalData = await axios.get('https://corona.lmao.ninja/v2/all?yesterday=true');\n  const yesterdayGlobal = {\n    active: globalData.data.active,\n    critical: globalData.data.critical,\n    cases: globalData.data.cases,\n    todayCases: globalData.data.todayCases,\n    recovered: globalData.data.recovered,\n    deaths: globalData.data.deaths,\n    country: globalData.data.country,\n    affectedCountries: globalData.data.affectedCountries\n  };\n  return {\n    yesterdayGlobal,\n    worldTime\n  };\n};\n\nexport default IndexPage;","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/pages/index.js"],"names":["axios","Head","useEffect","useContext","CoronaApp","InfoSection","Footer","FadeIn","useWorldData","ProxyContext","IndexPage","isHeb","newProxy","worldTime","yesterdayGlobal","proxy","setProxy","console","log","ignore","countryName","getInitialProps","ctx","globalData","get","active","data","critical","cases","todayCases","recovered","deaths","country","affectedCountries"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,OAAtC;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AAEA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,SAASC,YAAT,QAA6B,0BAA7B;;AAGA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,SAAnB;AAA8BC,EAAAA;AAA9B,CAAnB,EAAmE;AAEjE,QAAM;AAAA,OAAEC,KAAF;AAAA,OAASC;AAAT,MAAqBb,UAAU,CAACM,YAAD,CAArC;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,QAAIC,MAAM,GAAG,KAAb;AACAP,IAAAA,QAAQ,IAAI,CAACO,MAAb,IAAuBH,QAAQ,CAACJ,QAAD,CAA/B;AACA,WAAO,MAAM;AAAEO,MAAAA,MAAM,EAAE;AAAM,KAA7B;AACD,GALQ,EAKN,CAACP,QAAD,CALM,CAAT;AAOA,SACE,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qEADF,CADF,EAIE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,KAAK,EAAED,KAAlB;AAAyB,IAAA,YAAY,EAAEC,QAAQ,CAACQ,WAAhD;AAA6D,IAAA,SAAS,EAAEP,SAAxE;AAAmF,IAAA,eAAe,EAAEC,eAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAJF,CADF;AAWD;;AAEDJ,SAAS,CAACW,eAAV,GAA4B,MAAOC,GAAP,IAAe;AAEzC,QAAMT,SAAS,GAAG,MAAML,YAAY,EAApC;AAEA,QAAMe,UAAU,GAAG,MAAMvB,KAAK,CAACwB,GAAN,CAAU,iDAAV,CAAzB;AACA,QAAMV,eAAe,GAAG;AACtBW,IAAAA,MAAM,EAAEF,UAAU,CAACG,IAAX,CAAgBD,MADF;AAEtBE,IAAAA,QAAQ,EAAEJ,UAAU,CAACG,IAAX,CAAgBC,QAFJ;AAGtBC,IAAAA,KAAK,EAAEL,UAAU,CAACG,IAAX,CAAgBE,KAHD;AAItBC,IAAAA,UAAU,EAAEN,UAAU,CAACG,IAAX,CAAgBG,UAJN;AAKtBC,IAAAA,SAAS,EAAEP,UAAU,CAACG,IAAX,CAAgBI,SALL;AAMtBC,IAAAA,MAAM,EAAER,UAAU,CAACG,IAAX,CAAgBK,MANF;AAOtBC,IAAAA,OAAO,EAAET,UAAU,CAACG,IAAX,CAAgBM,OAPH;AAQtBC,IAAAA,iBAAiB,EAAEV,UAAU,CAACG,IAAX,CAAgBO;AARb,GAAxB;AAWA,SAAO;AAACnB,IAAAA,eAAD;AAAkBD,IAAAA;AAAlB,GAAP;AACD,CAjBD;;AAmBA,eAAeH,SAAf","sourcesContent":["import axios from 'axios'\nimport Head from 'next/head'\nimport { useEffect, useContext } from 'react'\n\nimport CoronaApp from '../components/CoronaApp'\nimport InfoSection from '../components/InfoSection'\nimport Footer from '../components/Footer'\nimport { FadeIn } from '../components/S'\n\nimport useWorldData from '../utils/useWorldData'\nimport { ProxyContext } from '../context/proxy-context'\n\n\nfunction IndexPage({ isHeb, newProxy, worldTime, yesterdayGlobal}) {\n\n  const [ proxy, setProxy] = useContext(ProxyContext)\n\n  useEffect(() => {\n    console.log('settings new proxy');\n    let ignore = false\n    newProxy && !ignore && setProxy(newProxy)\n    return () => { ignore: true }\n  }, [newProxy])\n\n  return (\n    <>\n      <Head>\n        <title>nCorona - Novel Coronavirus Statistics & Resources for Coping</title>\n      </Head>\n      <FadeIn delay=\"0.5s\">\n        <CoronaApp isHeb={isHeb} userLocation={newProxy.countryName} worldTime={worldTime} yesterdayGlobal={yesterdayGlobal} />\n        <InfoSection />\n      </FadeIn>\n    </>\n  )\n}\n\nIndexPage.getInitialProps = async (ctx) => {\n\n  const worldTime = await useWorldData()\n\n  const globalData = await axios.get('https://corona.lmao.ninja/v2/all?yesterday=true')\n  const yesterdayGlobal = {\n    active: globalData.data.active,\n    critical: globalData.data.critical,\n    cases: globalData.data.cases,\n    todayCases: globalData.data.todayCases,\n    recovered: globalData.data.recovered,\n    deaths: globalData.data.deaths,\n    country: globalData.data.country,\n    affectedCountries: globalData.data.affectedCountries\n  }\n\n  return {yesterdayGlobal, worldTime}\n}\n\nexport default IndexPage\n"]},"metadata":{},"sourceType":"module"}