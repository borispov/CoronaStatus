{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  top: 5%;\\n  right: 3%;\\n  padding: 0 12px;\\n  @media (max-width: 768px) {\\n    right: 0%;\\n    top: 8%;\\n    padding: 0;\\n  }\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  background: \", \";\\n  color: \", \";\\n  font-size: 14px;\\n  font-weight: 600;\\n  padding: 6px 10px;\\n  width: 45px;\\n  outline: none;\\n  text-align: center;\\n  border: none;\\n  border-radius: 6px;\\n  @media (max-width: 768px) {\\n    width: 30px;\\n    font-size: 12px;\\n    font-weight: 400;\\n    padding: 4px 6px;\\n  }\\n\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  color: \", \";\\n  background-color: \", \";\\n  border-radius: 50%;\\n  position: absolute;\\n  top: \", \";\\n  right: \", \";\\n  left: \", \";\\n  padding: 6px 2px;\\n  outline: none;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  \", \"\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  \", \"\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nwidth: 2rem;\\nheight: 2rem;\\nmargin-left: auto;\\ncursor: pointer;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport react from 'react';\nimport CoronaApp from '../components/CoronaApp';\nimport styled, { css, ThemeProvider } from 'styled-components';\nimport GlobalStyle from './Global';\nimport { useState } from 'react';\nimport { themes } from '../utils/themes';\nimport { ReactComponent as MoonSVG } from '../assets/icons/moon.svg';\nimport { ReactComponent as SunSVG } from '../assets/icons/sun.svg';\n\nvar lightTheme = function lightTheme() {\n  return _objectSpread({}, themes['common'], {}, themes['light']);\n};\n\nvar darkTheme = function darkTheme() {\n  return _objectSpread({}, themes['common'], {}, themes['dark']);\n};\n\nvar ThemeIcon = css(_templateObject());\nvar SunIcon = styled(SunSVG)(_templateObject2(), ThemeIcon);\nvar MoonIcon = styled(MoonSVG)(_templateObject3(), ThemeIcon);\nvar Btn = styled.button(_templateObject4(), function (props) {\n  return props.theme.bgColor;\n}, function (props) {\n  return props.theme.color;\n}, function (props) {\n  return props.top;\n}, function (props) {\n  return props.right;\n}, function (props) {\n  return props.left;\n});\nvar LangBtn = styled.button(_templateObject5(), function (props) {\n  return props.theme.searchBgColor;\n}, function (props) {\n  return props.theme.color;\n});\nvar BtnContainer = styled.div(_templateObject6());\nexport default function IndexPage() {\n  var _useState = useState(lightTheme()),\n      theme = _useState[0],\n      setTheme = _useState[1];\n\n  var setDarkTheme = function setDarkTheme() {\n    return setTheme(darkTheme());\n  };\n\n  var setLightTheme = function setLightTheme() {\n    return setTheme(lightTheme());\n  };\n\n  var _useState2 = useState('heb'),\n      lang = _useState2[0],\n      setLang = _useState2[1];\n\n  var setHeb = function setHeb() {\n    return setLang('heb');\n  };\n\n  var setEng = function setEng() {\n    return setLang('eng');\n  };\n\n  var isLight = theme.type === 'light';\n  return __jsx(React.Fragment, null, __jsx(ThemeProvider, {\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, __jsx(GlobalStyle, {\n    lang: lang,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), __jsx(CoronaApp, {\n    theme: theme,\n    lang: lang,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), __jsx(BtnContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, __jsx(LangBtn, {\n    style: {\n      position: 'relative',\n      margin: '0 12px'\n    },\n    onClick: lang === 'heb' ? setEng : function () {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"En\"), __jsx(LangBtn, {\n    onClick: lang === 'eng' ? setHeb : function () {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"\\u05E2\\u05D1\\u05E8\")), isLight && __jsx(MoonIcon, {\n    onClick: setDarkTheme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), !isLight && __jsx(SunIcon, {\n    onClick: setLightTheme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/pages/index.js"],"names":["react","CoronaApp","styled","css","ThemeProvider","GlobalStyle","useState","themes","ReactComponent","MoonSVG","SunSVG","lightTheme","darkTheme","ThemeIcon","SunIcon","MoonIcon","Btn","button","props","theme","bgColor","color","top","right","left","LangBtn","searchBgColor","BtnContainer","div","IndexPage","setTheme","setDarkTheme","setLightTheme","lang","setLang","setHeb","setEng","isLight","type","position","margin"],"mappings":"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","sourcesContent":["import react from 'react'\nimport CoronaApp from '../components/CoronaApp'\nimport styled, { css, ThemeProvider } from 'styled-components'\nimport GlobalStyle from './Global'\nimport { useState } from 'react'\nimport { themes } from '../utils/themes'\nimport {ReactComponent as MoonSVG} from '../assets/icons/moon.svg'\nimport {ReactComponent as SunSVG} from '../assets/icons/sun.svg'\n\nconst lightTheme = () => ({\n  ...themes['common'],\n  ...themes['light'],\n})\n\nconst darkTheme = () => ({\n  ...themes['common'],\n  ...themes['dark'],\n})\n\nconst ThemeIcon = css`\nwidth: 2rem;\nheight: 2rem;\nmargin-left: auto;\ncursor: pointer;\n`\n\nconst SunIcon = styled(SunSVG)`\n  ${ThemeIcon}\n`\n\nconst MoonIcon = styled(MoonSVG)`\n  ${ThemeIcon}\n`\n\n\nconst Btn = styled.button`\n  color: ${props => props.theme.bgColor};\n  background-color: ${props => props.theme.color};\n  border-radius: 50%;\n  position: absolute;\n  top: ${props => props.top};\n  right: ${props => props.right};\n  left: ${props => props.left};\n  padding: 6px 2px;\n  outline: none;\n`\nconst LangBtn = styled.button`\n  background: ${props => props.theme.searchBgColor};\n  color: ${props => props.theme.color};\n  font-size: 14px;\n  font-weight: 600;\n  padding: 6px 10px;\n  width: 45px;\n  outline: none;\n  text-align: center;\n  border: none;\n  border-radius: 6px;\n  @media (max-width: 768px) {\n    width: 30px;\n    font-size: 12px;\n    font-weight: 400;\n    padding: 4px 6px;\n  }\n\n`\n\nconst BtnContainer = styled.div`\n  position: absolute;\n  top: 5%;\n  right: 3%;\n  padding: 0 12px;\n  @media (max-width: 768px) {\n    right: 0%;\n    top: 8%;\n    padding: 0;\n  }\n`\n\nexport default function IndexPage() {\n  const [theme, setTheme] = useState(lightTheme())\n  const setDarkTheme = () => setTheme(darkTheme())\n  const setLightTheme = () => setTheme(lightTheme())\n\n  const [lang, setLang] = useState('heb');\n  const setHeb = () => setLang('heb')\n  const setEng = () => setLang('eng')\n\n  const isLight = theme.type === 'light'\n\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <GlobalStyle lang={lang}/>\n        <CoronaApp theme={theme} lang={lang}/>\n\n        <BtnContainer>\n            <LangBtn\n              style={{position: 'relative', margin: '0 12px'}}\n              onClick={lang === 'heb' ? setEng : () => {}}\n            >En</LangBtn>\n            <LangBtn\n              onClick={lang === 'eng' ? setHeb : () => {}}\n            >עבר</LangBtn>\n        </BtnContainer>\n        {isLight && <MoonIcon onClick={setDarkTheme} />}\n        {!(isLight) && <SunIcon onClick={setLightTheme} />}\n\n      </ThemeProvider>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}