{"ast":null,"code":"var _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/components/CoronaApp.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport Input from './Input';\nimport Stats from './Stats';\nimport useTime from '../utils/useTime';\nimport useTodayStats from '../utils/useTodayStats';\nimport useCountries from '../utils/useCountries';\nimport Chart from './Chart';\nimport { Container } from './S';\nimport HeaderDescription from './HeaderDescription';\nimport CaseChart from './CaseChart';\nimport Select from 'react-select';\n\nconst CoronaApp = ({\n  isHeb\n}) => {\n  const {\n    0: showWorld,\n    1: setShowWorld\n  } = useState(true);\n  const {\n    0: country,\n    1: setCountry\n  } = useState('');\n  const {\n    0: inputValue,\n    1: setInput\n  } = useState('');\n  const url = 'https://nCorona.live/api/v1/';\n  const url2 = 'https://corona.lmao.ninja/countries/';\n  const worldUrl = 'https://corona.lmao.ninja/all';\n  const {\n    countryStats\n  } = useTime(country);\n  const {\n    todayStats\n  } = useTodayStats(url, country);\n  const worldToday = useTodayStats(url, 'world').todayStats;\n  const {\n    countries\n  } = useCountries();\n  const worldTodaySorted = worldToday && {\n    cases: worldToday.cases,\n    todayCases: worldToday.todayCases,\n    recovered: worldToday.recovered,\n    deaths: worldToday.deaths\n  } || '';\n  const todayStatsSorted = todayStats && {\n    cases: todayStats.cases,\n    todayCases: todayStats.todayCases,\n    recovered: todayStats.recovered,\n    deaths: todayStats.deaths\n  } || '';\n\n  const handleChange = selected => {\n    setCountry(selected.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setCountry(inputValue);\n  };\n\n  const selectOptions = countries && countries.map(a => ({\n    value: a,\n    label: a\n  }));\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, __jsx(HeaderDescription, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, countryStats && __jsx(Chart, {\n    isHeb: isHeb,\n    type: \"line\",\n    labels: countryStats.labels,\n    data: countryStats.datasets.filter(a => a.label === 'cases'),\n    label: country || 'israel',\n    fill: false,\n    stops: 3,\n    showLegend: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), __jsx(Stats, {\n    cn: country || todayStats && todayStats.country,\n    todayStats: todayStatsSorted,\n    isHeb: isHeb,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), __jsx(\"form\", {\n    style: {\n      maxWidth: '520px',\n      margin: '54px auto',\n      textAlign: 'center'\n    },\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    style: {\n      fontSize: '16px',\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, isHeb ? `נתונים לפי מדינה` : `Data For Country:`), __jsx(Select, {\n    className: 'Select',\n    options: selectOptions,\n    value: country,\n    onChange: handleChange,\n    placeholder: country || 'ישראל',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })), __jsx(HeaderDescription, {\n    txt: \"* \\u05D2\\u05E8\\u05E4\\u05D9\\u05DD \\u05D4\\u05DE\\u05E6\\u05D9\\u05D2\\u05D9\\u05DD \\u05D0\\u05EA \\u05E9\\u05D9\\u05E2\\u05D5\\u05E8 \\u05D4\\u05E6\\u05DE\\u05D9\\u05D7\\u05D4 \\u05E9\\u05DC \\u05E0\\u05D2\\u05D9\\u05E3 \\u05D4\\u05E7\\u05D5\\u05E8\\u05D5\\u05E0\\u05D4, \\u05D0\\u05D9\\u05E0\\u05DD \\u05DE\\u05EA\\u05E2\\u05D3\\u05DB\\u05E0\\u05D9\\u05DD \\u05D1\\u05D6\\u05DE\\u05DF \\u05D0\\u05DE\\u05EA \\u05D5\\u05DC\\u05DB\\u05DF \\u05D0\\u05D9\\u05E0\\u05DD \\u05DE\\u05E9\\u05E7\\u05E4\\u05D9\\u05DD \\u05D0\\u05EA \\u05D4\\u05D9\\u05D5\\u05DD \\u05D4\\u05E0\\u05D5\\u05DB\\u05D7\\u05D9. \\u05D1\\u05D3\\u05E8\\u05DA-\\u05DB\\u05DC\\u05DC \\u05DE\\u05EA\\u05E7\\u05D9\\u05D9\\u05DD \\u05E4\\u05E2\\u05E8 \\u05E9\\u05DC \\u05D9\\u05D5\\u05DD, \\u05DC\\u05DB\\u05DC \\u05D4\\u05D9\\u05D5\\u05EA\\u05E8 \\u05E9\\u05DC\\u05D5\\u05E9\\u05D4 \\u05D9\\u05DE\\u05D9\\u05DD. \\u05D9\\u05D7\\u05D3 \\u05E2\\u05DD \\u05D6\\u05D0\\u05EA, \\u05D4\\u05E0\\u05EA\\u05D5\\u05E0\\u05D9\\u05DD \\u05D4\\u05DE\\u05D5\\u05E6\\u05D2\\u05D9\\u05DD \\u05DE\\u05D7\\u05D5\\u05E5 \\u05DC\\u05D2\\u05E8\\u05E4\\u05D9\\u05DD \\u05DE\\u05E9\\u05E7\\u05E4\\u05D9\\u05DD \\u05D0\\u05EA \\u05D4\\u05D6\\u05DE\\u05DF \\u05D4\\u05E0\\u05EA\\u05D5\\u05DF \\u05D1\\u05E8\\u05D2\\u05E2 \\u05D4\\u05E0\\u05D5\\u05DB\\u05D7\\u05D9 \\u05D5\\u05DE\\u05EA\\u05E2\\u05D3\\u05DB\\u05E0\\u05D9\\u05DD \\u05D1\\u05E2\\u05E8\\u05DA \\u05D0\\u05D7\\u05EA \\u05DC\\u05D7\\u05E6\\u05D9 \\u05E9\\u05E2\\u05D4.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), __jsx(Stats, {\n    cn: 'World',\n    todayWorld: worldTodaySorted,\n    isHeb: isHeb,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), __jsx(CaseChart, {\n    showWorld: showWorld,\n    country: country,\n    isHeb: isHeb,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  })));\n};\n\nexport default CoronaApp;","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/components/CoronaApp.js"],"names":["useState","useEffect","Input","Stats","useTime","useTodayStats","useCountries","Chart","Container","HeaderDescription","CaseChart","Select","CoronaApp","isHeb","showWorld","setShowWorld","country","setCountry","inputValue","setInput","url","url2","worldUrl","countryStats","todayStats","worldToday","countries","worldTodaySorted","cases","todayCases","recovered","deaths","todayStatsSorted","handleChange","selected","value","handleSubmit","e","preventDefault","selectOptions","map","a","label","labels","datasets","filter","maxWidth","margin","textAlign","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport Input from './Input'\nimport Stats from './Stats'\nimport useTime from '../utils/useTime'\nimport useTodayStats from '../utils/useTodayStats'\nimport useCountries from '../utils/useCountries'\nimport Chart from './Chart'\nimport { Container } from './S'\nimport HeaderDescription from './HeaderDescription'\nimport CaseChart from './CaseChart'\nimport Select from 'react-select'\n\n\nconst CoronaApp = ({ isHeb }) => {\n\n  const [showWorld, setShowWorld] = useState(true)\n  const [country, setCountry] = useState('')\n  const [inputValue, setInput] = useState('')\n\n  const url = 'https://nCorona.live/api/v1/'\n  const url2 = 'https://corona.lmao.ninja/countries/'\n  const worldUrl = 'https://corona.lmao.ninja/all'\n\n  const { countryStats } = useTime(country)\n  const { todayStats } = useTodayStats(url, country)\n  const worldToday = useTodayStats(url, 'world').todayStats\n\n  const { countries } = useCountries()\n\n  const worldTodaySorted = worldToday &&\n    {\n      cases: worldToday.cases,\n      todayCases: worldToday.todayCases,\n      recovered: worldToday.recovered,\n      deaths: worldToday.deaths\n    } || ''\n\n  const todayStatsSorted = todayStats && \n    {\n      cases: todayStats.cases,\n      todayCases: todayStats.todayCases,\n      recovered: todayStats.recovered,\n      deaths: todayStats.deaths\n    } || ''\n\n  const handleChange = selected => {\n    setCountry(selected.value)\n  }\n  const handleSubmit = e => {\n    e.preventDefault();\n    setCountry(inputValue)\n  }\n\n  const selectOptions = countries && countries.map(a => ({ value: a, label: a }))\n\n  return (\n    <div>\n      <HeaderDescription />\n\n      <Container>\n\n      {\n        countryStats &&\n          (\n              <Chart\n                isHeb={isHeb}\n                type='line'\n                labels={countryStats.labels}\n                data={countryStats.datasets.filter(a => a.label === 'cases')}\n                label={country || 'israel'}\n                fill={false}\n                stops={3}\n                showLegend={false}\n              />\n          )\n      }\n      <Stats\n        cn={country || todayStats && todayStats.country}\n        todayStats={todayStatsSorted}\n        isHeb={isHeb}\n      />\n\n      <form \n        style={{ maxWidth: '520px', margin: '54px auto', textAlign: 'center'}}\n        onSubmit={handleSubmit}>\n        <label style={{fontSize: '16px', fontWeight: 'bold'}}>\n          { isHeb ? `נתונים לפי מדינה` : `Data For Country:` }\n        </label>\n\n        <Select\n          className={'Select'}\n          options={selectOptions}\n          value={country}\n          onChange={handleChange}\n          placeholder={country || 'ישראל'}\n        />\n      </form>\n\n      <HeaderDescription \n        txt='* גרפים המציגים את שיעור הצמיחה של נגיף הקורונה, אינם מתעדכנים בזמן אמת ולכן אינם משקפים את היום הנוכחי. בדרך-כלל מתקיים פער של יום, לכל היותר שלושה ימים. יחד עם זאת, הנתונים המוצגים מחוץ לגרפים משקפים את הזמן הנתון ברגע הנוכחי ומתעדכנים בערך אחת לחצי שעה.'/>\n\n      <Stats\n        cn={'World'}\n        todayWorld={worldTodaySorted}\n        isHeb={isHeb}\n      />\n\n      <CaseChart\n        showWorld={showWorld} \n        country={country}\n        isHeb={isHeb}\n      />\n\n    </Container>\n\n    </div>\n  )\n}\n\nexport default CoronaApp\n\n\n"]},"metadata":{},"sourceType":"module"}