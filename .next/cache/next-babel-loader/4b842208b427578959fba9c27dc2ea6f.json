{"ast":null,"code":"import { useEffect } from 'react';\n\nconst getMobileDetect = userAgent => {\n  const isAndroid = () => Boolean(userAgent.match(/Android/i));\n\n  const isIos = () => Boolean(userAgent.match(/iPhone|iPad|iPd/i));\n\n  const isOpera = () => Boolean(userAgent.match(/Opera Mini/));\n\n  const isWindows = () => Boolean(userAgent.match(/IEMobilei/));\n\n  const isSSR = () => Boolean(userAgent.match(/SSR/i));\n\n  const isMobile = () => Boolean(isAndroid() || isIos() || isOpera() || isWindows());\n\n  const isDesktop = () => Boolean(!isMobile() && !isSSR());\n\n  return {\n    isMobile,\n    isDesktop,\n    isAndroid,\n    isIos,\n    isSSR\n  };\n};\n\nconst useMobileDetect = () => {\n  useEffect(() => {}, []);\n  const userAgent = typeof navigator === 'undefined' ? 'SSR' : navigator.userAgent;\n  return getMobileDetect(userAgent);\n};\n\nexport default useMobileDetect;","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/utils/isMobile.js"],"names":["useEffect","getMobileDetect","userAgent","isAndroid","Boolean","match","isIos","isOpera","isWindows","isSSR","isMobile","isDesktop","useMobileDetect","navigator"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;;AAEA,MAAMC,eAAe,GAAGC,SAAS,IAAI;AACnC,QAAMC,SAAS,GAAG,MAAMC,OAAO,CAACF,SAAS,CAACG,KAAV,CAAgB,UAAhB,CAAD,CAA/B;;AACA,QAAMC,KAAK,GAAG,MAAMF,OAAO,CAACF,SAAS,CAACG,KAAV,CAAgB,kBAAhB,CAAD,CAA3B;;AACA,QAAME,OAAO,GAAG,MAAMH,OAAO,CAACF,SAAS,CAACG,KAAV,CAAgB,YAAhB,CAAD,CAA7B;;AACA,QAAMG,SAAS,GAAG,MAAMJ,OAAO,CAACF,SAAS,CAACG,KAAV,CAAgB,WAAhB,CAAD,CAA/B;;AACA,QAAMI,KAAK,GAAG,MAAML,OAAO,CAACF,SAAS,CAACG,KAAV,CAAgB,MAAhB,CAAD,CAA3B;;AAEA,QAAMK,QAAQ,GAAG,MAAMN,OAAO,CAACD,SAAS,MAAMG,KAAK,EAApB,IAA0BC,OAAO,EAAjC,IAAuCC,SAAS,EAAjD,CAA9B;;AACA,QAAMG,SAAS,GAAG,MAAMP,OAAO,CAAC,CAACM,QAAQ,EAAT,IAAe,CAACD,KAAK,EAAtB,CAA/B;;AACA,SAAO;AACLC,IAAAA,QADK;AAELC,IAAAA,SAFK;AAGLR,IAAAA,SAHK;AAILG,IAAAA,KAJK;AAKLG,IAAAA;AALK,GAAP;AAOD,CAhBD;;AAiBA,MAAMG,eAAe,GAAG,MAAM;AAC5BZ,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,EAAX,CAAT;AACA,QAAME,SAAS,GAAG,OAAOW,SAAP,KAAqB,WAArB,GAAmC,KAAnC,GAA2CA,SAAS,CAACX,SAAvE;AACA,SAAOD,eAAe,CAACC,SAAD,CAAtB;AACD,CAJD;;AAKA,eAAeU,eAAf","sourcesContent":["import { useEffect } from 'react'\n\nconst getMobileDetect = userAgent => {\n  const isAndroid = () => Boolean(userAgent.match(/Android/i))\n  const isIos = () => Boolean(userAgent.match(/iPhone|iPad|iPd/i));\n  const isOpera = () => Boolean(userAgent.match(/Opera Mini/));\n  const isWindows = () => Boolean(userAgent.match(/IEMobilei/));\n  const isSSR = () => Boolean(userAgent.match(/SSR/i))\n\n  const isMobile = () => Boolean(isAndroid() || isIos() || isOpera() || isWindows())\n  const isDesktop = () => Boolean(!isMobile() && !isSSR())\n  return {\n    isMobile,\n    isDesktop,\n    isAndroid,\n    isIos,\n    isSSR\n  }\n}\nconst useMobileDetect = () => {\n  useEffect(() => {}, [])\n  const userAgent = typeof navigator === 'undefined' ? 'SSR' : navigator.userAgent\n  return getMobileDetect(userAgent)\n}\nexport default useMobileDetect\n"]},"metadata":{},"sourceType":"module"}