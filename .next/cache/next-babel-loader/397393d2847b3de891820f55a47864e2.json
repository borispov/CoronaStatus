{"ast":null,"code":"var _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport App from 'next/app';\nimport Router from 'next/router';\nimport Link from 'next/link';\nimport { useState, useRef } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport axios from 'axios';\nimport ProxyView from '../components/proxy-view';\nimport { ProxyContextProvider } from '../context/proxy-context';\nimport useOutSide from '../utils/useOutSide';\nimport GlobalStyle from './Global';\nimport Header from '../components/Header';\nimport Burger from '../components/Burger';\nimport Menu from '../components/Menu';\nimport { MoonIcon, SunIcon, WorldIcon } from '../components/Icons/ThemeIcon';\nimport { themes } from '../utils/themes';\nimport * as gtag from '../utils/gtag';\n\nconst getCountryFromData = response => response.data.country;\n\nasync function currentCountry(url) {\n  return await axios.get(url).then(getCountryFromData).catch(e => 'israel');\n}\n\nRouter.events.on('routeChangeComplete', url => gtag.pageview(url));\n\nconst lightTheme = () => _objectSpread({}, themes['common'], {}, themes['light']);\n\nconst darkTheme = () => _objectSpread({}, themes['common'], {}, themes['dark']);\n\nfunction MyApp({\n  Component,\n  pageProps,\n  userLocation\n}) {\n  const {\n    0: theme,\n    1: setTheme\n  } = useState(lightTheme());\n  console.log(userLocation);\n  const {\n    0: isHeb,\n    1: setHeb\n  } = useState(userLocation === 'israel' || userLocation === 'Israel' ? true : false);\n  const {\n    0: menuOpen,\n    1: setOpen\n  } = useState(false);\n\n  const closeMenu = () => setOpen(false);\n\n  const toggleMenu = () => setOpen(!menuOpen);\n\n  const toggleLang = () => {\n    closeMenu(), setHeb(!isHeb);\n  };\n\n  const setDarkTheme = () => {\n    closeMenu(), setTheme(darkTheme());\n  };\n\n  const setLightTheme = () => {\n    closeMenu(), setTheme(lightTheme());\n  };\n\n  const node = useRef();\n  useOutSide(node, closeMenu);\n  const displayLang = isHeb ? 'English' : 'עברית';\n  const isLight = theme.type === 'light';\n  return __jsx(ProxyContextProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(ThemeProvider, {\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(GlobalStyle, {\n    isHeb: isHeb,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), __jsx(Header, {\n    title: \"nCorona\",\n    isHeb: isHeb,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    ref: node,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(Burger, {\n    setOpen: toggleMenu,\n    open: menuOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), __jsx(Menu, {\n    setOpen: toggleMenu,\n    open: menuOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/News\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    alt: \"news\",\n    onClick: () => closeMenu(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"\\uD83D\\uDCF0\"), isHeb && 'חדשות' || 'News')), __jsx(Link, {\n    href: \"/Statistics\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    alt: \"stats\",\n    onClick: () => closeMenu(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \" \\uD83D\\uDDFA\"), isHeb && 'נתונים' || 'Data')), __jsx(Link, {\n    href: \"/About\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    alt: \"about\",\n    onClick: () => closeMenu(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \" \\uD83D\\uDDFA\"), isHeb && 'אודות' || 'About')), __jsx(\"a\", {\n    onClick: toggleLang,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"\\uD83C\\uDF10\"), displayLang)))), __jsx(ProxyView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), __jsx(Component, _extends({}, pageProps, {\n    isHeb: isHeb,\n    userLocation: userLocation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }))));\n}\n\nMyApp.getInitialProps = async appContext => {\n  const appProps = await App.getInitialProps(appContext);\n  let newProxy = null;\n\n  if (appContext.ctx && appContext.ctx.req) {\n    // grab client's ip address\n    const ipAddress = req.headers['x-forwarded-for'] || req.connection.remoteAddress;\n    const localAddresses = ['::1', '127.0.0.1', 'localhost']; // Construct URL with IP ADDRESS\n\n    if (localAddresses.includes(ipAddress)) return {\n      countryName: 'israel'\n    };\n\n    try {\n      const proxyUrl = `https://extreme-ip-lookup.com/json/${ipAddress}`;\n      const countryName = await currentCountry(proxyUrl);\n      const newProxy = {\n        countryName,\n        ipAddress\n      };\n      return _objectSpread({\n        newProxy\n      }, appProps);\n    } catch (e) {\n      return _objectSpread({\n        errorCode: e.code,\n        errorMessage: e.message\n      }, appProps);\n    }\n  }\n\n  return _objectSpread({}, appProps, {\n    newProxy: null\n  });\n};\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/pages/_app.js"],"names":["App","Router","Link","useState","useRef","ThemeProvider","axios","ProxyView","ProxyContextProvider","useOutSide","GlobalStyle","Header","Burger","Menu","MoonIcon","SunIcon","WorldIcon","themes","gtag","getCountryFromData","response","data","country","currentCountry","url","get","then","catch","e","events","on","pageview","lightTheme","darkTheme","MyApp","Component","pageProps","userLocation","theme","setTheme","console","log","isHeb","setHeb","menuOpen","setOpen","closeMenu","toggleMenu","toggleLang","setDarkTheme","setLightTheme","node","displayLang","isLight","type","getInitialProps","appContext","appProps","newProxy","ctx","req","ipAddress","headers","connection","remoteAddress","localAddresses","includes","countryName","proxyUrl","errorCode","code","errorMessage","message"],"mappings":"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","sourcesContent":["import App from 'next/app'\nimport Router from 'next/router'\nimport Link from 'next/link';\nimport { useState, useRef } from 'react'\nimport { ThemeProvider } from 'styled-components'\nimport axios from 'axios'\n\nimport ProxyView from '../components/proxy-view'\nimport { ProxyContextProvider } from '../context/proxy-context'\nimport useOutSide from '../utils/useOutSide'\nimport GlobalStyle from './Global'\nimport Header from '../components/Header'\nimport Burger from '../components/Burger';\nimport Menu from '../components/Menu';\nimport { MoonIcon, SunIcon, WorldIcon } from '../components/Icons/ThemeIcon'\nimport { themes } from '../utils/themes'\nimport * as gtag from '../utils/gtag'\n\nconst getCountryFromData = response => response.data.country\n\nasync function currentCountry(url){\n  return await axios\n    .get(url)\n    .then(getCountryFromData)\n    .catch(e => 'israel')\n}\n\nRouter.events.on('routeChangeComplete', url => gtag.pageview(url))\n\nconst lightTheme = () => ({\n  ...themes['common'],\n  ...themes['light'],\n})\n\nconst darkTheme = () => ({\n  ...themes['common'],\n  ...themes['dark'],\n})\n\n\nfunction MyApp ({ Component, pageProps, userLocation }) {\n  const [theme, setTheme] = useState(lightTheme())\n  console.log(userLocation);\n  const [isHeb, setHeb] = useState(userLocation === 'israel' || userLocation === 'Israel' ? true : false)\n  const [menuOpen, setOpen] = useState(false)\n\n  const closeMenu     = () => setOpen(false)\n  const toggleMenu    = () => setOpen(!menuOpen)\n  const toggleLang    = () => {closeMenu(), setHeb(!isHeb)}\n  const setDarkTheme  = () => {closeMenu(), setTheme(darkTheme())}\n  const setLightTheme = () => {closeMenu(), setTheme(lightTheme())}\n\n  const node          = useRef()\n  useOutSide(node, closeMenu)\n\n  const displayLang   = isHeb ? 'English' : 'עברית'\n  const isLight       = theme.type === 'light'\n\n  return (\n    <ProxyContextProvider>\n      <ThemeProvider theme={theme}>\n        <GlobalStyle isHeb={isHeb}/>\n\n        <Header title='nCorona' isHeb={isHeb} >\n          <div ref={node}>\n            <Burger setOpen={toggleMenu} open={menuOpen} />\n            <Menu setOpen={toggleMenu} open={menuOpen} >\n\n              <Link href=\"/News\">\n                <a alt=\"news\" onClick={() => closeMenu()}>\n                  <span>&#128240;</span>\n                  { isHeb && 'חדשות' || 'News' }\n                </a>\n              </Link>\n\n              <Link href=\"/Statistics\">\n                <a alt=\"stats\" onClick={() => closeMenu()}>\n                  <span>\t&#128506;</span>\n                  { isHeb && 'נתונים' || 'Data' }\n                </a>\n              </Link>\n\n              <Link href=\"/About\">\n                <a alt=\"about\" onClick={() => closeMenu()}>\n                  <span>\t&#128506;</span>\n                  { isHeb && 'אודות' || 'About' }\n                </a>\n              </Link>\n\n      {/*\n      // This is Night Mode.. Currently disabled\n              <a onClick={isLight ?setDarkTheme : setLightTheme}>\n                <span>{ isLight ? '🌒' : '🌞'}</span>\n                {\n                  isLight\n                  ? (isHeb && 'מצב לילה' || 'Dark Mode')\n                  : (isHeb && 'מצב יום' || 'Light Mode')\n                }\n              </a>\n      */}\n\n              <a onClick={toggleLang}>\n                <span>&#127760;</span>\n                {displayLang}\n              </a>\n\n            </Menu>\n          </div>\n\n        </Header>\n        <ProxyView />\n        <Component {...pageProps} isHeb={isHeb} userLocation={userLocation}  />\n      </ThemeProvider>\n    </ProxyContextProvider>\n  )\n}\n\n\nMyApp.getInitialProps = async (appContext) => {\n  const appProps = await App.getInitialProps(appContext)\n\n  let newProxy = null\n  if (appContext.ctx && appContext.ctx.req) {\n    // grab client's ip address\n    const ipAddress = req.headers['x-forwarded-for'] || req.connection.remoteAddress\n    const localAddresses = ['::1', '127.0.0.1', 'localhost']\n    // Construct URL with IP ADDRESS\n    if (localAddresses.includes(ipAddress)) return { countryName: 'israel' }\n    try {\n      const proxyUrl = `https://extreme-ip-lookup.com/json/${ipAddress}`\n      const countryName = await currentCountry(proxyUrl)\n      const newProxy = { countryName, ipAddress }\n      return { newProxy, ...appProps }\n    } catch(e) {\n      return { errorCode: e.code, errorMessage: e.message, ...appProps }\n    }\n  }\n  return { ...appProps, newProxy: null }\n}\n\nexport default MyApp\n"]},"metadata":{},"sourceType":"module"}