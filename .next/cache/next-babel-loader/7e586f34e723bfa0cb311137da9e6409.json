{"ast":null,"code":"var _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/components/Stats.js\";\nvar __jsx = React.createElement;\nimport useTodayStats from '../utils/useTodayStats';\nimport useTime from '../utils/useTime';\nimport StatBlock from './StatBlock';\nimport React from 'react';\nimport styled from 'styled-components';\nimport Spinner from './Spinner';\nimport Bar from './Bar';\nimport Chart from './Chart';\nconst vocab = {\n  'cases': 'infected',\n  'recovered': 'recovered',\n  'country': 'country',\n  'deaths': 'deaths',\n  'todayCases': 'today'\n};\n\nconst prop = o => k => o[k];\n\nconst switchToVocab = word => vocab[word];\n\nconst Container = styled.div`\n  max-width: 760px;\n  margin: 0 auto;\n  text-align: center;\n`;\nconst Grid = styled.div`\n  margin-top: 64px;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 1.5rem;\n`;\nexport default function Stats({\n  url,\n  cn = '',\n  isWorld,\n  timeData,\n  todayWorld,\n  todayStats\n}) {\n  // const {\n  //   country,\n  //   cases,\n  //   recovered,\n  //   deaths,\n  //   todayCases,\n  // } = todayStats\n  //\n  // const o = { cases, todayCases, recovered, deaths }\n  //\n  // const organizeData = d => {\n  //   const mapToKeyword = (k) => ({[switchToVocab(k)]: prop(d)(k)})\n  //   return Object.keys(d).map(mapToKeyword)\n  // }\n  // const todayGraph = organizeData(o)\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    style: {\n      fontSize: '20px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Status for:   \", __jsx(\"span\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, country)), todayStats && __jsx(Chart, {\n    type: \"bar\",\n    info: todayStats,\n    label: country + '\\'s Outbreak',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), __jsx(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(StatBlock, {\n    title: \"Infected\",\n    data: cases,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), __jsx(StatBlock, {\n    title: \"Recovered\",\n    data: recovered,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), __jsx(StatBlock, {\n    title: \"Total Deaths\",\n    data: deaths,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), __jsx(StatBlock, {\n    title: \"New Cases Today\",\n    data: todayCases,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/components/Stats.js"],"names":["useTodayStats","useTime","StatBlock","React","styled","Spinner","Bar","Chart","vocab","prop","o","k","switchToVocab","word","Container","div","Grid","Stats","url","cn","isWorld","timeData","todayWorld","todayStats","fontSize","fontWeight","country","cases","recovered","deaths","todayCases"],"mappings":";;AAAA,OAAOA,aAAP,MAA0B,wBAA1B;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,MAAMC,KAAK,GAAG;AACZ,WAAS,UADG;AAEZ,eAAa,WAFD;AAGZ,aAAW,SAHC;AAIZ,YAAU,QAJE;AAKZ,gBAAc;AALF,CAAd;;AAQA,MAAMC,IAAI,GAAGC,CAAC,IAAIC,CAAC,IAAID,CAAC,CAACC,CAAD,CAAxB;;AACA,MAAMC,aAAa,GAAGC,IAAI,IAAIL,KAAK,CAACK,IAAD,CAAnC;;AAEA,MAAMC,SAAS,GAAGV,MAAM,CAACW,GAAI;;;;CAA7B;AAMA,MAAMC,IAAI,GAAGZ,MAAM,CAACW,GAAI;;;;;CAAxB;AAOA,eAAe,SAASE,KAAT,CAAe;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,EAAE,GAAG,EAAZ;AAAgBC,EAAAA,OAAhB;AAAyBC,EAAAA,QAAzB;AAAmCC,EAAAA,UAAnC;AAA+CC,EAAAA;AAA/C,CAAf,EAA4E;AAEzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAI,IAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA6C;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,UAAU,EAAE;AAAb,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCC,OAApC,CAA7C,CAFF,EAKIH,UAAU,IACR,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,KAAZ;AAAkB,IAAA,IAAI,EAAEA,UAAxB;AAAoC,IAAA,KAAK,EAAEG,OAAO,GAAG,cAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANN,EASE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,KAAK,EAAC,UADR;AAEE,IAAA,IAAI,EAAEC,KAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE,MAAC,SAAD;AACE,IAAA,KAAK,EAAC,WADR;AAEE,IAAA,IAAI,EAAEC,SAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EASE,MAAC,SAAD;AACE,IAAA,KAAK,EAAC,cADR;AAEE,IAAA,IAAI,EAAEC,MAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAaE,MAAC,SAAD;AACE,IAAA,KAAK,EAAC,iBADR;AAEE,IAAA,IAAI,EAAEC,UAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CATF,CADF;AA+BD","sourcesContent":["import useTodayStats from '../utils/useTodayStats'\nimport useTime from '../utils/useTime'\nimport StatBlock from './StatBlock'\nimport React from 'react'\nimport styled from 'styled-components'\nimport Spinner from './Spinner'\nimport Bar from './Bar'\nimport Chart from './Chart'\n\nconst vocab = {\n  'cases': 'infected',\n  'recovered': 'recovered',\n  'country': 'country',\n  'deaths': 'deaths',\n  'todayCases': 'today',\n}\n\nconst prop = o => k => o[k]\nconst switchToVocab = word => vocab[word]\n\nconst Container = styled.div`\n  max-width: 760px;\n  margin: 0 auto;\n  text-align: center;\n`\n\nconst Grid = styled.div`\n  margin-top: 64px;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 1.5rem;\n`\n\nexport default function Stats({ url, cn = '', isWorld, timeData, todayWorld, todayStats }) {\n\n  // const {\n  //   country,\n  //   cases,\n  //   recovered,\n  //   deaths,\n  //   todayCases,\n  // } = todayStats\n  //\n  // const o = { cases, todayCases, recovered, deaths }\n  //\n  // const organizeData = d => {\n  //   const mapToKeyword = (k) => ({[switchToVocab(k)]: prop(d)(k)})\n  //   return Object.keys(d).map(mapToKeyword)\n  // }\n  // const todayGraph = organizeData(o)\n\n  return (\n    <Container>\n\n      <h1 style={{fontSize: '20px'}}>Status for:   <span style={{fontWeight: 'bold'}}>{country}</span></h1>\n\n      {\n        todayStats &&\n          <Chart type='bar' info={todayStats} label={country + '\\'s Outbreak'} />\n      }\n\n      <Grid>\n        <StatBlock \n          title=\"Infected\"\n          data={cases}\n        />\n        <StatBlock \n          title=\"Recovered\"\n          data={recovered}\n        />\n        <StatBlock \n          title=\"Total Deaths\"\n          data={deaths}\n        />\n        <StatBlock \n          title=\"New Cases Today\"\n          data={todayCases}\n        />\n      </Grid>\n\n    </Container>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}