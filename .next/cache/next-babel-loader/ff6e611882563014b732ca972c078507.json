{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from 'axios';\nimport Head from 'next/head';\nimport { useEffect, useContext } from 'react';\nimport CoronaApp from '../components/CoronaApp';\nimport InfoSection from '../components/InfoSection';\nimport Footer from '../components/Footer';\nimport { FadeIn } from '../components/S';\nimport useWorldData from '../hooks/useWorldData';\nimport { ProxyContext } from '../context/proxy-context';\nimport { LocaleContext } from '../context/LocaleContext';\nimport { getInitialLocale } from '../locales/getInitialLocale';\n\nvar getCountryFromData = function getCountryFromData(response) {\n  return response.data.country;\n};\n\nvar currentCountry = function currentCountry(url) {\n  return _regeneratorRuntime.async(function currentCountry$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(url).then(getCountryFromData)[\"catch\"](function (e) {\n            return 'israel';\n          }));\n\n        case 2:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nfunction IndexPage(_ref) {\n  var worldTime = _ref.worldTime,\n      yesterdayGlobal = _ref.yesterdayGlobal,\n      newProxy = _ref.newProxy;\n\n  var _useContext = useContext(ProxyContext),\n      proxy = _useContext[0],\n      setProxy = _useContext[1];\n\n  useEffect(function () {\n    var ignore = false;\n\n    if (newProxy && !ignore) {\n      setProxy(newProxy);\n    }\n\n    return function () {\n      ignore: true;\n    };\n  }, [newProxy]);\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"nCorona - Novel Coronavirus Statistics & Resources for Coping\")), __jsx(FadeIn, {\n    delay: \"0.5s\"\n  }, __jsx(CoronaApp, {\n    userLocation: newProxy && newProxy.countryName || proxy && proxy.countryName,\n    worldTime: worldTime,\n    yesterdayGlobal: yesterdayGlobal\n  }), __jsx(InfoSection, null)));\n}\n\nIndexPage.getInitialProps = function _callee(_ref2) {\n  var req, worldTime, globalData, yesterdayGlobal, localAddresses, ipAddress, proxyUrl, countryName, newProxy;\n  return _regeneratorRuntime.async(function _callee$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          req = _ref2.req;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(useWorldData());\n\n        case 3:\n          worldTime = _context2.sent;\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(axios.get('https://corona.lmao.ninja/v2/all?yesterday=true'));\n\n        case 6:\n          globalData = _context2.sent;\n          yesterdayGlobal = {\n            active: globalData.data.active,\n            critical: globalData.data.critical,\n            cases: globalData.data.cases,\n            todayCases: globalData.data.todayCases,\n            recovered: globalData.data.recovered,\n            deaths: globalData.data.deaths,\n            country: globalData.data.country,\n            affectedCountries: globalData.data.affectedCountries\n          };\n\n          if (!req) {\n            _context2.next = 23;\n            break;\n          }\n\n          // const ipAddress = req.headers['x-forwarded-for'] || req.connection.remoteAddress\n          localAddresses = ['::1', '127.0.0.1', 'localhost'];\n          ipAddress = '185.163.111.170'; // Construct URL with IP ADDRESS\n\n          proxyUrl = !localAddresses.includes(ipAddress) && \"https://extreme-ip-lookup.com/json/\".concat(ipAddress) || null;\n          _context2.prev = 12;\n          _context2.next = 15;\n          return _regeneratorRuntime.awrap(currentCountry(proxyUrl));\n\n        case 15:\n          countryName = _context2.sent;\n          newProxy = {\n            countryName: countryName,\n            ipAddress: ipAddress\n          };\n          return _context2.abrupt(\"return\", {\n            newProxy: newProxy,\n            worldTime: worldTime,\n            yesterdayGlobal: yesterdayGlobal\n          });\n\n        case 20:\n          _context2.prev = 20;\n          _context2.t0 = _context2[\"catch\"](12);\n          return _context2.abrupt(\"return\", {\n            errorCode: _context2.t0.code,\n            errorMessage: _context2.t0.message,\n            yesterdayGlobal: yesterdayGlobal,\n            worldTime: worldTime\n          });\n\n        case 23:\n          return _context2.abrupt(\"return\", {\n            yesterdayGlobal: yesterdayGlobal,\n            worldTime: worldTime,\n            newProxy: null\n          });\n\n        case 24:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[12, 20]], Promise);\n};\n\nexport default IndexPage;","map":null,"metadata":{},"sourceType":"module"}