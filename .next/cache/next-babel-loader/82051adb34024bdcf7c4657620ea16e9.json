{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/components/Layout.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect, useRef, useState, useContext } from 'react';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { themes } from '../utils/themes'; // Components\n\nimport Burger from '../components/Burger';\nimport Menu from '../components/Menu';\nimport Header from '../components/Header'; // Context & Hooks\n\nimport { ProxyContext } from '../context/proxy-context';\nimport { LocaleContext } from '../context/LocaleContext';\nimport useOutSide from '../hooks/useOutSide';\nimport useTranslation from '../hooks/useTranslation.tsx';\nimport { getInitialLocale } from '../locales/getInitialLocale'; // Functions for changing themes\n\nvar lightTheme = function lightTheme() {\n  return _objectSpread({}, themes['common'], {}, themes['light']);\n};\n\nvar darkTheme = function darkTheme() {\n  return _objectSpread({}, themes['common'], {}, themes['dark']);\n};\n\nvar langs = ['he', 'en'];\n\nvar Layout = function Layout(_ref) {\n  var children = _ref.children,\n      newProxy = _ref.newProxy;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useContext = useContext(ProxyContext),\n      proxy = _useContext[0],\n      setProxy = _useContext[1];\n\n  var _useContext2 = useContext(LocaleContext),\n      locale = _useContext2.locale,\n      setLocale = _useContext2.setLocale;\n\n  useEffect(function () {\n    var ig = false;\n\n    if (locale && !ig) {\n      var loc = getInitialLocale();\n      setLocale(loc);\n    }\n\n    return function () {\n      console.log('triggered effect');\n    }; // return () => { ig: true }\n  }, [locale]);\n  useEffect(function () {\n    var ignore = false;\n\n    if (newProxy && !ignore) {\n      setProxy(newProxy);\n    }\n\n    return function () {\n      ignore: true;\n    };\n  }, [newProxy]); // manipulate the theme\n\n  var _useState = useState(lightTheme()),\n      theme = _useState[0],\n      setTheme = _useState[1]; // setting locale. not  sure yet if I use it or context API only\n\n\n  var _useState2 = useState(proxy && proxy.countryName.toLowerCase() === 'israel' ? true : false),\n      isHeb = _useState2[0],\n      setHeb = _useState2[1];\n\n  var _useState3 = useState(false),\n      menuOpen = _useState3[0],\n      setOpen = _useState3[1];\n\n  var closeMenu = function closeMenu() {\n    return setOpen(false);\n  };\n\n  var toggleMenu = function toggleMenu() {\n    return setOpen(!menuOpen);\n  }; // const toggleLang    = () => {closeMenu(), setHeb(!isHeb)}\n  // const toggleLang    = () => {closeMenu(), setLocale(langs[+!langs.indexOf(locale)])}\n\n\n  var toggleLang = function toggleLang() {\n    closeMenu();\n    var newLocale = langs[+!langs.indexOf(locale)];\n    setLocale(newLocale);\n  };\n\n  var node = useRef();\n  useOutSide(node, closeMenu);\n  var displayLang = locale === 'heb' ? 'English' : 'עברית';\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, t('metaTitle')), __jsx(\"meta\", {\n    name: \"description\",\n    content: t('metaKey'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })), __jsx(React.Fragment, null, __jsx(Header, {\n    title: \"nCorona\",\n    isHeb: isHeb,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    ref: node,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(Burger, {\n    setOpen: toggleMenu,\n    open: menuOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), __jsx(Menu, {\n    setOpen: toggleMenu,\n    open: menuOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/News\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    alt: \"news\",\n    onClick: function onClick() {\n      return closeMenu();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"\\uD83D\\uDCF0\"), t('links')('news'))), __jsx(Link, {\n    href: \"/Statistics\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    alt: \"stats\",\n    onClick: function onClick() {\n      return closeMenu();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \" \\uD83D\\uDDFA\"), t('links')('statistics'))), __jsx(Link, {\n    href: \"/About\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    alt: \"about\",\n    onClick: function onClick() {\n      return closeMenu();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \" \\uD83D\\uDDFA\"), t('links')('about'))), __jsx(\"a\", {\n    onClick: toggleLang,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"\\uD83C\\uDF10\"), displayLang)))), children));\n};\n\nexport default Layout;","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/components/Layout.js"],"names":["useEffect","useRef","useState","useContext","Head","Link","themes","Burger","Menu","Header","ProxyContext","LocaleContext","useOutSide","useTranslation","getInitialLocale","lightTheme","darkTheme","langs","Layout","children","newProxy","t","proxy","setProxy","locale","setLocale","ig","loc","console","log","ignore","theme","setTheme","countryName","toLowerCase","isHeb","setHeb","menuOpen","setOpen","closeMenu","toggleMenu","toggleLang","newLocale","indexOf","node","displayLang"],"mappings":"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","sourcesContent":["import { useEffect, useRef, useState, useContext } from 'react'\nimport Head from 'next/head'\nimport Link from 'next/link';\n\nimport { themes } from '../utils/themes'\n\n// Components\nimport Burger from '../components/Burger';\nimport Menu from '../components/Menu';\nimport Header from '../components/Header'\n\n// Context & Hooks\nimport { ProxyContext } from '../context/proxy-context'\nimport { LocaleContext } from '../context/LocaleContext'\nimport useOutSide from '../hooks/useOutSide'\nimport useTranslation from '../hooks/useTranslation.tsx'\n\nimport { getInitialLocale } from '../locales/getInitialLocale'\n\n\n// Functions for changing themes\nconst lightTheme = () => ({\n  ...themes['common'],\n  ...themes['light'],\n})\nconst darkTheme = () => ({\n  ...themes['common'],\n  ...themes['dark'],\n})\n\nconst langs = [ 'he', 'en' ]\n\nconst Layout = ({ children, newProxy }) => {\n  const { t } = useTranslation()\n\n  const [proxy,  setProxy ]  = useContext(ProxyContext)\n  const { locale, setLocale } = useContext(LocaleContext)\n\n\n  useEffect(() => {\n    let ig = false\n    if (locale && !ig) {\n      let loc = getInitialLocale()\n      setLocale(loc)\n    }\n    return () => {console.log('triggered effect')}\n    // return () => { ig: true }\n  }, [locale])\n\n  useEffect(() => {\n    let ignore = false\n    if (newProxy && !ignore) {\n      setProxy(newProxy)\n    }\n    return () => { ignore: true }\n  }, [newProxy])\n\n  // manipulate the theme\n  const [theme, setTheme] = useState(lightTheme())\n\n  // setting locale. not  sure yet if I use it or context API only\n  const [isHeb, setHeb] = useState(proxy && proxy.countryName.toLowerCase() === 'israel' ? true : false)\n  const [menuOpen, setOpen] = useState(false)\n\n  const closeMenu     = () => setOpen(false)\n  const toggleMenu    = () => setOpen(!menuOpen)\n  // const toggleLang    = () => {closeMenu(), setHeb(!isHeb)}\n  // const toggleLang    = () => {closeMenu(), setLocale(langs[+!langs.indexOf(locale)])}\n  const toggleLang    = () => {closeMenu(); const newLocale = langs[+!langs.indexOf(locale)]; setLocale(newLocale)}\n  const node          = useRef()\n  useOutSide(node, closeMenu)\n  const displayLang   = locale === 'heb' ? 'English' : 'עברית'\n\n  return (\n    <>\n      <Head>\n        <title>{t('metaTitle')}</title>\n        <meta name=\"description\" content={t('metaKey')}/>\n      </Head>\n      <>\n        <Header title=\"nCorona\" isHeb={isHeb} >\n\n          <div ref={node}>\n\n            {/*-------- /// Burger Menu & Menu /// --------- */}\n\n            <Burger setOpen={toggleMenu} open={menuOpen} />\n            <Menu setOpen={toggleMenu} open={menuOpen} >\n\n            {/*-------- /// NAV LINKS /// --------- */}\n\n              <Link href=\"/News\">\n                <a alt=\"news\" onClick={() => closeMenu()}>\n                  <span>&#128240;</span>\n                  {t('links')('news')}\n                </a>\n              </Link>\n\n              <Link href=\"/Statistics\">\n                <a alt=\"stats\" onClick={() => closeMenu()}>\n                  <span>\t&#128506;</span>\n                  {t('links')('statistics')}\n                </a>\n              </Link>\n\n              <Link href=\"/About\">\n                <a alt=\"about\" onClick={() => closeMenu()}>\n                  <span>\t&#128506;</span>\n                  {t('links')('about')}\n                </a>\n              </Link>\n\n              {/*\n                    // MEANT FOR NIGHT MODE -\n                    // This is Night Mode.. Currently disabled\n                      <a onClick={isLight ?setDarkTheme : setLightTheme}>\n                        <span>{ isLight ? '🌒' : '🌞'}</span>\n                        {\n                          isLight\n                          ? (isHeb && 'מצב לילה' || 'Dark Mode')\n                          : (isHeb && 'מצב יום' || 'Light Mode')\n                        }\n                      </a>\n              */}\n\n              <a onClick={toggleLang}>\n                <span>&#127760;</span>\n                {displayLang}\n              </a>\n\n            </Menu>\n          </div>\n\n\n        </Header>\n        {children}\n      </>\n    </>\n  )\n}\n\nexport default Layout\n"]},"metadata":{},"sourceType":"module"}