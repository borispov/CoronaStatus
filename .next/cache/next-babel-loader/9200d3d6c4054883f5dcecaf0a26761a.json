{"ast":null,"code":"var _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/components/CoronaApp.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useState, useEffect } from 'react';\nimport Input from './Input';\nimport Stats from './Stats';\nimport Header from './Header';\nimport useTime from '../utils/useTime';\nimport useTodayStats from '../utils/useTodayStats';\nimport Chart from './Chart';\nimport Container from './Container';\nimport sortForChart from '../utils/sortForChart';\nimport mapDataForTodayGraph from '../utils/mapDataForTodayGraph';\nexport default (() => {\n  const {\n    0: country,\n    1: setCountry\n  } = useState('');\n  const {\n    0: inputValue,\n    1: setInput\n  } = useState('');\n  const url = 'http://covid19.borisky.me:3003/api/v1/';\n  const {\n    todayStats\n  } = useTodayStats(url, country);\n  const {\n    worldStats,\n    timeError,\n    timeLoading\n  } = useTime();\n  const todayStatsSorted = mapDataForTodayGraph(todayStats);\n\n  const handleChange = e => setInput(e.target.value);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setCountry(inputValue);\n  };\n\n  if (timeLoading || timeError) return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \" Loading....\");\n  if (timeError) return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \" We've encountered an Error. Maybe you typed wrong country\");\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Covid19 Feed\"), __jsx(Stats, {\n    url: url,\n    cn: country || todayStats.country,\n    isWorld: false,\n    timeData: worldStats,\n    single: todayStatsSorted,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), __jsx(Chart, _extends({\n    type: \"line\"\n  }, worldStats, {\n    label: country + '\\'s Outbreak Over Time',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), __jsx(\"form\", {\n    style: {\n      width: '100%',\n      margin: '54px 0 auto',\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    style: {\n      fontSize: '16px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Search For Country:\", __jsx(Input, {\n    type: \"text\",\n    value: inputValue,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), __jsx(\"input\", {\n    type: \"submit\",\n    value: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })));\n});","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/components/CoronaApp.js"],"names":["useState","useEffect","Input","Stats","Header","useTime","useTodayStats","Chart","Container","sortForChart","mapDataForTodayGraph","country","setCountry","inputValue","setInput","url","todayStats","worldStats","timeError","timeLoading","todayStatsSorted","handleChange","e","target","value","handleSubmit","preventDefault","width","margin","display","justifyContent","fontSize"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,oBAAP,MAAiC,+BAAjC;AAGA,gBAAe,MAAM;AACnB,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAA,OAACa,UAAD;AAAA,OAAaC;AAAb,MAAyBd,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAMe,GAAG,GAAG,wCAAZ;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAiBV,aAAa,CAACS,GAAD,EAAMJ,OAAN,CAApC;AACA,QAAM;AAAEM,IAAAA,UAAF;AAAcC,IAAAA,SAAd;AAAyBC,IAAAA;AAAzB,MAAyCd,OAAO,EAAtD;AAEA,QAAMe,gBAAgB,GAAGV,oBAAoB,CAACM,UAAD,CAA7C;;AAEA,QAAMK,YAAY,GAAGC,CAAC,IAAIR,QAAQ,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlC;;AACA,QAAMC,YAAY,GAAGH,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACI,cAAF;AACAd,IAAAA,UAAU,CAACC,UAAD,CAAV;AACD,GAHD;;AAKA,MAAIM,WAAW,IAAID,SAAnB,EAA8B,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AAC9B,MAAIA,SAAJ,EAAe,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEAAP;AAEf,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAGE,MAAC,KAAD;AACE,IAAA,GAAG,EAAEH,GADP;AAEE,IAAA,EAAE,EAAEJ,OAAO,IAAIK,UAAU,CAACL,OAF5B;AAGE,IAAA,OAAO,EAAE,KAHX;AAIE,IAAA,QAAQ,EAAEM,UAJZ;AAKE,IAAA,MAAM,EAAEG,gBALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAWE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC;AAAZ,KAAuBH,UAAvB;AAAmC,IAAA,KAAK,EAAEN,OAAO,GAAG,wBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAXF,EAaE;AACE,IAAA,KAAK,EAAE;AACLgB,MAAAA,KAAK,EAAE,MADF;AAELC,MAAAA,MAAM,EAAE,aAFH;AAGLC,MAAAA,OAAO,EAAE,MAHJ;AAILC,MAAAA,cAAc,EAAE;AAJX,KADT;AAQE,IAAA,QAAQ,EAAEL,YARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE;AAAO,IAAA,KAAK,EAAE;AAACM,MAAAA,QAAQ,EAAE;AAAX,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAEE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAElB,UAA1B;AAAsC,IAAA,QAAQ,EAAEQ,YAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CATF,EAaE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CAbF,CADF;AAkCD,CArDD","sourcesContent":["import { useState, useEffect } from 'react'\nimport Input from './Input'\nimport Stats from './Stats'\nimport Header from './Header'\nimport useTime from '../utils/useTime'\nimport useTodayStats from '../utils/useTodayStats'\nimport Chart from './Chart'\nimport Container from './Container'\nimport sortForChart from '../utils/sortForChart'\nimport mapDataForTodayGraph from '../utils/mapDataForTodayGraph'\n\n\nexport default () => {\n  const [country, setCountry] = useState('')\n  const [inputValue, setInput] = useState('')\n  const url = 'http://covid19.borisky.me:3003/api/v1/'\n\n  const { todayStats } = useTodayStats(url, country)\n  const { worldStats, timeError, timeLoading } = useTime()\n\n  const todayStatsSorted = mapDataForTodayGraph(todayStats)\n\n  const handleChange = e => setInput(e.target.value)\n  const handleSubmit = e => {\n    e.preventDefault();\n    setCountry(inputValue)\n  }\n\n  if (timeLoading || timeError) return <div> Loading....</div>\n  if (timeError) return <div> We've encountered an Error. Maybe you typed wrong country</div>\n\n  return (\n    <div>\n      <Header>Covid19 Feed</Header>\n\n      <Stats \n        url={url}\n        cn={country || todayStats.country}\n        isWorld={false}\n        timeData={worldStats}\n        single={todayStatsSorted}\n      />\n\n      <Chart type='line' {...worldStats} label={country + '\\'s Outbreak Over Time'} />\n\n      <form \n        style={{\n          width: '100%',\n          margin: '54px 0 auto',\n          display: 'flex',\n          justifyContent: 'center'\n\n        }}\n        onSubmit={handleSubmit}>\n        <label style={{fontSize: '16px'}}>\n          Search For Country:\n          <Input type=\"text\" value={inputValue} onChange={handleChange} />\n        </label>\n        <input type=\"submit\" value=\"submit\" />\n      </form>\n\n    </div>\n  )\n  \n\n}\n"]},"metadata":{},"sourceType":"module"}