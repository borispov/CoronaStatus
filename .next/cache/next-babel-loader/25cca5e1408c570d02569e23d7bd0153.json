{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/components/CaseChart.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Button from './Button';\nimport axios from 'axios';\nimport sortForChart from '../utils/sortForChart';\nimport Chart from './Chart';\nimport Container from './Container';\nimport { motion } from 'framer-motion';\nvar baseURL = \"https://nCorona.live/api/v1/alltime/\";\n\nvar countryTimeData = function countryTimeData(cn) {\n  var loc, data, dataRes;\n  return _regeneratorRuntime.async(function countryTimeData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.t0 = cn;\n\n          if (_context.t0) {\n            _context.next = 5;\n            break;\n          }\n\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(currentCountry());\n\n        case 4:\n          _context.t0 = _context.sent;\n\n        case 5:\n          loc = _context.t0;\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(axios.get(baseURL + loc));\n\n        case 8:\n          data = _context.sent;\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(sortForChart(data.data));\n\n        case 11:\n          dataRes = _context.sent;\n          return _context.abrupt(\"return\", dataRes);\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar worldTimeData = function worldTimeData() {\n  var data, dataRes;\n  return _regeneratorRuntime.async(function worldTimeData$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(baseURL));\n\n        case 2:\n          data = _context2.sent;\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(sortForChart(data.data));\n\n        case 5:\n          dataRes = _context2.sent;\n          return _context2.abrupt(\"return\", dataRes);\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nfunction currentCountry() {\n  return _regeneratorRuntime.async(function currentCountry$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(axios.get('https://extreme-ip-lookup.com/json/').then(function (res) {\n            return res.data.country;\n          })[\"catch\"](function (e) {\n            return 'israel';\n          }));\n\n        case 2:\n          return _context3.abrupt(\"return\", _context3.sent);\n\n        case 3:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar CaseChart = /*#__PURE__*/function (_React$Component) {\n  _inherits(CaseChart, _React$Component);\n\n  function CaseChart(props) {\n    var _this;\n\n    _classCallCheck(this, CaseChart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CaseChart).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"present\", function (val) {\n      return _this.setState({\n        dataToPresent: val\n      });\n    });\n\n    _this.state = {\n      dataToPresent: 'worldCases',\n      worldData: [],\n      countryData: [],\n      worldLabels: [],\n      countryLabels: [],\n      worldCases: [],\n      deathCases: [],\n      newCases: [],\n      countryCases: [],\n      showWorld: true,\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(CaseChart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props, timeStats, countryStats, worldCases, deathCases, newCases, countryCases, countryLabels, worldLabels, worldDeaths;\n\n      return _regeneratorRuntime.async(function componentDidMount$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              this.setState({\n                loading: true\n              });\n\n              try {\n                _this$props = this.props, timeStats = _this$props.timeStats, countryStats = _this$props.countryStats;\n                worldCases = timeStats && timeStats.datasets.filter(function (a) {\n                  return a.label === 'cases';\n                });\n                deathCases = timeStats && timeStats.datasets.filter(function (a) {\n                  return a.label === 'deaths';\n                });\n                newCases = timeStats && timeStats.datasets.filter(function (a) {\n                  return a.label === 'new cases';\n                });\n                countryCases = countryStats && countryStats.datasets.filter(function (a) {\n                  return a.label === 'cases';\n                });\n                countryLabels = countryStats && countryStats.labels;\n                worldLabels = timeStats && timeStats.labels;\n                worldDeaths = timeStats && timeStats.datasets.filter(function (a) {\n                  return a.label === 'deaths';\n                });\n                this.setState({\n                  worldData: timeStats,\n                  countryData: countryStats,\n                  worldCases: worldCases,\n                  deathCases: deathCases,\n                  newCases: newCases,\n                  countryCases: countryCases,\n                  worldLabels: worldLabels,\n                  countryLabels: countryLabels,\n                  loading: false\n                });\n              } catch (err) {\n                this.setState({\n                  loading: false,\n                  error: err\n                });\n              }\n\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.loading) {\n        return __jsx(Container, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, __jsx(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, \"Loading Data . . .\"));\n      }\n\n      if (this.state.error) {\n        return __jsx(Container, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, __jsx(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, this.state.error));\n      }\n\n      return __jsx(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        style: {\n          margin: '82px 0 0 0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, this.props.isHeb && 'שיעור התפשטות הנגיף בעולם, מקרי מוות ומסרים מקרים חדשים ליום' || 'Growth Rate of the virus in the world, including deaths and new cases'), this.state.worldData && __jsx(motion.div, {\n        initial: \"initial\",\n        animate: \"enter\",\n        exit: \"exit\",\n        variants: {\n          exit: {\n            transition: {\n              staggerChildren: 0.1\n            }\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, __jsx(Chart, {\n        type: \"line\",\n        labels: this.state.worldLabels,\n        data: this.state[this.state.dataToPresent],\n        label: \"Global Statistics\",\n        theme: this.props.theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })) || __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \" Loading Charts ... \"), __jsx(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-around',\n          padding: '34px 32px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, __jsx(Button, {\n        onClick: function onClick() {\n          return _this2.present('worldCases');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, this.props.isHeb && 'נדבקים' || 'Cases'), __jsx(Button, {\n        onClick: function onClick() {\n          return _this2.present('deathCases');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, this.props.isHeb && 'מקרי מוות' || 'Deaths'), __jsx(Button, {\n        onClick: function onClick() {\n          return _this2.present('newCases');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, this.props.isHeb && 'מקרים חדשים' || 'New cases')));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(ctx) {\n      var timeStats, countryStats;\n      return _regeneratorRuntime.async(function getInitialProps$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return _regeneratorRuntime.awrap(worldTimeData());\n\n            case 2:\n              timeStats = _context5.sent;\n              _context5.next = 5;\n              return _regeneratorRuntime.awrap(countryTimeData(this.props.country));\n\n            case 5:\n              countryStats = _context5.sent;\n              return _context5.abrupt(\"return\", {\n                timeStats: timeStats,\n                countryStats: countryStats\n              });\n\n            case 7:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }]);\n\n  return CaseChart;\n}(React.Component);\n\nexport default CaseChart;","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/components/CaseChart.js"],"names":["React","Button","axios","sortForChart","Chart","Container","motion","baseURL","countryTimeData","cn","currentCountry","loc","get","data","dataRes","worldTimeData","then","res","country","e","CaseChart","props","val","setState","dataToPresent","state","worldData","countryData","worldLabels","countryLabels","worldCases","deathCases","newCases","countryCases","showWorld","loading","timeStats","countryStats","datasets","filter","a","label","labels","worldDeaths","err","error","margin","isHeb","exit","transition","staggerChildren","theme","display","justifyContent","padding","present","ctx","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Button from './Button'\nimport axios from 'axios'\nimport sortForChart from '../utils/sortForChart'\nimport Chart from './Chart'\nimport Container from './Container'\nimport { motion } from 'framer-motion'\n\nconst baseURL = `https://nCorona.live/api/v1/alltime/`\n\nconst countryTimeData = async (cn) => {\n  const loc = cn || await currentCountry()\n  const data = await axios.get(baseURL+loc)\n  const dataRes = await sortForChart(data.data)\n  return dataRes\n}\n\nconst worldTimeData = async () => {\n  const data = await axios.get(baseURL)\n  const dataRes = await sortForChart(data.data)\n  return dataRes\n}\n\nasync function currentCountry(){\n  return await axios\n    .get('https://extreme-ip-lookup.com/json/')\n    .then(res => res.data.country)\n    .catch(e => 'israel')\n}\n\n\nclass CaseChart extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      dataToPresent: 'worldCases',\n      worldData: [],\n      countryData: [],\n      worldLabels: [],\n      countryLabels: [],\n      worldCases: [],\n      deathCases: [],\n      newCases: [],\n      countryCases: [],\n      showWorld: true,\n      loading: false\n    }\n  }\n\n  static async getInitialProps(ctx) {\n    const timeStats = await worldTimeData()\n    const countryStats = await countryTimeData(this.props.country)\n    return { timeStats, countryStats }\n  }\n\n  present = val => this.setState({dataToPresent: val})\n\n  async componentDidMount() {\n    this.setState({ loading: true })\n\n    try {\n\n      const { timeStats, countryStats } = this.props\n\n      const worldCases = timeStats && timeStats.datasets.filter(a => a.label === 'cases')\n      const deathCases = timeStats && timeStats.datasets.filter(a => a.label === 'deaths')\n      const newCases = timeStats && timeStats.datasets.filter(a => a.label === 'new cases')\n\n      const countryCases = countryStats && countryStats.datasets.filter(a => a.label === 'cases')\n      const countryLabels = countryStats && countryStats.labels\n      const worldLabels = timeStats && timeStats.labels\n      const worldDeaths = timeStats && timeStats.datasets.filter(a => a.label === 'deaths')\n\n\n      this.setState({\n        worldData: timeStats,\n        countryData: countryStats,\n        worldCases,\n        deathCases,\n        newCases,\n        countryCases,\n        worldLabels,\n        countryLabels,\n        loading: false\n      })\n    } catch(err) {\n      this.setState({ loading: false, error: err })\n    }\n\n\n  }\n\n  render() {\n\n    if (this.state.loading) {\n      return <Container><h1>Loading Data . . .</h1></Container>\n    }\n    if (this.state.error) {\n      return <Container><h1>{this.state.error}</h1></Container>\n    }\n\n    return (\n      <Container >\n        <p style={{margin: '82px 0 0 0'}}>\n          {this.props.isHeb &&\n              'שיעור התפשטות הנגיף בעולם, מקרי מוות ומסרים מקרים חדשים ליום'\n                || 'Growth Rate of the virus in the world, including deaths and new cases'}\n        </p>\n        {\n          this.state.worldData &&\n            <motion.div initial=\"initial\" animate=\"enter\" exit=\"exit\" variants={{ exit: { transition: { staggerChildren: 0.1 } } }}>\n            <Chart \n              type='line'\n              labels={this.state.worldLabels}\n              data={this.state[this.state.dataToPresent]}\n              label='Global Statistics'\n              theme={this.props.theme}\n            /> \n            </motion.div>\n            || <div> Loading Charts ... </div>\n        }\n        <div style={{display: 'flex', justifyContent: 'space-around', padding: '34px 32px'}}>\n          <Button onClick={() => this.present('worldCases')}>{this.props.isHeb && 'נדבקים' || 'Cases'}</Button>\n          <Button onClick={() => this.present('deathCases')}>{this.props.isHeb && 'מקרי מוות' || 'Deaths'}</Button>\n          <Button onClick={() => this.present('newCases')}>{this.props.isHeb && 'מקרים חדשים' || 'New cases'}</Button>\n        </div>\n      </Container>\n    )\n  }\n\n}\n\nexport default CaseChart\n"]},"metadata":{},"sourceType":"module"}