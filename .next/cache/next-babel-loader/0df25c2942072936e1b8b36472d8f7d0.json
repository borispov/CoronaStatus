{"ast":null,"code":"var _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/components/CoronaApp.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport Input from './Input';\nimport Stats from './Stats';\nimport Header from './Header';\nimport useTime from '../utils/useTime';\nimport useTodayStats from '../utils/useTodayStats';\nimport Chart from './Chart';\nimport Container from './Container';\nimport HeaderDescription from './HeaderDescription';\nimport sortForChart from '../utils/sortForChart';\nimport mapDataForTodayGraph from '../utils/mapDataForTodayGraph';\nimport Button from './Button';\nexport default (function () {\n  var _useState = useState(true),\n      showWorld = _useState[0],\n      setTimeData = _useState[1];\n\n  var _useState2 = useState(''),\n      country = _useState2[0],\n      setCountry = _useState2[1];\n\n  var _useState3 = useState(''),\n      inputValue = _useState3[0],\n      setInput = _useState3[1];\n\n  var _useState4 = useState(true),\n      isWorld = _useState4[0],\n      setWorld = _useState4[1];\n\n  var url = 'http://covid19.borisky.me:3003/api/v1/';\n\n  var _useTodayStats = useTodayStats(url, country),\n      todayStats = _useTodayStats.todayStats;\n\n  var _useTime = useTime(rountry),\n      timeStats = _useTime.timeStats,\n      countryStats = _useTime.countryStats,\n      timeError = _useTime.timeError,\n      timeLoading = _useTime.timeLoading;\n\n  var todayStatsSorted = todayStats && {\n    cases: todayStats.cases,\n    todayCases: todayStats.todayCases,\n    recovered: todayStats.recovered,\n    deaths: todayStats.deaths\n  } || '';\n\n  var changeData = function changeData(k) {\n    return setTimeData(k);\n  };\n\n  var handleChange = function handleChange(e) {\n    return setInput(e.target.value);\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    setCountry(inputValue);\n  };\n\n  if (timeLoading || timeError) return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \" Loading....\");\n  if (timeError) return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \" We've encountered an Error. Maybe you typed wrong country\");\n  var worldCases = timeStats && timeStats.datasets.filter(function (a) {\n    return a.label === 'cases';\n  });\n  console.log(countryStats);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Covid19 Feed\"), __jsx(HeaderDescription, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), __jsx(Stats, {\n    isWorld: isWorld,\n    cn: country || todayStats && todayStats.country,\n    timeData: timeStats,\n    todayStats: todayStatsSorted,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      padding: '34px 32px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return changeData(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"World\"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \" | \"), __jsx(Button, {\n    onClick: function onClick() {\n      return changeData(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, country || 'Israel')), timeStats && __jsx(Chart, {\n    type: \"line\",\n    labels: showWorld && timeStats.labels || countryStats.labels,\n    data: showWorld && timeStats.datasets.filter(function (x) {\n      return x.label === 'cases';\n    }) || countryStats.datasets.filter(function (x) {\n      return x.label === 'cases';\n    }),\n    label: \"Infection Growth - Country/World\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }) || __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \" Loading Charts.............. \")), __jsx(\"form\", {\n    style: {\n      maxWidth: '520px',\n      margin: '54px auto'\n    },\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    style: {\n      fontSize: '16px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Search For Country:\"), __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      margin: '0 auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, __jsx(Input, {\n    type: \"text\",\n    value: inputValue,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), __jsx(Input, {\n    type: \"submit\",\n    value: \"submit\",\n    btn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }))));\n});","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/components/CoronaApp.js"],"names":["useState","useEffect","Input","Stats","Header","useTime","useTodayStats","Chart","Container","HeaderDescription","sortForChart","mapDataForTodayGraph","Button","showWorld","setTimeData","country","setCountry","inputValue","setInput","isWorld","setWorld","url","todayStats","rountry","timeStats","countryStats","timeError","timeLoading","todayStatsSorted","cases","todayCases","recovered","deaths","changeData","k","handleChange","e","target","value","handleSubmit","preventDefault","worldCases","datasets","filter","a","label","console","log","display","justifyContent","padding","labels","x","maxWidth","margin","fontSize"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport Input from './Input'\nimport Stats from './Stats'\nimport Header from './Header'\nimport useTime from '../utils/useTime'\nimport useTodayStats from '../utils/useTodayStats'\nimport Chart from './Chart'\nimport Container from './Container'\nimport HeaderDescription from './HeaderDescription'\nimport sortForChart from '../utils/sortForChart'\nimport mapDataForTodayGraph from '../utils/mapDataForTodayGraph'\nimport Button from './Button'\n\nexport default () => {\n  const [showWorld, setTimeData] = useState(true)\n  const [country, setCountry] = useState('')\n  const [inputValue, setInput] = useState('')\n  const [isWorld, setWorld] = useState(true)\n\n\n  const url = 'http://covid19.borisky.me:3003/api/v1/'\n\n  const { todayStats } = useTodayStats(url, country)\n\n  const { timeStats, countryStats, timeError, timeLoading } = useTime(rountry)\n\n  const todayStatsSorted = todayStats && \n    {\n      cases: todayStats.cases,\n      todayCases: todayStats.todayCases,\n      recovered: todayStats.recovered,\n      deaths: todayStats.deaths\n    } || ''\n\n  const changeData = k => setTimeData(k)\n  const handleChange = e => setInput(e.target.value)\n  const handleSubmit = e => {\n    e.preventDefault();\n    setCountry(inputValue)\n  }\n\n  if (timeLoading || timeError) return <div> Loading....</div>\n  if (timeError) return <div> We've encountered an Error. Maybe you typed wrong country</div>\n\n  const worldCases = timeStats && timeStats.datasets.filter(a => a.label === 'cases')\n\n  console.log(countryStats);\n\n  return (\n    <div>\n      <Header>Covid19 Feed</Header>\n      <HeaderDescription />\n\n      <Stats\n        isWorld={isWorld}\n        cn={country || todayStats && todayStats.country}\n        timeData={timeStats}\n        todayStats={todayStatsSorted}\n      />\n      <Container>\n\n      <div style={{display: 'flex', justifyContent: 'center', padding: '34px 32px'}}>\n        <Button onClick={() => changeData(true)}>World</Button><span> | </span>\n        <Button onClick={() => changeData(false)}>{country || 'Israel'}</Button>\n      </div>\n\n      {/* Time Charts. Separate For Each Dataset (Cases, Deaths, New Cases) */}\n\n      { \n        timeStats &&\n          (\n            <Chart \n              type='line'\n              labels={showWorld && timeStats.labels || countryStats.labels}\n              data={showWorld \n                  && timeStats.datasets.filter(x=>x.label === 'cases')\n                  || countryStats.datasets.filter(x=>x.label === 'cases')}\n              label='Infection Growth - Country/World'\n            />\n          ) || <div> Loading Charts.............. </div>\n      }\n\n      </Container>\n\n      <form \n        style={{ maxWidth: '520px', margin: '54px auto'}}\n        onSubmit={handleSubmit}>\n\n        <label style={{fontSize: '16px'}}>\n          Search For Country:\n        </label>\n\n        <div style={{ display: 'flex', margin: '0 auto' }}>\n          <Input type=\"text\" value={inputValue} onChange={handleChange} />\n          <Input type=\"submit\" value=\"submit\" btn={true}/>\n        </div>\n      </form>\n\n    </div>\n  )\n  \n\n}\n"]},"metadata":{},"sourceType":"module"}