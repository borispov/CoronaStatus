{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar defaultLocale = 'he';\nimport { ProxyContext } from '../context/proxy-context';\n\nvar isLocale = function isLocale(str) {\n  return ['he', 'en'].some(function (locale) {\n    return str === locale;\n  });\n};\n\nexport function getInitialLocale(c) {\n  // preference from the previous session\n  var localSetting = localStorage.getItem('locale');\n\n  if (localSetting && isLocale(localSetting)) {\n    return localSetting;\n  }\n\n  var country = JSON.parse(localStorage.getItem('ip2proxy')); // const country = c\n\n  console.log(country);\n\n  if (country === 'israel') {\n    return 'he';\n  } // the language setting of the browser\n\n\n  var _navigator$language$s = navigator.language.split('-'),\n      _navigator$language$s2 = _slicedToArray(_navigator$language$s, 1),\n      browserSetting = _navigator$language$s2[0];\n\n  if (isLocale(browserSetting)) {\n    return browserSetting;\n  }\n\n  return defaultLocale;\n}","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/locales/getInitialLocale.js"],"names":["defaultLocale","ProxyContext","isLocale","str","some","locale","getInitialLocale","c","localSetting","localStorage","getItem","country","JSON","parse","console","log","navigator","language","split","browserSetting"],"mappings":";AAAA,IAAMA,aAAa,GAAG,IAAtB;AAEA,SAASC,YAAT,QAA6B,0BAA7B;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,GAAG;AAAA,SAAI,CAAC,IAAD,EAAO,IAAP,EAAaC,IAAb,CAAkB,UAAAC,MAAM;AAAA,WAAIF,GAAG,KAAKE,MAAZ;AAAA,GAAxB,CAAJ;AAAA,CAApB;;AAEA,OAAO,SAASC,gBAAT,CAA0BC,CAA1B,EAA4B;AACjC;AACA,MAAMC,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAArB;;AACA,MAAIF,YAAY,IAAIN,QAAQ,CAACM,YAAD,CAA5B,EAA4C;AAC1C,WAAOA,YAAP;AACD;;AAED,MAAMG,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAhB,CAPiC,CAQjC;;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;;AACA,MAAIA,OAAO,KAAK,QAAhB,EAA0B;AACxB,WAAO,IAAP;AACD,GAZgC,CAcjC;;;AAdiC,8BAeRK,SAAS,CAACC,QAAV,CAAmBC,KAAnB,CAAyB,GAAzB,CAfQ;AAAA;AAAA,MAe1BC,cAf0B;;AAgBjC,MAAIjB,QAAQ,CAACiB,cAAD,CAAZ,EAA8B;AAC5B,WAAOA,cAAP;AACD;;AAED,SAAOnB,aAAP;AACD","sourcesContent":["const defaultLocale = 'he'\n\nimport { ProxyContext } from '../context/proxy-context'\n\nconst isLocale = str => ['he', 'en'].some(locale => str === locale)\n\nexport function getInitialLocale(c){\n  // preference from the previous session\n  const localSetting = localStorage.getItem('locale')\n  if (localSetting && isLocale(localSetting)) {\n    return localSetting\n  }\n\n  const country = JSON.parse(localStorage.getItem('ip2proxy'))\n  // const country = c\n  console.log(country);\n  if (country === 'israel') {\n    return 'he'\n  }\n\n  // the language setting of the browser\n  const [browserSetting] = navigator.language.split('-')\n  if (isLocale(browserSetting)) {\n    return browserSetting\n  }\n\n  return defaultLocale\n}\n"]},"metadata":{},"sourceType":"module"}