{"ast":null,"code":"var _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/context/proxy-context.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useRef, createContext } from 'react';\nexport var ProxyContext = createContext();\nexport var ProxyContextProvider = function ProxyContextProvider(props) {\n  var initialState = {\n    ipAddress: 'localhost',\n    countryName: 'Nowhere'\n  }; // Declare shareable proxy state\n\n  var _useState = useState(initialState),\n      proxy = _useState[0],\n      setProxy = _useState[1];\n\n  var prev = useRef(); // Read and Write Proxy State to Local Storage\n\n  useEffect(function () {\n    if (proxy.countryName == 'Nowhere') {\n      var localState = JSON.parse(localStorage.getItem('ip2proxy'));\n\n      if (localState) {\n        console.info('reading local storage');\n        prev.current = localState.ipAddress;\n        setProxy(localState);\n      }\n    } else if (prev.current !== proxy.ipAddress) {\n      console.info('writing local storage');\n      localStorage.setItem('ip2proxy', JSON.stringify(proxy));\n    } // if (prev.current === undefined && proxy.countryName == 'israel') {\n    //     const localState = JSON.parse(localStorage.getItem('ip2proxy'))\n    //     if (localState) {\n    //         console.info('reading local storage')\n    //         prev.current = localState.ipAddress\n    //         setProxy(localState)\n    //     } else {\n    //       localStorage.setItem('ip2proxy', JSON.stringify(proxy))\n    //     }\n    // } else if (prev.current !== proxy.ipAddress) {\n    //     console.info('writing local storage')\n    //     localStorage.setItem('ip2proxy', JSON.stringify(proxy))\n    // }\n\n  }, [proxy]);\n  return __jsx(ProxyContext.Provider, {\n    value: [proxy, setProxy],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, props.children);\n};","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/context/proxy-context.js"],"names":["React","useState","useEffect","useRef","createContext","ProxyContext","ProxyContextProvider","props","initialState","ipAddress","countryName","proxy","setProxy","prev","localState","JSON","parse","localStorage","getItem","console","info","current","setItem","stringify","children"],"mappings":";;AAAA,OAAOA,KAAP,IACIC,QADJ,EAEIC,SAFJ,EAGIC,MAHJ,EAIIC,aAJJ,QAKO,OALP;AAOA,OAAO,IAAMC,YAAY,GAAGD,aAAa,EAAlC;AAEP,OAAO,IAAME,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,KAAD,EAAW;AAE3C,MAAMC,YAAY,GAAG;AACjBC,IAAAA,SAAS,EAAE,WADM;AAEjBC,IAAAA,WAAW,EAAE;AAFI,GAArB,CAF2C,CAO3C;;AAP2C,kBAQjBT,QAAQ,CAACO,YAAD,CARS;AAAA,MAQpCG,KARoC;AAAA,MAQ7BC,QAR6B;;AAS3C,MAAMC,IAAI,GAAGV,MAAM,EAAnB,CAT2C,CAW3C;;AACAD,EAAAA,SAAS,CAAC,YAAM;AACX,QAAIS,KAAK,CAACD,WAAN,IAAqB,SAAzB,EAAoC;AACjC,UAAMI,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAnB;;AACA,UAAIJ,UAAJ,EAAgB;AACZK,QAAAA,OAAO,CAACC,IAAR,CAAa,uBAAb;AACAP,QAAAA,IAAI,CAACQ,OAAL,GAAeP,UAAU,CAACL,SAA1B;AACAG,QAAAA,QAAQ,CAACE,UAAD,CAAR;AACH;AACJ,KAPA,MAOM,IAAID,IAAI,CAACQ,OAAL,KAAiBV,KAAK,CAACF,SAA3B,EAAsC;AACzCU,MAAAA,OAAO,CAACC,IAAR,CAAa,uBAAb;AACAH,MAAAA,YAAY,CAACK,OAAb,CAAqB,UAArB,EAAiCP,IAAI,CAACQ,SAAL,CAAeZ,KAAf,CAAjC;AACH,KAXW,CAaZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACH,GA1BQ,EA0BN,CAACA,KAAD,CA1BM,CAAT;AA4BA,SACI,MAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE,CAACA,KAAD,EAAQC,QAAR,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,KAAK,CAACiB,QADX,CADJ;AAKH,CA7CM","sourcesContent":["import React, {\n    useState,\n    useEffect,\n    useRef,\n    createContext\n} from 'react'\n\nexport const ProxyContext = createContext()\n\nexport const ProxyContextProvider = (props) => {\n\n    const initialState = {\n        ipAddress: 'localhost',\n        countryName: 'Nowhere',\n    }\n\n    // Declare shareable proxy state\n    const [proxy, setProxy] = useState(initialState)\n    const prev = useRef()\n\n    // Read and Write Proxy State to Local Storage\n    useEffect(() => {\n         if (proxy.countryName == 'Nowhere') {\n            const localState = JSON.parse(localStorage.getItem('ip2proxy'))\n            if (localState) {\n                console.info('reading local storage')\n                prev.current = localState.ipAddress\n                setProxy(localState)\n            }\n        } else if (prev.current !== proxy.ipAddress) {\n            console.info('writing local storage')\n            localStorage.setItem('ip2proxy', JSON.stringify(proxy))\n        }\n\n        // if (prev.current === undefined && proxy.countryName == 'israel') {\n        //     const localState = JSON.parse(localStorage.getItem('ip2proxy'))\n        //     if (localState) {\n        //         console.info('reading local storage')\n        //         prev.current = localState.ipAddress\n        //         setProxy(localState)\n        //     } else {\n        //       localStorage.setItem('ip2proxy', JSON.stringify(proxy))\n        //     }\n        // } else if (prev.current !== proxy.ipAddress) {\n        //     console.info('writing local storage')\n        //     localStorage.setItem('ip2proxy', JSON.stringify(proxy))\n        // }\n    }, [proxy])\n\n    return(\n        <ProxyContext.Provider value={[proxy, setProxy]}>\n            {props.children}\n        </ProxyContext.Provider>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}