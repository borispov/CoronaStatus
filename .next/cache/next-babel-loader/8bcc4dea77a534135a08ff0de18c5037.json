{"ast":null,"code":"var firstWhole = function firstWhole(arr) {\n  var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  if (arr[n] > 0) return n;\n  if (arr[n] == undefined) return 0;\n  n++;\n  return firstWhole(arr, n);\n};\n\nvar parseLabel = function parseLabel(label) {\n  var d = new Date(label);\n  return d.getDate() + '.' + ('0' + (d.getMonth() + 1)).toString();\n};\n\nvar sortForChart = function sortForChart(obj, theme) {\n  var zeroNull = function zeroNull(c) {\n    return c === null ? 0 : c;\n  };\n\n  var sortedObj = obj.sort(function (a, b) {\n    return new Date(a.date) - new Date(b.date);\n  });\n  var initCasesArray = sortedObj.map(function (o) {\n    return o.confirmed;\n  });\n  var firstNumIndex = firstWhole(initCasesArray);\n  var fObj = sortedObj.slice(firstNumIndex);\n  var cases = fObj.map(function (o) {\n    return o.confirmed;\n  });\n  var labels = fObj.map(function (o) {\n    return parseLabel(o.date);\n  });\n  var deaths = fObj.map(function (o) {\n    return zeroNull(o.deaths);\n  });\n  var label = obj[0].location;\n  var datasets = [{\n    label: 'deaths',\n    data: deaths,\n    backgroundColor: 'rgba(29,82,209,1) 100%)',\n    borderColor: 'rgba(21, 21, 21, 1)',\n    strokeColor: \"rgba(222, 222, 34, 1)\",\n    pointRadius: 1,\n    borderWidth: 4,\n    datalabels: {\n      display: function display(ctx) {\n        return ctx.dataIndex % 2;\n      },\n      align: 'end',\n      anchor: 'end'\n    }\n  }, {\n    label: 'cases',\n    data: cases,\n    backgroundColor: '#2A4561',\n    borderColor: theme && theme.analogous || '#6200ee',\n    strokeColor: \"#ADFF2F\",\n    pointBackgroundColor: '#fff',\n    pointHoverBackgroundColor: 'rgba(45, 20, 19, 0)',\n    borderWidth: 5,\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderJoinStyle: 'miter',\n    pointRadius: 1,\n    pointHitRadius: 10\n  }];\n  return {\n    datasets: datasets,\n    labels: labels,\n    label: label\n  };\n};\n\nexport default sortForChart;","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/utils/sortExternalApi.js"],"names":["firstWhole","arr","n","undefined","parseLabel","label","d","Date","getDate","getMonth","toString","sortForChart","obj","theme","zeroNull","c","sortedObj","sort","a","b","date","initCasesArray","map","o","confirmed","firstNumIndex","fObj","slice","cases","labels","deaths","location","datasets","data","backgroundColor","borderColor","strokeColor","pointRadius","borderWidth","datalabels","display","ctx","dataIndex","align","anchor","analogous","pointBackgroundColor","pointHoverBackgroundColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointHitRadius"],"mappings":"AAAA,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAACC,GAAD,EAAgB;AAAA,MAAVC,CAAU,uEAAN,CAAM;AACjC,MAAID,GAAG,CAACC,CAAD,CAAH,GAAS,CAAb,EAAgB,OAAOA,CAAP;AAChB,MAAID,GAAG,CAACC,CAAD,CAAH,IAAUC,SAAd,EAAyB,OAAO,CAAP;AACzBD,EAAAA,CAAC;AACD,SAAOF,UAAU,CAACC,GAAD,EAAMC,CAAN,CAAjB;AACD,CALD;;AAOA,IAAME,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK,EAAI;AAC1B,MAAIC,CAAC,GAAG,IAAIC,IAAJ,CAASF,KAAT,CAAR;AACA,SAAOC,CAAC,CAACE,OAAF,KAAc,GAAd,GAAoB,CAAC,OAAOF,CAAC,CAACG,QAAF,KAAa,CAApB,CAAD,EAAyBC,QAAzB,EAA3B;AACD,CAHD;;AAKA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,GAAD,EAAMC,KAAN,EAAgB;AAEnC,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,CAAC;AAAA,WAAIA,CAAC,KAAK,IAAN,GAAa,CAAb,GAAiBA,CAArB;AAAA,GAAlB;;AACA,MAAMC,SAAS,GAAGJ,GAAG,CAACK,IAAJ,CAAS,UAACC,CAAD,EAAGC,CAAH;AAAA,WAAS,IAAIZ,IAAJ,CAASW,CAAC,CAACE,IAAX,IAAmB,IAAIb,IAAJ,CAASY,CAAC,CAACC,IAAX,CAA5B;AAAA,GAAT,CAAlB;AAEA,MAAMC,cAAc,GAAGL,SAAS,CAACM,GAAV,CAAc,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,SAAN;AAAA,GAAf,CAAvB;AACA,MAAMC,aAAa,GAAGzB,UAAU,CAACqB,cAAD,CAAhC;AACA,MAAMK,IAAI,GAAGV,SAAS,CAACW,KAAV,CAAgBF,aAAhB,CAAb;AACA,MAAMG,KAAK,GAAGF,IAAI,CAACJ,GAAL,CAAS,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,SAAN;AAAA,GAAV,CAAd;AACA,MAAMK,MAAM,GAAGH,IAAI,CAACJ,GAAL,CAAS,UAAAC,CAAC;AAAA,WAAInB,UAAU,CAACmB,CAAC,CAACH,IAAH,CAAd;AAAA,GAAV,CAAf;AACA,MAAMU,MAAM,GAAGJ,IAAI,CAACJ,GAAL,CAAS,UAAAC,CAAC;AAAA,WAAIT,QAAQ,CAACS,CAAC,CAACO,MAAH,CAAZ;AAAA,GAAV,CAAf;AACA,MAAMzB,KAAK,GAAGO,GAAG,CAAC,CAAD,CAAH,CAAOmB,QAArB;AAEA,MAAMC,QAAQ,GAAG,CACf;AACE3B,IAAAA,KAAK,EAAE,QADT;AAEE4B,IAAAA,IAAI,EAAEH,MAFR;AAGEI,IAAAA,eAAe,EAAE,yBAHnB;AAIEC,IAAAA,WAAW,EAAE,qBAJf;AAKEC,IAAAA,WAAW,EAAE,uBALf;AAMEC,IAAAA,WAAW,EAAE,CANf;AAOEC,IAAAA,WAAW,EAAE,CAPf;AAQEC,IAAAA,UAAU,EAAE;AACVC,MAAAA,OAAO,EAAE,iBAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,SAAJ,GAAgB,CAApB;AAAA,OADF;AAEVC,MAAAA,KAAK,EAAE,KAFG;AAGVC,MAAAA,MAAM,EAAE;AAHE;AARd,GADe,EAef;AACEvC,IAAAA,KAAK,EAAE,OADT;AAEE4B,IAAAA,IAAI,EAAEL,KAFR;AAGEM,IAAAA,eAAe,EAAE,SAHnB;AAIEC,IAAAA,WAAW,EAAEtB,KAAK,IAAIA,KAAK,CAACgC,SAAf,IAA4B,SAJ3C;AAKET,IAAAA,WAAW,EAAE,SALf;AAOEU,IAAAA,oBAAoB,EAAE,MAPxB;AAQEC,IAAAA,yBAAyB,EAAE,qBAR7B;AASET,IAAAA,WAAW,EAAE,CATf;AAUEU,IAAAA,cAAc,EAAE,MAVlB;AAWEC,IAAAA,UAAU,EAAE,EAXd;AAYEC,IAAAA,gBAAgB,EAAE,GAZpB;AAaEC,IAAAA,eAAe,EAAE,OAbnB;AAcEd,IAAAA,WAAW,EAAE,CAdf;AAeEe,IAAAA,cAAc,EAAE;AAflB,GAfe,CAAjB;AAmCA,SAAO;AACLpB,IAAAA,QAAQ,EAARA,QADK;AAELH,IAAAA,MAAM,EAANA,MAFK;AAGLxB,IAAAA,KAAK,EAALA;AAHK,GAAP;AAKD,CArDD;;AAuDA,eAAeM,YAAf","sourcesContent":["const firstWhole = (arr, n = 0) => {\n  if (arr[n] > 0) return n\n  if (arr[n] == undefined) return 0\n  n++\n  return firstWhole(arr, n)\n}\n\nconst parseLabel = label => {\n  let d = new Date(label)\n  return d.getDate() + '.' + ('0' + (d.getMonth()+1)).toString()\n}\n\nconst sortForChart = (obj, theme) => {\n\n  const zeroNull = c => c === null ? 0 : c\n  const sortedObj = obj.sort((a,b) => new Date(a.date) - new Date(b.date))\n\n  const initCasesArray = sortedObj.map(o => o.confirmed)\n  const firstNumIndex = firstWhole(initCasesArray)\n  const fObj = sortedObj.slice(firstNumIndex)\n  const cases = fObj.map(o => o.confirmed)\n  const labels = fObj.map(o => parseLabel(o.date))\n  const deaths = fObj.map(o => zeroNull(o.deaths))\n  const label = obj[0].location\n\n  const datasets = [\n    {\n      label: 'deaths',\n      data: deaths,\n      backgroundColor: 'rgba(29,82,209,1) 100%)',\n      borderColor: 'rgba(21, 21, 21, 1)',\n      strokeColor: \"rgba(222, 222, 34, 1)\",\n      pointRadius: 1,\n      borderWidth: 4,\n      datalabels: {\n        display: ctx => ctx.dataIndex % 2,\n        align: 'end',\n        anchor: 'end'\n      }\n    },\n    {\n      label: 'cases',\n      data: cases,\n      backgroundColor: '#2A4561',\n      borderColor: theme && theme.analogous || '#6200ee',\n      strokeColor: \"#ADFF2F\",\n\n      pointBackgroundColor: '#fff',\n      pointHoverBackgroundColor: 'rgba(45, 20, 19, 0)',\n      borderWidth: 5,\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointRadius: 1,\n      pointHitRadius: 10,\n\n    }\n  ]\n\n  return {\n    datasets,\n    labels,\n    label\n  }\n}\n\nexport default sortForChart\n"]},"metadata":{},"sourceType":"module"}