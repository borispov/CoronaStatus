{"ast":null,"code":"var _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/components/CaseChart.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Button from './Button';\nimport axios from 'axios';\nimport sortForChart from '../utils/sortForChart';\nimport Chart from './Chart';\nimport Container from './Container';\nconst baseURL = `https://nCorona.live/api/v1/alltime/`;\n\nconst worldTimeData = async () => {\n  const data = await axios.get(baseURL);\n  const dataRes = await sortForChart(data.data);\n  return dataRes;\n};\n\nclass CaseChart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"present\", val => this.setState({\n      dataToPresent: val\n    }));\n\n    this.state = {\n      dataToPresent: 'worldCases',\n      worldData: [],\n      countryData: [],\n      worldLabels: [],\n      countryLabels: [],\n      worldCases: [],\n      deathCases: [],\n      newCases: [],\n      countryCases: [],\n      showWorld: true,\n      loading: false\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({\n      loading: true\n    });\n\n    try {\n      const timeStats = await worldTimeData();\n      const worldCases = timeStats && timeStats.datasets.filter(a => a.label === 'cases');\n      const deathCases = timeStats && timeStats.datasets.filter(a => a.label === 'deaths');\n      const newCases = timeStats && timeStats.datasets.filter(a => a.label === 'new cases');\n      const countryCases = countryStats && countryStats.datasets.filter(a => a.label === 'cases');\n      const countryLabels = countryStats && countryStats.labels;\n      const worldLabels = timeStats && timeStats.labels;\n      const worldDeaths = timeStats && timeStats.datasets.filter(a => a.label === 'deaths');\n      this.setState({\n        worldData: timeStats,\n        countryData: countryStats,\n        worldCases,\n        deathCases,\n        newCases,\n        countryCases,\n        worldLabels,\n        countryLabels,\n        loading: false\n      });\n    } catch (err) {\n      this.setState({\n        loading: false,\n        error: err\n      });\n    }\n  }\n\n  render() {\n    if (this.state.loading) {\n      return __jsx(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Loading Data . . .\"));\n    }\n\n    if (this.state.error) {\n      return __jsx(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, this.state.error));\n    }\n\n    return __jsx(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      style: {\n        margin: '82px 0 0 0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.props.isHeb && 'שיעור התפשטות הנגיף בעולם, מקרי מוות ומסרים מקרים חדשים ליום' || 'Growth Rate of the virus in the world, including deaths and new cases'), this.state.worldData && __jsx(Chart, {\n      type: \"line\",\n      labels: this.state.worldLabels,\n      data: this.state[this.state.dataToPresent],\n      label: \"Global Statistics\",\n      theme: this.props.theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }) || __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \" Loading Charts ... \"), __jsx(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-around',\n        padding: '34px 32px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, __jsx(Button, {\n      onClick: () => this.present('worldCases'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, this.props.isHeb && 'נדבקים' || 'Cases'), __jsx(Button, {\n      onClick: () => this.present('deathCases'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, this.props.isHeb && 'מקרי מוות' || 'Deaths'), __jsx(Button, {\n      onClick: () => this.present('newCases'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, this.props.isHeb && 'מקרים חדשים' || 'New cases')));\n  }\n\n}\n\nexport default CaseChart;","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/components/CaseChart.js"],"names":["React","Button","axios","sortForChart","Chart","Container","baseURL","worldTimeData","data","get","dataRes","CaseChart","Component","constructor","props","val","setState","dataToPresent","state","worldData","countryData","worldLabels","countryLabels","worldCases","deathCases","newCases","countryCases","showWorld","loading","componentDidMount","timeStats","datasets","filter","a","label","countryStats","labels","worldDeaths","err","error","render","margin","isHeb","theme","display","justifyContent","padding","present"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Button from './Button'\nimport axios from 'axios'\nimport sortForChart from '../utils/sortForChart'\nimport Chart from './Chart'\nimport Container from './Container'\n\nconst baseURL = `https://nCorona.live/api/v1/alltime/`\n\nconst worldTimeData = async () => {\n  const data = await axios.get(baseURL)\n  const dataRes = await sortForChart(data.data)\n  return dataRes\n}\nclass CaseChart extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      dataToPresent: 'worldCases',\n      worldData: [],\n      countryData: [],\n      worldLabels: [],\n      countryLabels: [],\n      worldCases: [],\n      deathCases: [],\n      newCases: [],\n      countryCases: [],\n      showWorld: true,\n      loading: false\n    }\n  }\n\n  present = val => this.setState({dataToPresent: val})\n\n  async componentDidMount() {\n    this.setState({ loading: true })\n\n    try {\n      const timeStats = await worldTimeData()\n\n      const worldCases = timeStats && timeStats.datasets.filter(a => a.label === 'cases')\n      const deathCases = timeStats && timeStats.datasets.filter(a => a.label === 'deaths')\n      const newCases = timeStats && timeStats.datasets.filter(a => a.label === 'new cases')\n\n      const countryCases = countryStats && countryStats.datasets.filter(a => a.label === 'cases')\n      const countryLabels = countryStats && countryStats.labels\n      const worldLabels = timeStats && timeStats.labels\n      const worldDeaths = timeStats && timeStats.datasets.filter(a => a.label === 'deaths')\n\n\n      this.setState({\n        worldData: timeStats,\n        countryData: countryStats,\n        worldCases,\n        deathCases,\n        newCases,\n        countryCases,\n        worldLabels,\n        countryLabels,\n        loading: false\n      })\n    } catch(err) {\n      this.setState({ loading: false, error: err })\n    }\n\n\n  }\n\n  render() {\n\n    if (this.state.loading) {\n      return <Container><h1>Loading Data . . .</h1></Container>\n    }\n    if (this.state.error) {\n      return <Container><h1>{this.state.error}</h1></Container>\n    }\n\n    return (\n      <Container >\n        <p style={{margin: '82px 0 0 0'}}>\n          {this.props.isHeb &&\n              'שיעור התפשטות הנגיף בעולם, מקרי מוות ומסרים מקרים חדשים ליום'\n                || 'Growth Rate of the virus in the world, including deaths and new cases'}\n        </p>\n        {\n          this.state.worldData &&\n            <Chart \n              type='line'\n              labels={this.state.worldLabels}\n              data={this.state[this.state.dataToPresent]}\n              label='Global Statistics'\n              theme={this.props.theme}\n            /> || <div> Loading Charts ... </div>\n        }\n        <div style={{display: 'flex', justifyContent: 'space-around', padding: '34px 32px'}}>\n          <Button onClick={() => this.present('worldCases')}>{this.props.isHeb && 'נדבקים' || 'Cases'}</Button>\n          <Button onClick={() => this.present('deathCases')}>{this.props.isHeb && 'מקרי מוות' || 'Deaths'}</Button>\n          <Button onClick={() => this.present('newCases')}>{this.props.isHeb && 'מקרים חדשים' || 'New cases'}</Button>\n        </div>\n      </Container>\n    )\n  }\n\n}\n\nexport default CaseChart\n"]},"metadata":{},"sourceType":"module"}