{"ast":null,"code":"var _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/context/proxy-context.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useRef, createContext } from 'react';\nexport const ProxyContext = createContext();\nexport const ProxyContextProvider = props => {\n  const initialState = {\n    ipAddress: '0.0.0.0',\n    countryName: 'israel'\n  }; // Declare shareable proxy state\n\n  const {\n    0: proxy,\n    1: setProxy\n  } = useState(initialState);\n  const prev = useRef(); // Read and Write Proxy State to Local Storage\n\n  useEffect(() => {\n    if (proxy.countryName == 'israel') {\n      const localState = JSON.parse(localStorage.getItem('ip2proxy'));\n\n      if (localState) {\n        console.info('reading local storage');\n        prev.current = localState.ipAddress;\n        setProxy(localState);\n      }\n    } else if (prev.current !== proxy.ipAddress) {\n      console.info('writing local storage');\n      localStorage.setItem('ip2proxy', JSON.stringify(proxy));\n    }\n  }, [proxy]);\n  return __jsx(ProxyContext.Provider, {\n    value: [ipLocation, setProxy],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, props.children);\n};","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/context/proxy-context.js"],"names":["React","useState","useEffect","useRef","createContext","ProxyContext","ProxyContextProvider","props","initialState","ipAddress","countryName","proxy","setProxy","prev","localState","JSON","parse","localStorage","getItem","console","info","current","setItem","stringify","ipLocation","children"],"mappings":";;AAAA,OAAOA,KAAP,IACIC,QADJ,EAEIC,SAFJ,EAGIC,MAHJ,EAIIC,aAJJ,QAKO,OALP;AAOA,OAAO,MAAMC,YAAY,GAAGD,aAAa,EAAlC;AAEP,OAAO,MAAME,oBAAoB,GAAIC,KAAD,IAAW;AAC3C,QAAMC,YAAY,GAAG;AACjBC,IAAAA,SAAS,EAAE,SADM;AAEjBC,IAAAA,WAAW,EAAE;AAFI,GAArB,CAD2C,CAM3C;;AACA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBX,QAAQ,CAACO,YAAD,CAAlC;AACA,QAAMK,IAAI,GAAGV,MAAM,EAAnB,CAR2C,CAU3C;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIS,KAAK,CAACD,WAAN,IAAqB,QAAzB,EAAmC;AAC/B,YAAMI,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAnB;;AACA,UAAIJ,UAAJ,EAAgB;AACZK,QAAAA,OAAO,CAACC,IAAR,CAAa,uBAAb;AACAP,QAAAA,IAAI,CAACQ,OAAL,GAAeP,UAAU,CAACL,SAA1B;AACAG,QAAAA,QAAQ,CAACE,UAAD,CAAR;AACH;AACJ,KAPD,MAOO,IAAID,IAAI,CAACQ,OAAL,KAAiBV,KAAK,CAACF,SAA3B,EAAsC;AACzCU,MAAAA,OAAO,CAACC,IAAR,CAAa,uBAAb;AACAH,MAAAA,YAAY,CAACK,OAAb,CAAqB,UAArB,EAAiCP,IAAI,CAACQ,SAAL,CAAeZ,KAAf,CAAjC;AACH;AACJ,GAZQ,EAYN,CAACA,KAAD,CAZM,CAAT;AAcA,SACI,MAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE,CAACa,UAAD,EAAaZ,QAAb,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,KAAK,CAACkB,QADX,CADJ;AAKH,CA9BM","sourcesContent":["import React, {\n    useState,\n    useEffect,\n    useRef,\n    createContext\n} from 'react'\n\nexport const ProxyContext = createContext()\n\nexport const ProxyContextProvider = (props) => {\n    const initialState = {\n        ipAddress: '0.0.0.0',\n        countryName: 'israel',\n    }\n\n    // Declare shareable proxy state\n    const [proxy, setProxy] = useState(initialState)\n    const prev = useRef()\n\n    // Read and Write Proxy State to Local Storage\n    useEffect(() => {\n        if (proxy.countryName == 'israel') {\n            const localState = JSON.parse(localStorage.getItem('ip2proxy'))\n            if (localState) {\n                console.info('reading local storage')\n                prev.current = localState.ipAddress\n                setProxy(localState)\n            }\n        } else if (prev.current !== proxy.ipAddress) {\n            console.info('writing local storage')\n            localStorage.setItem('ip2proxy', JSON.stringify(proxy))\n        }\n    }, [proxy])\n\n    return(\n        <ProxyContext.Provider value={[ipLocation, setProxy]}>\n            {props.children}\n        </ProxyContext.Provider>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}