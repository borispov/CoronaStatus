{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/components/CaseChart.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Button from './Button';\nimport axios from 'axios';\nimport useTime from '../utils/useTime';\nimport sortForChart from '../utils/sortForChart';\nimport Chart from './Chart';\nimport Container from './Container';\nvar baseURL = \"http://covid19.borisky.me:3003/api/v1/alltime/\";\n\nvar countryTimeData = function countryTimeData(cn) {\n  var loc, data, dataRes;\n  return _regeneratorRuntime.async(function countryTimeData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log('fetchinGGGGG');\n          _context.t0 = cn;\n\n          if (_context.t0) {\n            _context.next = 6;\n            break;\n          }\n\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(currentCountry());\n\n        case 5:\n          _context.t0 = _context.sent;\n\n        case 6:\n          loc = _context.t0;\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(axios.get(baseURL + loc));\n\n        case 9:\n          data = _context.sent;\n          _context.next = 12;\n          return _regeneratorRuntime.awrap(sortForChart(data.data));\n\n        case 12:\n          dataRes = _context.sent;\n          return _context.abrupt(\"return\", dataRes);\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar worldTimeData = function worldTimeData() {\n  var data, dataRes;\n  return _regeneratorRuntime.async(function worldTimeData$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(baseURL));\n\n        case 2:\n          data = _context2.sent;\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(sortForChart(data.data));\n\n        case 5:\n          dataRes = _context2.sent;\n          return _context2.abrupt(\"return\", dataRes);\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nfunction currentCountry() {\n  return _regeneratorRuntime.async(function currentCountry$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(axios.get('https://extreme-ip-lookup.com/json/').then(function (res) {\n            return res.data.country;\n          })[\"catch\"](function (e) {\n            return 'israel';\n          }));\n\n        case 2:\n          return _context3.abrupt(\"return\", _context3.sent);\n\n        case 3:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar CaseChart = /*#__PURE__*/function (_React$Component) {\n  _inherits(CaseChart, _React$Component);\n\n  function CaseChart(props) {\n    var _this;\n\n    _classCallCheck(this, CaseChart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CaseChart).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"setShowWorld\", function () {\n      var showWorld = !_this.state.showWorld;\n\n      _this.setState(function (prevState) {\n        return _objectSpread({}, prevState, {\n          showWorld: showWorld\n        });\n      });\n    });\n\n    _this.state = {\n      // country: this.props.country,\n      worldData: [],\n      countryData: [],\n      worldLabels: [],\n      countryLabels: [],\n      worldCases: [],\n      countryCases: [],\n      showWorld: true,\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(CaseChart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var timeStats, countryStats, worldCases, countryCases, countryLabels, worldLabels;\n      return _regeneratorRuntime.async(function componentDidMount$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              this.setState({\n                loading: true\n              });\n              _context4.prev = 1;\n              _context4.next = 4;\n              return _regeneratorRuntime.awrap(worldTimeData());\n\n            case 4:\n              timeStats = _context4.sent;\n              _context4.next = 7;\n              return _regeneratorRuntime.awrap(countryTimeData(this.props.country));\n\n            case 7:\n              countryStats = _context4.sent;\n              worldCases = timeStats && timeStats.datasets.filter(function (a) {\n                return a.label === 'cases';\n              });\n              countryCases = countryStats && countryStats.datasets.filter(function (a) {\n                return a.label === 'cases';\n              });\n              countryLabels = countryStats && countryStats.labels;\n              worldLabels = timeStats && timeStats.labels;\n              this.setState({\n                worldData: timeStats,\n                countryData: countryStats,\n                worldCases: worldCases,\n                countryCases: countryCases,\n                worldLabels: worldLabels,\n                countryLabels: countryLabels,\n                loading: false\n              });\n              _context4.next = 18;\n              break;\n\n            case 15:\n              _context4.prev = 15;\n              _context4.t0 = _context4[\"catch\"](1);\n              this.setState({\n                loading: false,\n                error: _context4.t0\n              });\n\n            case 18:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, [[1, 15]], Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.loading) {\n        return __jsx(Container, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, __jsx(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, \"Loading Data . . .\"));\n      }\n\n      if (this.state.error) {\n        return __jsx(Container, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, __jsx(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, this.state.error));\n      } // console.log(this.state.worldCases);\n\n\n      return __jsx(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          padding: '34px 32px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, __jsx(Button, {\n        onClick: this.setShowWorld,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"World\"), __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \" | \"), __jsx(Button, {\n        onClick: this.setShowWorld,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, this.props.country || 'Israel')), this.state.worldData && __jsx(Chart, {\n        type: \"line\",\n        labels: this.state.showWorld ? this.state.worldLabels : this.state.countryLabels,\n        data: this.state.showWorld ? this.state.worldCases : this.state.countryCases,\n        w: this.state.showWorld,\n        dataWorld: this.state.worldCases,\n        dataCountry: this.state.countryCases,\n        label: \"Infection Growth - Country/World\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }) || __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \" Loading Charts ... \"), console.log(this.state.worldCases));\n    }\n  }]);\n\n  return CaseChart;\n}(React.Component);\n\nexport default CaseChart;","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/components/CaseChart.js"],"names":["React","Button","axios","useTime","sortForChart","Chart","Container","baseURL","countryTimeData","cn","console","log","currentCountry","loc","get","data","dataRes","worldTimeData","then","res","country","e","CaseChart","props","showWorld","state","setState","prevState","worldData","countryData","worldLabels","countryLabels","worldCases","countryCases","loading","timeStats","countryStats","datasets","filter","a","label","labels","error","display","justifyContent","padding","setShowWorld","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Button from './Button'\nimport axios from 'axios'\nimport useTime from '../utils/useTime'\nimport sortForChart from '../utils/sortForChart'\nimport Chart from './Chart'\nimport Container from './Container'\n\nconst baseURL = `http://covid19.borisky.me:3003/api/v1/alltime/`\n\nconst countryTimeData = async (cn) => {\n  console.log('fetchinGGGGG');\n  const loc = cn || await currentCountry()\n  const data = await axios.get(baseURL+loc)\n  const dataRes = await sortForChart(data.data)\n  return dataRes\n}\n\nconst worldTimeData = async () => {\n  const data = await axios.get(baseURL)\n  const dataRes = await sortForChart(data.data)\n  return dataRes\n}\n\nasync function currentCountry(){\n  return await axios\n    .get('https://extreme-ip-lookup.com/json/')\n    .then(res => res.data.country)\n    .catch(e => 'israel')\n}\n\n\nclass CaseChart extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      // country: this.props.country,\n      worldData: [],\n      countryData: [],\n      worldLabels: [],\n      countryLabels: [],\n      worldCases: [],\n      countryCases: [],\n      showWorld: true,\n      loading: false\n    }\n  }\n\n  setShowWorld = () => {\n    const showWorld = !this.state.showWorld\n    this.setState(prevState => ({ ...prevState, showWorld: showWorld }))\n  }\n\n  async componentDidMount() {\n    this.setState({ loading: true })\n\n    try {\n      const timeStats = await worldTimeData()\n      const countryStats = await countryTimeData(this.props.country)\n      const worldCases = timeStats && timeStats.datasets.filter(a => a.label === 'cases')\n      const countryCases = countryStats && countryStats.datasets.filter(a => a.label === 'cases')\n      const countryLabels = countryStats && countryStats.labels\n      const worldLabels = timeStats && timeStats.labels\n      this.setState({\n        worldData: timeStats,\n        countryData: countryStats,\n        worldCases,\n        countryCases,\n        worldLabels,\n        countryLabels,\n        loading: false\n      })\n    } catch(err) {\n      this.setState({ loading: false, error: err })\n    }\n\n\n  }\n\n  render() {\n\n    if (this.state.loading) {\n      return <Container><h1>Loading Data . . .</h1></Container>\n    }\n    if (this.state.error) {\n      return <Container><h1>{this.state.error}</h1></Container>\n    }\n\n    // console.log(this.state.worldCases);\n    return (\n      <Container>\n        <div style={{display: 'flex', justifyContent: 'center', padding: '34px 32px'}}>\n          <Button onClick={this.setShowWorld}>World</Button><span> | </span>\n          <Button onClick={this.setShowWorld}>{this.props.country || 'Israel'}</Button>\n        </div>\n        {\n          this.state.worldData &&\n            <Chart \n              type='line'\n              labels={this.state.showWorld ? this.state.worldLabels : this.state.countryLabels}\n              data={this.state.showWorld ? this.state.worldCases : this.state.countryCases}\n              w={this.state.showWorld}\n              dataWorld={this.state.worldCases}\n              dataCountry={this.state.countryCases}\n              label='Infection Growth - Country/World'\n            /> || <div> Loading Charts ... </div>\n        }\n        {\n          console.log(this.state.worldCases)\n        }\n      </Container>\n    )\n  }\n\n}\n\nexport default CaseChart\n"]},"metadata":{},"sourceType":"module"}