{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/components/CaseChart.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport axios from 'axios';\nimport useTime from '../utils/useTime';\nimport sortForChart from '../utils/sortForChart';\nimport Chart from './Chart';\nimport Container from './Container';\nvar baseURL = \"http://covid19.borisky.me:3003/api/v1/alltime/\";\n\nvar countryTimeData = function countryTimeData(cn) {\n  var loc, data, dataRes;\n  return _regeneratorRuntime.async(function countryTimeData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log('fetchinGGGGG');\n          _context.t0 = cn;\n\n          if (_context.t0) {\n            _context.next = 6;\n            break;\n          }\n\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(currentCountry());\n\n        case 5:\n          _context.t0 = _context.sent;\n\n        case 6:\n          loc = _context.t0;\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(axios.get(baseURL + loc));\n\n        case 9:\n          data = _context.sent;\n          _context.next = 12;\n          return _regeneratorRuntime.awrap(sortForChart(data.data));\n\n        case 12:\n          dataRes = _context.sent;\n          return _context.abrupt(\"return\", dataRes);\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar worldTimeData = function worldTimeData() {\n  var data, dataRes;\n  return _regeneratorRuntime.async(function worldTimeData$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(baseURL));\n\n        case 2:\n          data = _context2.sent;\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(sortForChart(data.data));\n\n        case 5:\n          dataRes = _context2.sent;\n          return _context2.abrupt(\"return\", dataRes);\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nfunction currentCountry() {\n  return _regeneratorRuntime.async(function currentCountry$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(axios.get('https://extreme-ip-lookup.com/json/').then(function (res) {\n            return res.data.country;\n          })[\"catch\"](function (e) {\n            return 'israel';\n          }));\n\n        case 2:\n          return _context3.abrupt(\"return\", _context3.sent);\n\n        case 3:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar CaseChart = /*#__PURE__*/function (_React$Component) {\n  _inherits(CaseChart, _React$Component);\n\n  function CaseChart(props) {\n    var _this;\n\n    _classCallCheck(this, CaseChart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CaseChart).call(this, props));\n    _this.state = {\n      // country: this.props.country,\n      worldData: [],\n      countryData: [],\n      worldLabels: [],\n      countryLabels: [],\n      worldCases: [],\n      countryCases: [],\n      showWorld: true\n    };\n    return _this;\n  }\n\n  _createClass(CaseChart, [{\n    key: \"setShowWorld\",\n    value: function setShowWorld() {\n      var showWorld = !this.state.showWorld;\n      this.setState({\n        showWorld: showWorld\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var timeStats, countryStats, worldCases, countryCases;\n      return _regeneratorRuntime.async(function componentDidMount$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(worldTimeData());\n\n            case 2:\n              timeStats = _context4.sent;\n              _context4.next = 5;\n              return _regeneratorRuntime.awrap(countryTimeData(this.props.country));\n\n            case 5:\n              countryStats = _context4.sent;\n              worldCases = timeStats && timeStats.datasets.filter(function (a) {\n                return a.label === 'cases';\n              });\n              countryCases = countryStats && countryStats.datasets.filter(function (a) {\n                return a.label === 'cases';\n              });\n              this.setState({\n                worldData: timeStats,\n                countryData: countryStats,\n                worldCases: worldCases,\n                countryCases: countryCases\n              });\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.worldCases);\n      return __jsx(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, this.state.worldData && __jsx(Chart, {\n        type: \"line\",\n        labels: this.state.showWorld ? this.state.worldLabels : this.state.countryLabels,\n        data: this.state.showWorld ? this.state.worldCases : this.state.countryCases,\n        label: \"Infection Growth - Country/World\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }) || __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \" Loading Charts ... \"));\n    }\n  }]);\n\n  return CaseChart;\n}(React.Component);\n\nexport default CaseChart;","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/components/CaseChart.js"],"names":["React","axios","useTime","sortForChart","Chart","Container","baseURL","countryTimeData","cn","console","log","currentCountry","loc","get","data","dataRes","worldTimeData","then","res","country","e","CaseChart","props","state","worldData","countryData","worldLabels","countryLabels","worldCases","countryCases","showWorld","setState","timeStats","countryStats","datasets","filter","a","label","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport useTime from '../utils/useTime'\nimport sortForChart from '../utils/sortForChart'\nimport Chart from './Chart'\nimport Container from './Container'\n\nconst baseURL = `http://covid19.borisky.me:3003/api/v1/alltime/`\n\nconst countryTimeData = async (cn) => {\n  console.log('fetchinGGGGG');\n  const loc = cn || await currentCountry()\n  const data = await axios.get(baseURL+loc)\n  const dataRes = await sortForChart(data.data)\n  return dataRes\n}\n\nconst worldTimeData = async () => {\n  const data = await axios.get(baseURL)\n  const dataRes = await sortForChart(data.data)\n  return dataRes\n}\n\nasync function currentCountry(){\n  return await axios\n    .get('https://extreme-ip-lookup.com/json/')\n    .then(res => res.data.country)\n    .catch(e => 'israel')\n}\n\n\nclass CaseChart extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      // country: this.props.country,\n      worldData: [],\n      countryData: [],\n      worldLabels: [],\n      countryLabels: [],\n      worldCases: [],\n      countryCases: [],\n      showWorld: true\n    }\n  }\n\n  setShowWorld() {\n    const showWorld = !this.state.showWorld\n    this.setState({ showWorld })\n  }\n\n  async componentDidMount() {\n    const timeStats = await worldTimeData()\n    const countryStats = await countryTimeData(this.props.country)\n\n\n    const worldCases = timeStats && timeStats.datasets.filter(a => a.label === 'cases')\n    const countryCases = countryStats && countryStats.datasets.filter(a => a.label === 'cases')\n\n    this.setState({\n      worldData: timeStats,\n      countryData: countryStats,\n      worldCases,\n      countryCases\n    })\n\n  }\n\n  render() {\n\n    console.log(this.state.worldCases);\n    return (\n      <Container>\n        {\n          this.state.worldData &&\n            <Chart \n              type='line'\n              labels={this.state.showWorld ? this.state.worldLabels : this.state.countryLabels}\n              data={this.state.showWorld ? this.state.worldCases : this.state.countryCases}\n              label='Infection Growth - Country/World'\n            /> || <div> Loading Charts ... </div>\n        }\n      </Container>\n    )\n  }\n\n}\n\nexport default CaseChart\n"]},"metadata":{},"sourceType":"module"}