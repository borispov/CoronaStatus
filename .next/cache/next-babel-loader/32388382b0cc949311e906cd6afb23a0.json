{"ast":null,"code":"var formatNumber = function formatNumber(x) {\n  return x.toString().split('').reverse().map(function (x, i) {\n    return i % 3 === 0 ? x + ',' : x;\n  }).reverse().join('').slice(0, -1);\n};\n\nvar isPercentDown = function isPercentDown(x) {\n  return x < 0;\n};\n\nvar showPercent = function showPercent(x) {\n  return x !== 0;\n};\n\nvar calcDiff = function calcDiff(current) {\n  return function (prev) {\n    return current !== 0 ? ((current - prev) / prev * 100).toFixed(2) : 0;\n  };\n};\n\nexport var F = {\n  formatNumber: formatNumber,\n  isPercentDown: isPercentDown,\n  showPercent: showPercent,\n  calcDiff: calcDiff\n};","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/components/QuickStats/QuickStats.utils.js"],"names":["formatNumber","x","toString","split","reverse","map","i","join","slice","isPercentDown","showPercent","calcDiff","current","prev","toFixed","F"],"mappings":"AACA,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAAAC,CAAC;AAAA,SAAIA,CAAC,CACxBC,QADuB,GAEvBC,KAFuB,CAEjB,EAFiB,EAGvBC,OAHuB,GAIvBC,GAJuB,CAInB,UAACJ,CAAD,EAAGK,CAAH;AAAA,WAASA,CAAC,GAAG,CAAJ,KAAU,CAAV,GAAcL,CAAC,GAAG,GAAlB,GAAwBA,CAAjC;AAAA,GAJmB,EAKvBG,OALuB,GAMvBG,IANuB,CAMlB,EANkB,EAOvBC,KAPuB,CAOjB,CAPiB,EAOd,CAAC,CAPa,CAAJ;AAAA,CAAtB;;AASA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAR,CAAC;AAAA,SAAIA,CAAC,GAAG,CAAR;AAAA,CAAvB;;AACA,IAAMS,WAAW,GAAG,SAAdA,WAAc,CAAAT,CAAC;AAAA,SAAIA,CAAC,KAAK,CAAV;AAAA,CAArB;;AACA,IAAMU,QAAQ,GAAG,SAAXA,QAAW,CAAAC,OAAO;AAAA,SAAI,UAAAC,IAAI;AAAA,WAAID,OAAO,KAAK,CAAZ,GAAgB,CAAC,CAACA,OAAO,GAAGC,IAAX,IAAmBA,IAAnB,GAA0B,GAA3B,EAAgCC,OAAhC,CAAwC,CAAxC,CAAhB,GAA6D,CAAjE;AAAA,GAAR;AAAA,CAAxB;;AAEA,OAAO,IAAMC,CAAC,GAAG;AACff,EAAAA,YAAY,EAAZA,YADe;AAEfS,EAAAA,aAAa,EAAbA,aAFe;AAGfC,EAAAA,WAAW,EAAXA,WAHe;AAIfC,EAAAA,QAAQ,EAARA;AAJe,CAAV","sourcesContent":["\nconst formatNumber = x => x\n  .toString()\n  .split('')\n  .reverse()\n  .map((x,i) => i % 3 === 0 ? x + ',' : x)\n  .reverse()\n  .join('')\n  .slice(0, -1)\n\nconst isPercentDown = x => x < 0\nconst showPercent = x => x !== 0\nconst calcDiff = current => prev => current !== 0 ? ((current - prev) / prev * 100).toFixed(2) : 0\n\nexport const F = {\n  formatNumber,\n  isPercentDown,\n  showPercent,\n  calcDiff\n}\n"]},"metadata":{},"sourceType":"module"}