{"ast":null,"code":"var _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport App from 'next/app';\nimport Router from 'next/router';\nimport styled, { css, ThemeProvider } from 'styled-components';\nimport { themes } from '../utils/themes';\nimport Header from '../components/Header';\nimport MoonSVG from '../utils/moon.svg';\nimport SunSVG from '../assets/icons/sun.svg';\nimport * as gtag from '../utils/gtag';\nRouter.events.on('routeChangeComplete', url => gtag.pageview(url));\n\nconst lightTheme = () => _objectSpread({}, themes['common'], {}, themes['light']);\n\nconst darkTheme = () => _objectSpread({}, themes['common'], {}, themes['dark']);\n\nconst ThemeIcon = css`\n  width: 4rem;\n  height: 4rem;\n  margin-left: auto;\n  cursor: pointer;\n  @media (max-width: 768px) {\n    width: 3rem;\n    height: 3rem;\n  }\n`;\nconst MoonIcon = styled(MoonSVG)`\n  ${ThemeIcon}\n  color: lightblue;\n`;\nconst SunIcon = styled(SunSVG)`\n  ${ThemeIcon}\n`;\nexport default class MyApp extends App {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      theme: lightTheme(),\n      isHeb: true\n    });\n\n    _defineProperty(this, \"changeLang\", () => this.setState(prevState => _objectSpread({}, prevState, {\n      isHeb: !isHeb\n    })));\n\n    _defineProperty(this, \"setDarkTheme\", () => this.setState(prevState => _objectSpread({}, prevState, {\n      theme: darkTheme()\n    })));\n\n    _defineProperty(this, \"setLightTheme\", () => this.setState(prevState => _objectSpread({}, prevState, {\n      theme: lightTheme()\n    })));\n  }\n\n  shouldComponentUpdate(p, nextState) {\n    console.log('hi');\n    return true;\n  }\n\n  render() {\n    console.log(this.state.theme.type);\n    const isLight = this.state.theme.type === 'light';\n    const {\n      Component,\n      pageProps\n    } = this.props;\n\n    const themeButton = isLight && __jsx(MoonIcon, {\n      onClick: this.setDarkTheme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }) || __jsx(SunIcon, {\n      onClick: this.setLightTheme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    });\n\n    return __jsx(ThemeProvider, {\n      theme: this.state.theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, __jsx(Header, {\n      title: \"C19.FeeD\",\n      isHeb: this.state.isHeb,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, themeButton), __jsx(Component, _extends({}, pageProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/pages/_app.js"],"names":["App","Router","styled","css","ThemeProvider","themes","Header","MoonSVG","SunSVG","gtag","events","on","url","pageview","lightTheme","darkTheme","ThemeIcon","MoonIcon","SunIcon","MyApp","theme","isHeb","setState","prevState","shouldComponentUpdate","p","nextState","console","log","render","state","type","isLight","Component","pageProps","props","themeButton","setDarkTheme","setLightTheme"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,EAAsBC,aAAtB,QAA2C,mBAA3C;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,OAAO,KAAKC,IAAZ,MAAsB,eAAtB;AAEAR,MAAM,CAACS,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwCC,GAAG,IAAIH,IAAI,CAACI,QAAL,CAAcD,GAAd,CAA/C;;AAEA,MAAME,UAAU,GAAG,wBACdT,MAAM,CAAC,QAAD,CADQ,MAEdA,MAAM,CAAC,OAAD,CAFQ,CAAnB;;AAKA,MAAMU,SAAS,GAAG,wBACbV,MAAM,CAAC,QAAD,CADO,MAEbA,MAAM,CAAC,MAAD,CAFO,CAAlB;;AAKA,MAAMW,SAAS,GAAGb,GAAI;;;;;;;;;CAAtB;AAWA,MAAMc,QAAQ,GAAGf,MAAM,CAACK,OAAD,CAAU;IAC7BS,SAAU;;CADd;AAKA,MAAME,OAAO,GAAGhB,MAAM,CAACM,MAAD,CAAS;IAC3BQ,SAAU;CADd;AAKA,eAAe,MAAMG,KAAN,SAAoBnB,GAApB,CAAwB;AAAA;AAAA;;AAAA,mCAE7B;AACNoB,MAAAA,KAAK,EAAEN,UAAU,EADX;AAENO,MAAAA,KAAK,EAAE;AAFD,KAF6B;;AAAA,wCAOrB,MAAM,KAAKC,QAAL,CAAcC,SAAS,sBAAUA,SAAV;AAAqBF,MAAAA,KAAK,EAAE,CAACA;AAA7B,MAAvB,CAPe;;AAAA,0CAQrB,MAAM,KAAKC,QAAL,CAAcC,SAAS,sBAAUA,SAAV;AAAqBH,MAAAA,KAAK,EAAEL,SAAS;AAArC,MAAvB,CARe;;AAAA,2CASrB,MAAM,KAAKO,QAAL,CAAcC,SAAS,sBAAUA,SAAV;AAAqBH,MAAAA,KAAK,EAAEN,UAAU;AAAtC,MAAvB,CATe;AAAA;;AAWrCU,EAAAA,qBAAqB,CAACC,CAAD,EAAIC,SAAJ,EAAe;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,WAAO,IAAP;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAEPF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKE,KAAL,CAAWV,KAAX,CAAiBW,IAA7B;AAEA,UAAMC,OAAO,GAAG,KAAKF,KAAL,CAAWV,KAAX,CAAiBW,IAAjB,KAA0B,OAA1C;AACA,UAAM;AAAEE,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA2B,KAAKC,KAAtC;;AACA,UAAMC,WAAW,GAAIJ,OAAO,IAAI,MAAC,QAAD;AAAU,MAAA,OAAO,EAAE,KAAKK,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAZ,IAAyD,MAAC,OAAD;AAAS,MAAA,OAAO,EAAE,KAAKC,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7E;;AAEA,WACE,MAAC,aAAD;AAAe,MAAA,KAAK,EAAE,KAAKR,KAAL,CAAWV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,UAAd;AAAyB,MAAA,KAAK,EAAE,KAAKU,KAAL,CAAWT,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIe,WADJ,CADF,EAIE,MAAC,SAAD,eAAeF,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJF,CADF;AAQD;;AAhCoC","sourcesContent":["import App from 'next/app'\nimport Router from 'next/router'\nimport styled, { css, ThemeProvider } from 'styled-components'\nimport { themes } from '../utils/themes'\nimport Header from '../components/Header'\nimport MoonSVG from '../utils/moon.svg'\nimport SunSVG from '../assets/icons/sun.svg'\n\nimport * as gtag from '../utils/gtag'\n\nRouter.events.on('routeChangeComplete', url => gtag.pageview(url))\n\nconst lightTheme = () => ({\n  ...themes['common'],\n  ...themes['light'],\n})\n\nconst darkTheme = () => ({\n  ...themes['common'],\n  ...themes['dark'],\n})\n\nconst ThemeIcon = css`\n  width: 4rem;\n  height: 4rem;\n  margin-left: auto;\n  cursor: pointer;\n  @media (max-width: 768px) {\n    width: 3rem;\n    height: 3rem;\n  }\n`\n\nconst MoonIcon = styled(MoonSVG)`\n  ${ThemeIcon}\n  color: lightblue;\n`\n\nconst SunIcon = styled(SunSVG)`\n  ${ThemeIcon}\n`\n\n\nexport default class MyApp extends App {\n\n  state = {\n    theme: lightTheme(),\n    isHeb: true,\n  }\n\n  changeLang =    () => this.setState(prevState => ({ ...prevState, isHeb: !isHeb }))\n  setDarkTheme =  () => this.setState(prevState => ({ ...prevState, theme: darkTheme() }))\n  setLightTheme = () => this.setState(prevState => ({ ...prevState, theme: lightTheme() }))\n\n  shouldComponentUpdate(p, nextState) {\n    console.log('hi');\n    return true\n  }\n\n  render() {\n\n    console.log(this.state.theme.type);\n\n    const isLight = this.state.theme.type === 'light'\n    const { Component, pageProps } = this.props\n    const themeButton = (isLight && <MoonIcon onClick={this.setDarkTheme} />) || <SunIcon onClick={this.setLightTheme} />\n\n    return (\n      <ThemeProvider theme={this.state.theme}>\n        <Header title='C19.FeeD' isHeb={this.state.isHeb}>\n          { themeButton }\n        </Header>\n        <Component {...pageProps} />\n      </ThemeProvider>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}