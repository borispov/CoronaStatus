{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/components/CaseChart.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport axios from 'axios';\nimport useTime from '../utils/useTime';\nimport sortForChart from '../utils/sortForChart';\nimport Chart from './Chart';\nimport Container from './Container';\nvar baseURL = \"http://covid19.borisky.me:3003/api/v1/alltime/\";\n\nvar countryTimeData = function countryTimeData(cn) {\n  var loc, data, dataRes;\n  return _regeneratorRuntime.async(function countryTimeData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.t0 = cn;\n\n          if (_context.t0) {\n            _context.next = 5;\n            break;\n          }\n\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(currentCountry());\n\n        case 4:\n          _context.t0 = _context.sent;\n\n        case 5:\n          loc = _context.t0;\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(axios.get(baseURL + loc));\n\n        case 8:\n          data = _context.sent;\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(sortForChart(data.data));\n\n        case 11:\n          dataRes = _context.sent;\n          return _context.abrupt(\"return\", data);\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar worldTimeData = function worldTimeData() {\n  var data, dataRes;\n  return _regeneratorRuntime.async(function worldTimeData$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(baseURL));\n\n        case 2:\n          data = _context2.sent;\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(sortForChart(data.data));\n\n        case 5:\n          dataRes = _context2.sent;\n          return _context2.abrupt(\"return\", dataRes);\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nfunction currentCountry() {\n  return _regeneratorRuntime.async(function currentCountry$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(axios.get('https://extreme-ip-lookup.com/json/').then(function (res) {\n            return res.data.country;\n          })[\"catch\"](function (e) {\n            return 'israel';\n          }));\n\n        case 2:\n          return _context3.abrupt(\"return\", _context3.sent);\n\n        case 3:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar CaseChart = /*#__PURE__*/function (_React$Component) {\n  _inherits(CaseChart, _React$Component);\n\n  function CaseChart(props) {\n    var _this;\n\n    _classCallCheck(this, CaseChart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CaseChart).call(this, props));\n    _this.state = {\n      // country: this.props.country,\n      worldData: [],\n      countryData: [],\n      worldLabels: [],\n      countryLabels: [],\n      worldCases: [],\n      countryCases: [],\n      showWorld: true\n    };\n    return _this;\n  }\n\n  _createClass(CaseChart, [{\n    key: \"setShowWorld\",\n    value: function setShowWorld() {\n      var showWorld = !this.state.showWorld;\n      this.setState({\n        showWorld: showWorld\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var timeStats, countryStats, worldCases;\n      return _regeneratorRuntime.async(function componentDidMount$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(worldTimeData());\n\n            case 2:\n              timeStats = _context4.sent;\n              _context4.next = 5;\n              return _regeneratorRuntime.awrap(countryTimeData(this.props.country));\n\n            case 5:\n              countryStats = _context4.sent;\n              worldCases = timeStats && timeStats.datasets.filter(function (a) {\n                return a.label === 'cases';\n              }); // const countryCases = countryStats && countryStats.datasets.filter(a => a.label === 'cases')\n\n              console.log(timeStats);\n              this.setState({\n                worldData: timeStats,\n                // countryData: countryStats,\n                worldCases: worldCases // countryCases\n\n              });\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return CaseChart;\n}(React.Component);\n\nexport default CaseChart;","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/components/CaseChart.js"],"names":["React","axios","useTime","sortForChart","Chart","Container","baseURL","countryTimeData","cn","currentCountry","loc","get","data","dataRes","worldTimeData","then","res","country","e","CaseChart","props","state","worldData","countryData","worldLabels","countryLabels","worldCases","countryCases","showWorld","setState","timeStats","countryStats","datasets","filter","a","label","console","log","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport useTime from '../utils/useTime'\nimport sortForChart from '../utils/sortForChart'\nimport Chart from './Chart'\nimport Container from './Container'\n\nconst baseURL = `http://covid19.borisky.me:3003/api/v1/alltime/`\n\nconst countryTimeData = async (cn) => {\n  const loc = cn || await currentCountry()\n  const data = await axios.get(baseURL+loc)\n  const dataRes = await sortForChart(data.data)\n  return data\n}\n\nconst worldTimeData = async () => {\n  const data = await axios.get(baseURL)\n  const dataRes = await sortForChart(data.data)\n      // .then(res => sortForChart(res.data))\n      // .catch(err => console.log(err))\n  return dataRes\n}\n\nasync function currentCountry(){\n  return await axios\n    .get('https://extreme-ip-lookup.com/json/')\n    .then(res => res.data.country)\n    .catch(e => 'israel')\n}\n\n\nclass CaseChart extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      // country: this.props.country,\n      worldData: [],\n      countryData: [],\n      worldLabels: [],\n      countryLabels: [],\n      worldCases: [],\n      countryCases: [],\n      showWorld: true\n    }\n  }\n\n  setShowWorld() {\n    const showWorld = !this.state.showWorld\n    this.setState({ showWorld })\n  }\n\n  async componentDidMount() {\n    const timeStats = await worldTimeData()\n    const countryStats = await countryTimeData(this.props.country)\n\n    const worldCases = timeStats && timeStats.datasets.filter(a => a.label === 'cases')\n    // const countryCases = countryStats && countryStats.datasets.filter(a => a.label === 'cases')\n    console.log(timeStats);\n\n    this.setState({\n      worldData: timeStats,\n      // countryData: countryStats,\n      worldCases,\n      // countryCases\n    })\n\n  }\n\n  render() {\n    return (\n      <Container />\n    )\n  }\n\n}\n\nexport default CaseChart\n"]},"metadata":{},"sourceType":"module"}