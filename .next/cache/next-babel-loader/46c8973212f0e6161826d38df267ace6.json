{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useEffect } from 'react';\n\nfunction getCountry(list) {\n  return function (queryCountry) {\n    return list.reduce(function (a, c) {\n      return c.country === queryCountry ? c : a;\n    }, {});\n  };\n}\n\nfunction useStats(url) {\n  var _useState = useState(),\n      stats = _useState[0],\n      setStats = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  useEffect(function () {\n    function fetchData() {\n      var data;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              console.log('fetching data...');\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(fetch('https://extreme-ip-lookup.com/json/').then(function (res) {\n                return res.json();\n              }).then(function (response) {\n                console.log(\"Country: \", response.country);\n              })[\"catch\"](function (data, status) {\n                console.log('Request failed');\n              }));\n\n            case 4:\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(fetch(url).then(function (res) {\n                return res.json();\n              }).then(function (d) {\n                return getCountry(d)(\"Israel\");\n              })[\"catch\"](function (err) {\n                return setError(err);\n              }));\n\n            case 6:\n              data = _context.sent;\n              setStats(data);\n              setLoading(false);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData();\n  }, []);\n  return {\n    stats: stats,\n    loading: loading,\n    error: error\n  };\n}\n\nexport default useStats;","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/utils/useStats.js"],"names":["useState","useEffect","getCountry","list","queryCountry","reduce","a","c","country","useStats","url","stats","setStats","loading","setLoading","error","setError","fetchData","console","log","fetch","then","res","json","response","data","status","d","err"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAAyB;AACvB,SAAO,UAASC,YAAT,EAAuB;AAC5B,WAAOD,IAAI,CAACE,MAAL,CAAY,UAACC,CAAD,EAAGC,CAAH;AAAA,aAASA,CAAC,CAACC,OAAF,KAAcJ,YAAd,GAA6BG,CAA7B,GAAiCD,CAA1C;AAAA,KAAZ,EAAyD,EAAzD,CAAP;AACD,GAFD;AAGD;;AAED,SAASG,QAAT,CAAkBC,GAAlB,EAAuB;AAAA,kBACKV,QAAQ,EADb;AAAA,MACdW,KADc;AAAA,MACPC,QADO;;AAAA,mBAESZ,QAAQ,CAAC,KAAD,CAFjB;AAAA,MAEda,OAFc;AAAA,MAELC,UAFK;;AAAA,mBAGKd,QAAQ,CAAC,KAAD,CAHb;AAAA,MAGde,KAHc;AAAA,MAGPC,QAHO;;AAKrBf,EAAAA,SAAS,CAAC,YAAM;AACd,aAAegB,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACEH,cAAAA,UAAU,CAAC,IAAD,CAAV;AACAI,cAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AAFF;AAAA,+CAIQC,KAAK,CAAC,qCAAD,CAAL,CACLC,IADK,CACC,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,eADJ,EAELF,IAFK,CAEA,UAAAG,QAAQ,EAAI;AACdN,gBAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBK,QAAQ,CAAChB,OAAlC;AACF,eAJI,WAKE,UAACiB,IAAD,EAAOC,MAAP,EAAkB;AACtBR,gBAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACF,eAPI,CAJR;;AAAA;AAAA;AAAA,+CAaqBC,KAAK,CAACV,GAAD,CAAL,CACdW,IADc,CACT,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,eADM,EAEdF,IAFc,CAET,UAAAM,CAAC;AAAA,uBAAIzB,UAAU,CAACyB,CAAD,CAAV,CAAc,QAAd,CAAJ;AAAA,eAFQ,WAGR,UAAAC,GAAG;AAAA,uBAAIZ,QAAQ,CAACY,GAAD,CAAZ;AAAA,eAHK,CAbrB;;AAAA;AAaQH,cAAAA,IAbR;AAiBEb,cAAAA,QAAQ,CAACa,IAAD,CAAR;AACAX,cAAAA,UAAU,CAAC,KAAD,CAAV;;AAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAoBAG,IAAAA,SAAS;AACV,GAtBQ,EAsBN,EAtBM,CAAT;AAuBA,SAAO;AACLN,IAAAA,KAAK,EAALA,KADK;AACEE,IAAAA,OAAO,EAAPA,OADF;AACWE,IAAAA,KAAK,EAALA;AADX,GAAP;AAGD;;AAED,eAAeN,QAAf","sourcesContent":["import { useState, useEffect } from 'react'\n\nfunction getCountry(list){\n  return function(queryCountry) {\n    return list.reduce((a,c) => c.country === queryCountry ? c : a, {})\n  }\n}\n\nfunction useStats(url) {\n  const [stats, setStats] = useState();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true)\n      console.log('fetching data...')\n\n      await fetch('https://extreme-ip-lookup.com/json/')\n      .then( res => res.json())\n      .then(response => {\n          console.log(\"Country: \", response.country);\n       })\n       .catch((data, status) => {\n          console.log('Request failed');\n       })\n\n      const data = await fetch(url)\n          .then(res => res.json())\n          .then(d => getCountry(d)(\"Israel\"))\n          .catch(err => setError(err))\n      setStats(data)\n      setLoading(false)\n    }\n    fetchData();\n  }, [])\n  return {\n    stats, loading, error\n  }\n}\n\nexport default useStats;\n"]},"metadata":{},"sourceType":"module"}