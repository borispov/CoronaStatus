{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useEffect, useRef, useState, useContext } from 'react';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { themes } from '../utils/themes'; // Components\n\nimport Burger from '../components/Burger';\nimport Menu from '../components/Menu';\nimport Header from '../components/Header'; // Context & Hooks\n\nimport { ProxyContext } from '../context/proxy-context';\nimport { LocaleContext } from '../context/LocaleContext';\nimport useOutSide from '../hooks/useOutSide';\nimport useTranslation from '../hooks/useTranslation.js';\nimport { getInitialLocale } from '../locales/getInitialLocale'; // Functions for changing themes\n\nconst lightTheme = () => _objectSpread({}, themes['common'], {}, themes['light']);\n\nconst darkTheme = () => _objectSpread({}, themes['common'], {}, themes['dark']);\n\nconst langs = ['he', 'en'];\n\nconst Layout = ({\n  children\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const {\n    0: proxy,\n    1: setProxy\n  } = useContext(ProxyContext);\n  const {\n    locale,\n    setLocale\n  } = useContext(LocaleContext);\n  const {\n    0: ig,\n    1: setIgnore\n  } = useState(false); // Initiation of Context API's\n\n  useEffect(() => {\n    const ip2proxy = JSON.parse(localStorage.getItem('ip2proxy'));\n    const locationFromStorage = ip2proxy && ip2proxy.countryName;\n    let loc = getInitialLocale(locationFromStorage);\n    setLocale(loc);\n    return () => {};\n  }, [proxy]); // setting locale. not  sure yet if I use it or context API only\n\n  const {\n    0: menuOpen,\n    1: setOpen\n  } = useState(false);\n\n  const closeMenu = () => setOpen(false);\n\n  const toggleMenu = () => setOpen(!menuOpen);\n\n  const toggleLang = () => {\n    closeMenu();\n    const newLocale = langs[+!langs.indexOf(locale)];\n    setLocale(newLocale);\n  };\n\n  const node = useRef();\n  useOutSide(node, closeMenu);\n  const displayLang = locale === 'he' ? 'English' : 'עברית';\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, t('metaTitle')), __jsx(\"meta\", {\n    name: \"description\",\n    content: t('metaDescription')\n  }), __jsx(\"meta\", {\n    name: \"keywords\",\n    content: t('metaKeywords')\n  })), __jsx(React.Fragment, null, __jsx(Header, null, __jsx(\"div\", {\n    ref: node\n  }, __jsx(Burger, {\n    setOpen: toggleMenu,\n    open: menuOpen\n  }), __jsx(Menu, {\n    setOpen: toggleMenu,\n    open: menuOpen\n  }, __jsx(Link, {\n    href: \"/News\"\n  }, __jsx(\"a\", {\n    alt: \"news\",\n    onClick: () => closeMenu()\n  }, __jsx(\"span\", null, \"\\uD83D\\uDCF0\"), t('news', 'links'))), __jsx(Link, {\n    href: \"/Statistics\"\n  }, __jsx(\"a\", {\n    alt: \"stats\",\n    onClick: () => closeMenu()\n  }, __jsx(\"span\", null, \" \\uD83D\\uDDFA\"), t('statistics', 'links'))), __jsx(Link, {\n    href: \"/About\"\n  }, __jsx(\"a\", {\n    alt: \"about\",\n    onClick: () => closeMenu()\n  }, __jsx(\"span\", null, \" \\uD83E\\uDDD4\"), t('about', 'links'))), __jsx(\"a\", {\n    onClick: toggleLang\n  }, __jsx(\"span\", null, \"\\uD83C\\uDF10\"), displayLang)))), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"214878086\", [menuOpen && `\n                filter: blur(${menuOpen ? '1px' : '0px'});\n                transition: all 500ms ease-in-out;\n                -webkit-transition: -webkit-filter 500ms linear;\n                }\n              `]]]) + \" \" + \"AppContainer\"\n  }, children, __jsx(_JSXStyle, {\n    id: \"214878086\",\n    dynamic: [menuOpen && `\n                filter: blur(${menuOpen ? '1px' : '0px'});\n                transition: all 500ms ease-in-out;\n                -webkit-transition: -webkit-filter 500ms linear;\n                }\n              `]\n  }, [`.AppContainer{${menuOpen && `\n                filter: blur(${menuOpen ? '1px' : '0px'});\n                transition: all 500ms ease-in-out;\n                -webkit-transition: -webkit-filter 500ms linear;\n                }\n              `};}`]))));\n};\n\nexport default Layout;","map":null,"metadata":{},"sourceType":"module"}