{"ast":null,"code":"var _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport CoronaApp from '../components/CoronaApp';\nimport styled, { ThemeProvider } from 'styled-components';\nimport GlobalStyle from './Global';\nimport { useState } from 'react';\nimport { themes } from '../utils/themes';\n\nconst lightTheme = () => _objectSpread({}, themes['common'], {}, themes['light']);\n\nconst darkTheme = () => _objectSpread({}, themes['common'], {}, themes['dark']);\n\nconst Btn = styled.button`\n  color: ${props => props.theme.bgColor};\n  background-color: ${props => props.theme.color};\n  border-radius: 50%;\n  position: absolute;\n  top: ${props => props.top};\n  left: ${props => props.left};\n  right: ${props => props.right};\n  padding: 6px 2px;\n  outline: none;\n`;\nexport default function IndexPage() {\n  const {\n    0: theme,\n    1: setTheme\n  } = useState(lightTheme());\n\n  const setDarkTheme = () => setTheme(darkTheme());\n\n  const setLightTheme = () => setTheme(lightTheme());\n\n  const {\n    0: lang,\n    1: setLang\n  } = useState('heb');\n  const isLight = theme.type === 'light';\n  return __jsx(React.Fragment, null, __jsx(ThemeProvider, {\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(GlobalStyle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), __jsx(CoronaApp, {\n    theme: theme,\n    lang: lang,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), __jsx(Btn, {\n    onClick: lang === 'heb' ? setLang('eng') : setLang('heb'),\n    left: \"0\",\n    top: \"2%\",\n    right: \"5%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), __jsx(Btn, {\n    onClick: !isLight ? setLightTheme : setDarkTheme,\n    top: \"5%\",\n    left: \"1%\",\n    right: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, !isLight ? 'Light' : 'Dark')));\n}","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/pages/index.js"],"names":["CoronaApp","styled","ThemeProvider","GlobalStyle","useState","themes","lightTheme","darkTheme","Btn","button","props","theme","bgColor","color","top","left","right","IndexPage","setTheme","setDarkTheme","setLightTheme","lang","setLang","isLight","type"],"mappings":";;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,IAAiBC,aAAjB,QAAsC,mBAAtC;AACA,OAAOC,WAAP,MAAwB,UAAxB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,iBAAvB;;AAEA,MAAMC,UAAU,GAAG,wBACdD,MAAM,CAAC,QAAD,CADQ,MAEdA,MAAM,CAAC,OAAD,CAFQ,CAAnB;;AAKA,MAAME,SAAS,GAAG,wBACbF,MAAM,CAAC,QAAD,CADO,MAEbA,MAAM,CAAC,MAAD,CAFO,CAAlB;;AAKA,MAAMG,GAAG,GAAGP,MAAM,CAACQ,MAAO;WACfC,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,OAAQ;sBAClBF,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYE,KAAM;;;SAGxCH,KAAK,IAAIA,KAAK,CAACI,GAAI;UAClBJ,KAAK,IAAIA,KAAK,CAACK,IAAK;WACnBL,KAAK,IAAIA,KAAK,CAACM,KAAM;;;CAPhC;AAYA,eAAe,SAASC,SAAT,GAAqB;AAClC,QAAM;AAAA,OAACN,KAAD;AAAA,OAAQO;AAAR,MAAoBd,QAAQ,CAACE,UAAU,EAAX,CAAlC;;AACA,QAAMa,YAAY,GAAG,MAAMD,QAAQ,CAACX,SAAS,EAAV,CAAnC;;AACA,QAAMa,aAAa,GAAG,MAAMF,QAAQ,CAACZ,UAAU,EAAX,CAApC;;AACA,QAAM;AAAA,OAACe,IAAD;AAAA,OAAOC;AAAP,MAAkBlB,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAMmB,OAAO,GAAGZ,KAAK,CAACa,IAAN,KAAe,OAA/B;AAEA,SACE,4BACE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEb,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,SAAD;AAAW,IAAA,KAAK,EAAEA,KAAlB;AAAyB,IAAA,IAAI,EAAEU,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,MAAC,GAAD;AACE,IAAA,OAAO,EAAEA,IAAI,KAAK,KAAT,GAAiBC,OAAO,CAAC,KAAD,CAAxB,GAAkCA,OAAO,CAAC,KAAD,CADpD;AAEE,IAAA,IAAI,EAAC,GAFP;AAGE,IAAA,GAAG,EAAC,IAHN;AAIE,IAAA,KAAK,EAAC,IAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EASE,MAAC,GAAD;AAAK,IAAA,OAAO,EAAE,CAACC,OAAD,GAAWH,aAAX,GAA2BD,YAAzC;AAAuD,IAAA,GAAG,EAAC,IAA3D;AAAgE,IAAA,IAAI,EAAC,IAArE;AAA0E,IAAA,KAAK,EAAC,GAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACI,OAAD,GAAW,OAAX,GAAqB,MADxB,CATF,CADF,CADF;AAiBD","sourcesContent":["import CoronaApp from '../components/CoronaApp'\nimport styled, { ThemeProvider } from 'styled-components'\nimport GlobalStyle from './Global'\nimport { useState } from 'react'\nimport { themes } from '../utils/themes'\n\nconst lightTheme = () => ({\n  ...themes['common'],\n  ...themes['light'],\n})\n\nconst darkTheme = () => ({\n  ...themes['common'],\n  ...themes['dark'],\n})\n\nconst Btn = styled.button`\n  color: ${props => props.theme.bgColor};\n  background-color: ${props => props.theme.color};\n  border-radius: 50%;\n  position: absolute;\n  top: ${props => props.top};\n  left: ${props => props.left};\n  right: ${props => props.right};\n  padding: 6px 2px;\n  outline: none;\n`\n\nexport default function IndexPage() {\n  const [theme, setTheme] = useState(lightTheme())\n  const setDarkTheme = () => setTheme(darkTheme())\n  const setLightTheme = () => setTheme(lightTheme())\n  const [lang, setLang] = useState('heb');\n  const isLight = theme.type === 'light'\n\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <GlobalStyle />\n        <CoronaApp theme={theme} lang={lang} />\n        <Btn \n          onClick={lang === 'heb' ? setLang('eng') : setLang('heb')}\n          left='0'\n          top='2%'\n          right='5%'\n        />\n        <Btn onClick={!isLight ? setLightTheme : setDarkTheme} top=\"5%\" left=\"1%\" right='0'>\n          {!isLight ? 'Light' : 'Dark'}\n        </Btn>\n      </ThemeProvider>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}