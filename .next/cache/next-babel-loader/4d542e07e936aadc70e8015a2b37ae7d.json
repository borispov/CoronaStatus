{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useEffect, useReducer } from 'react';\nimport axios from 'axios';\nimport sortForChart from './sortForChart';\nvar baseURL = \"http://46.101.156.51:3003/api/v1/alltime/\";\n\nfunction currentCountry() {\n  return _regeneratorRuntime.async(function currentCountry$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios.get('https://extreme-ip-lookup.com/json/').then(function (res) {\n            return res.data.country;\n          })[\"catch\"](function (e) {\n            return 'israel';\n          }));\n\n        case 2:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n} // function useTime(loc, url = baseURL) {\n\n\nfunction useTime(loc) {\n  var _useState = useState(),\n      countryStats = _useState[0],\n      setCountryStats = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  var _useState4 = useState(),\n      country = _useState4[0],\n      setCountry = _useState4[1];\n\n  useEffect(function () {\n    function fetchData(cn) {\n      var geoLocation, URL, data, timeStats;\n      return _regeneratorRuntime.async(function fetchData$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setLoading(true);\n              setError();\n\n              if (!(!country || !country.length)) {\n                _context2.next = 7;\n                break;\n              }\n\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(currentCountry());\n\n            case 5:\n              geoLocation = _context2.sent;\n              setCountry(geoLocation);\n\n            case 7:\n              URL = baseURL + country;\n              _context2.next = 10;\n              return _regeneratorRuntime.awrap(axios.get(URL).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return setError(err);\n              }));\n\n            case 10:\n              data = _context2.sent;\n              timeStats = sortForChart(data);\n              setCountryStats(timeStats);\n              setLoading(false);\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData(country);\n  }, [country]);\n  return {\n    countryStats: countryStats,\n    loading: loading,\n    error: error\n  };\n}\n\nexport default useTime;","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/utils/useTime.js"],"names":["useState","useEffect","useReducer","axios","sortForChart","baseURL","currentCountry","get","then","res","data","country","e","useTime","loc","countryStats","setCountryStats","loading","setLoading","error","setError","setCountry","fetchData","cn","length","geoLocation","URL","err","timeStats"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,IAAMC,OAAO,8CAAb;;AAEA,SAAeC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACeH,KAAK,CACfI,GADU,CACN,qCADM,EAEVC,IAFU,CAEL,UAAAC,GAAG;AAAA,mBAAIA,GAAG,CAACC,IAAJ,CAASC,OAAb;AAAA,WAFE,WAGJ,UAAAC,CAAC;AAAA,mBAAI,QAAJ;AAAA,WAHG,CADf;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAOA;;;AACA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AAAA,kBACoBd,QAAQ,EAD5B;AAAA,MACbe,YADa;AAAA,MACCC,eADD;;AAAA,mBAEUhB,QAAQ,CAAC,KAAD,CAFlB;AAAA,MAEbiB,OAFa;AAAA,MAEJC,UAFI;;AAAA,mBAGMlB,QAAQ,CAAC,KAAD,CAHd;AAAA,MAGbmB,KAHa;AAAA,MAGNC,QAHM;;AAAA,mBAIUpB,QAAQ,EAJlB;AAAA,MAIbW,OAJa;AAAA,MAIJU,UAJI;;AAOpBpB,EAAAA,SAAS,CAAC,YAAM;AACd,aAAeqB,SAAf,CAAyBC,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACEL,cAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,cAAAA,QAAQ;;AAFV,oBAGM,CAACT,OAAD,IAAY,CAACA,OAAO,CAACa,MAH3B;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAI4BlB,cAAc,EAJ1C;;AAAA;AAIQmB,cAAAA,WAJR;AAKIJ,cAAAA,UAAU,CAACI,WAAD,CAAV;;AALJ;AAQQC,cAAAA,GARR,GAQcrB,OAAO,GAAGM,OARxB;AAAA;AAAA,+CASqBR,KAAK,CAACI,GAAN,CAAUmB,GAAV,EAChBlB,IADgB,CACX,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAACC,IAAR;AAAA,eADQ,WAEV,UAAAiB,GAAG;AAAA,uBAAIP,QAAQ,CAACO,GAAD,CAAZ;AAAA,eAFO,CATrB;;AAAA;AASQjB,cAAAA,IATR;AAYQkB,cAAAA,SAZR,GAYoBxB,YAAY,CAACM,IAAD,CAZhC;AAaEM,cAAAA,eAAe,CAACY,SAAD,CAAf;AACAV,cAAAA,UAAU,CAAC,KAAD,CAAV;;AAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBAI,IAAAA,SAAS,CAACX,OAAD,CAAT;AAED,GAnBQ,EAmBN,CAACA,OAAD,CAnBM,CAAT;AAqBA,SAAO;AACLI,IAAAA,YAAY,EAAZA,YADK;AACSE,IAAAA,OAAO,EAAPA,OADT;AACkBE,IAAAA,KAAK,EAALA;AADlB,GAAP;AAGD;;AAED,eAAeN,OAAf","sourcesContent":["import { useState, useEffect, useReducer } from 'react'\nimport axios from 'axios'\nimport sortForChart from './sortForChart'\n\nconst baseURL = `http://46.101.156.51:3003/api/v1/alltime/`\n\nasync function currentCountry(){\n  return await axios\n    .get('https://extreme-ip-lookup.com/json/')\n    .then(res => res.data.country)\n    .catch(e => 'israel')\n}\n\n// function useTime(loc, url = baseURL) {\nfunction useTime(loc) {\n  const [countryStats, setCountryStats] = useState();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [country, setCountry] = useState()\n\n\n  useEffect(() => {\n    async function fetchData(cn) {\n      setLoading(true)\n      setError()\n      if (!country || !country.length) {\n        let geoLocation = await currentCountry()\n        setCountry(geoLocation)\n      }\n\n      const URL = baseURL + country\n      const data = await axios.get(URL)\n        .then(res => res.data)\n        .catch(err => setError(err))\n      const timeStats = sortForChart(data);\n      setCountryStats(timeStats)\n      setLoading(false)\n    }\n    fetchData(country)\n\n  }, [country])\n\n  return {\n    countryStats, loading, error\n  }\n}\n\nexport default useTime;\n"]},"metadata":{},"sourceType":"module"}