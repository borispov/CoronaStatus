{"ast":null,"code":"var _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport App from 'next/app';\nimport Router from 'next/router';\nimport Link from 'next/link';\nimport { useEffect, useState, useRef } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport useOutSide from '../utils/useOutSide';\nimport GlobalStyle from './Global';\nimport Header from '../components/Header';\nimport { Button } from '../components/S';\nimport Burger from '../components/Burger';\nimport Menu from '../components/Menu';\nimport { MoonIcon, SunIcon, WorldIcon } from '../components/Icons/ThemeIcon';\nimport { themes } from '../utils/themes';\nimport * as gtag from '../utils/gtag';\nRouter.events.on('routeChangeComplete', url => gtag.pageview(url));\n\nconst lightTheme = () => _objectSpread({}, themes['common'], {}, themes['light']);\n\nconst darkTheme = () => _objectSpread({}, themes['common'], {}, themes['dark']);\n\nexport default (props => {\n  const {\n    0: theme,\n    1: setTheme\n  } = useState(lightTheme());\n  const {\n    0: isHeb,\n    1: setHeb\n  } = useState(true);\n  const {\n    0: menuOpen,\n    1: setOpen\n  } = useState(false);\n\n  const toggleMenu = () => setOpen(!menuOpen);\n\n  const toggleLang = () => setHeb(!isHeb);\n\n  const setDarkTheme = () => setTheme(setDarkTheme());\n\n  const setLightTheme = () => setTheme(setLightTheme());\n\n  const node = useRef();\n  useOutSide(node, () => setOpen(false));\n  const displayLang = isHeb ? 'English' : 'עברית';\n  const isLight = theme.type === 'light';\n\n  const themeButton = isLight && __jsx(MoonIcon, {\n    onClick: setDarkTheme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }) || __jsx(SunIcon, {\n    onClick: setLightTheme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  });\n\n  const {\n    Component,\n    pageProps\n  } = props;\n  return __jsx(ThemeProvider, {\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(GlobalStyle, {\n    isHeb: isHeb,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), __jsx(Header, {\n    title: \"nCorona\",\n    isHeb: isHeb,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    ref: node,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, __jsx(Burger, {\n    setOpen: toggleMenu,\n    open: menuOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), __jsx(Menu, {\n    setOpen: toggleMenu,\n    open: menuOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    onClick: isLight ? setDarkTheme : setLightTheme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, isLight ? '🌒' : '🌞'), isLight ? isHeb && 'מצב לילה' || 'Dark Mode' : isHeb && 'מצב יום' || 'Light Mode'), __jsx(\"a\", {\n    onClick: toggleLang,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"\\uD83C\\uDF10\"), displayLang), __jsx(Link, {\n    href: \"/News\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    alt: \"news\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"\\uD83D\\uDCF0\"), isHeb && 'חדשות' || 'News'))))), __jsx(Component, _extends({}, pageProps, {\n    isHeb: isHeb,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })));\n});","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/pages/_app.js"],"names":["App","Router","Link","useEffect","useState","useRef","ThemeProvider","useOutSide","GlobalStyle","Header","Button","Burger","Menu","MoonIcon","SunIcon","WorldIcon","themes","gtag","events","on","url","pageview","lightTheme","darkTheme","props","theme","setTheme","isHeb","setHeb","menuOpen","setOpen","toggleMenu","toggleLang","setDarkTheme","setLightTheme","node","displayLang","isLight","type","themeButton","Component","pageProps"],"mappings":"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","sourcesContent":["import App from 'next/app'\nimport Router from 'next/router'\nimport Link from 'next/link';\nimport { useEffect, useState, useRef } from 'react'\nimport { ThemeProvider } from 'styled-components'\n\nimport useOutSide from '../utils/useOutSide'\nimport GlobalStyle from './Global'\nimport Header from '../components/Header'\nimport { Button } from '../components/S'\nimport Burger from '../components/Burger';\nimport Menu from '../components/Menu';\nimport { MoonIcon, SunIcon, WorldIcon } from '../components/Icons/ThemeIcon'\nimport { themes } from '../utils/themes'\nimport * as gtag from '../utils/gtag'\n\nRouter.events.on('routeChangeComplete', url => gtag.pageview(url))\n\nconst lightTheme = () => ({\n  ...themes['common'],\n  ...themes['light'],\n})\n\nconst darkTheme = () => ({\n  ...themes['common'],\n  ...themes['dark'],\n})\n\n\nexport default (props) => {\n  const [theme, setTheme] = useState(lightTheme())\n  const [isHeb, setHeb] = useState(true)\n  const [menuOpen, setOpen] = useState(false)\n\n  const toggleMenu    = () => setOpen(!menuOpen)\n  const toggleLang    = () => setHeb(!isHeb)\n  const setDarkTheme  = () => setTheme(setDarkTheme())\n  const setLightTheme = () => setTheme(setLightTheme())\n\n  const node = useRef()\n\n  useOutSide(node, () => setOpen(false))\n\n  const displayLang       = isHeb ? 'English' : 'עברית'\n  const isLight           = theme.type === 'light'\n  const themeButton       = isLight\n    && <MoonIcon onClick={setDarkTheme} />\n    || <SunIcon onClick={setLightTheme} />\n\n  const { Component, pageProps } = props\n\n\n  return (\n    <ThemeProvider theme={theme}>\n\n      <GlobalStyle isHeb={isHeb}/>\n      <Header title='nCorona' isHeb={isHeb} >\n        <div ref={node}>\n          <Burger setOpen={toggleMenu} open={menuOpen} />\n          <Menu setOpen={toggleMenu} open={menuOpen} >\n            <a onClick={isLight ?setDarkTheme :setLightTheme}>\n              <span>{ isLight ? '🌒' : '🌞'}</span>\n              {\n                isLight\n                  ? (isHeb && 'מצב לילה' || 'Dark Mode')\n                  : (isHeb && 'מצב יום' || 'Light Mode')\n              }\n            </a>\n            <a onClick={toggleLang}>\n              <span>&#127760;</span>\n              {displayLang}\n            </a>\n            <Link href=\"/News\">\n              <a alt=\"news\">\n                <span>&#128240;</span>\n                { isHeb && 'חדשות' || 'News' }\n              </a>\n            </Link>\n\n          </Menu>\n        </div>\n\n      </Header>\n      <Component {...pageProps} isHeb={isHeb}/>\n    </ThemeProvider>\n  )\n\n}\n"]},"metadata":{},"sourceType":"module"}