{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/components/InfoSection.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Container from './Container';\nimport styled from 'styled-components'; // URL for getting the CSV data.\n\nvar baseURL = '';\nvar Wrapper = styled.div.withConfig({\n  displayName: \"InfoSection__Wrapper\",\n  componentId: \"sc-1anhjcp-0\"\n})([\"text-align:none;display:flex;flex-wrap:wrap;justify-content:center;margin-left:15px;margin-right:15px;margin-bottom:32px;\"]);\nvar Section = styled.div.withConfig({\n  displayName: \"InfoSection__Section\",\n  componentId: \"sc-1anhjcp-1\"\n})([\"border-radius:4px;background:\", \";color:\", \";flex:0 0 50%;max-width:33%;position:relative;width:100%;border:1px solid;border-color:\", \";margin:2px;\"], function (props) {\n  return props.theme.bgColor;\n}, function (props) {\n  return props.theme.color;\n}, function (props) {\n  return props.theme.statColor;\n});\nvar SectionTitle = styled.h2.withConfig({\n  displayName: \"InfoSection__SectionTitle\",\n  componentId: \"sc-1anhjcp-2\"\n})([\"color:\", \";background:\", \";font-size:20px;padding:4px 8px;border-bottom:1px solid black;\"], function (props) {\n  return props.theme.btnColor;\n}, function (props) {\n  return props.theme.boxBg;\n});\nvar Link = styled.a.withConfig({\n  displayName: \"InfoSection__Link\",\n  componentId: \"sc-1anhjcp-3\"\n})([\"text-decoration:none;color:\", \";font-weight:700;font-size:18px;line-height:1.5;padding:0 4px;\"], function (props) {\n  return props.theme.statColor;\n});\nvar Desc = styled.p.withConfig({\n  displayName: \"InfoSection__Desc\",\n  componentId: \"sc-1anhjcp-4\"\n})([\"font-size:16px;line-height:1.22;color:\", \";padding:0 4px;\"], function (props) {\n  return props.theme.color;\n});\nvar categories = ['health', 'education', 'activity'];\n\nvar reduceToCat = function reduceToCat(a, _ref) {\n  var category = _ref.category,\n      link = _ref.link,\n      subject = _ref.subject,\n      description = _ref.description;\n  return Object.assign(a, {\n    category: category,\n    data: [].concat(_toConsumableArray(a[data]), [{\n      subject: subject,\n      description: description,\n      link: link\n    }])\n  });\n};\n\nvar initObj = {\n  category: '',\n  data: []\n};\n\nvar mapToCat = function mapToCat(i) {\n  return i.reduce(reduceToCat, initObj);\n};\n\nvar mapDataToSection = function mapDataToSection(item, idx) {\n  return __jsx(\"div\", {\n    key: idx,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, __jsx(Desc, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, item.desc));\n};\n\nvar renderSection = function renderSection(secData) {\n  return secData.map(function (it, ix) {\n    return __jsx(Section, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, __jsx(SectionTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, it.category), it.data.map(mapDataToSection));\n  });\n};\n\nexport default (function () {\n  var _useState = useState(),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useState2 = useState(),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  useEffect(function () {\n    function fetchData() {\n      var _ref2, _data, health, education, d;\n\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setError();\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(axios.get('http://covid19.borisky.me:3003/api/data/resources'));\n\n            case 4:\n              _ref2 = _context.sent;\n              _data = _ref2.data;\n              health = _data.health.map(function (_ref3) {\n                var subject = _ref3.subject,\n                    link = _ref3.link,\n                    description = _ref3.description,\n                    category = _ref3.category;\n                return {\n                  category: category,\n                  data: [{\n                    subject: subject,\n                    link: link,\n                    description: description\n                  }]\n                };\n              }).reduce(function (a, c) {}, {\n                initObj: initObj\n              });\n              console.log(health);\n              education = _data.education.map(mapToCat);\n              d = Object.assign({}, health, education);\n              console.log(d);\n              setData(d);\n              _context.next = 17;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](1);\n              setError(_context.t0);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 14]], Promise);\n    }\n\n    fetchData();\n  }, []);\n\n  if (error) {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \" Received Error Fetching Information ... Let Me Know About This: boristofu@gmail.com\");\n  }\n\n  console.log(data && data);\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    style: {\n      fontSize: '24px',\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Useful Information For All\"), __jsx(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }));\n});","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/components/InfoSection.js"],"names":["useState","useEffect","axios","Container","styled","baseURL","Wrapper","div","Section","props","theme","bgColor","color","statColor","SectionTitle","h2","btnColor","boxBg","Link","a","Desc","p","categories","reduceToCat","category","link","subject","description","Object","assign","data","initObj","mapToCat","i","reduce","mapDataToSection","item","idx","desc","renderSection","secData","map","it","ix","setData","error","setError","fetchData","get","health","c","console","log","education","d","fontSize","textAlign"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Container from './Container'\nimport styled from 'styled-components'\n\n// URL for getting the CSV data.\nconst baseURL = ''\n\nconst Wrapper = styled.div`\n  text-align: none;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-left: 15px;\n  margin-right: 15px;\n  margin-bottom: 32px;\n`\n\nconst Section = styled.div`\n  border-radius: 4px;\n  background: ${props => props.theme.bgColor};\n  color: ${props => props.theme.color};\n  flex: 0 0 50%;\n  max-width: 33%;\n  position: relative;\n  width: 100%;\n  border: 1px solid;\n  border-color: ${props => props.theme.statColor};\n  margin: 2px;\n`\n\nconst SectionTitle = styled.h2`\n  color: ${props => props.theme.btnColor};\n  background: ${props => props.theme.boxBg};\n  font-size: 20px;\n  padding: 4px 8px;\n  border-bottom: 1px solid black;\n`\n\nconst Link = styled.a`\n  text-decoration: none;\n  color: ${props => props.theme.statColor};\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 1.5;\n  padding: 0 4px;\n`\n\nconst Desc = styled.p`\n  font-size: 16px;\n  line-height: 1.22;\n  color: ${props => props.theme.color};\n  padding: 0 4px;\n`\n\nconst categories = ['health', 'education', 'activity']\n\n\nconst reduceToCat = (a, { category, link, subject, description }) =>{\n  return Object.assign(a, {category, data: [...a[data], { subject, description, link } ]} )\n}\n\nconst initObj = { category: '', data: [] }\nconst mapToCat = i => i.reduce(reduceToCat, initObj)\n\n\nconst mapDataToSection = (item, idx) => {\n  return (\n    <div key={idx}>\n      \n      <Desc>{item.desc}</Desc>\n    </div>\n  )\n}\n\nconst renderSection = secData => {\n  return secData.map((it, ix) => (\n    <Section>\n      <SectionTitle>\n        {it.category}\n      </SectionTitle>\n      {it.data.map(mapDataToSection)}\n    </Section>\n  ))\n}\n\nexport default () => {\n\n  const [data, setData] = useState()\n  const [error, setError] = useState()\n\n  useEffect(() => {\n    async function fetchData() {\n      setError()\n      try {\n\n        const { data } = await axios.get('http://covid19.borisky.me:3003/api/data/resources')\n        const health = data.health\n          .map(({subject, link, description, category}) => ({ category, data: [{ subject, link, description }] }))\n          .reduce((a,c) => {},{ initObj })\n        console.log(health);\n        const education = data.education.map(mapToCat)\n        const d = Object.assign({}, health, education)\n        console.log(d);\n        setData(d)\n      } catch(e) {\n        setError(e)\n      }\n    }\n    fetchData()\n  }, [])\n\n\n  if (error) {\n    return <div> Received Error Fetching Information ... Let Me Know About This: boristofu@gmail.com</div>\n  }\n\n  console.log(data && data);\n\n  return (\n    <>\n      <h1 style={{fontSize: '24px', textAlign: 'center'}}>Useful Information For All</h1>\n\n      <Wrapper>\n\n\n{/*\n        {data && renderSection(data)}\n        <Section>\n        <SectionTitle>\n          בריאות\n        </SectionTitle>\n          {\n            healthData.map(mapDataToSection)\n          }\n        </Section>\n        <Section>\n          <SectionTitle>\n            לימודים\n          </SectionTitle>\n          {\n            eduData.map(mapDataToSection)\n          }\n        </Section>\n*/}\n\n      </Wrapper>\n\n    </>\n  )\n\n}\n"]},"metadata":{},"sourceType":"module"}