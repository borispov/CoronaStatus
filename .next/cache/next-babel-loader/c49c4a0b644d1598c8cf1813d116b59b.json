{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst isUSA = s => s === 'usa' || s === 'Usa' || s === 'United States';\n\nconst isUK = str => str === 'Uk' || str === 'England' || str === 'United Kingdom' || str == 'great britain';\n\nconst capitalize = str => str.charAt(0).toUpperCase() + str.toLowerCase().slice(1);\n\nconst parseCountry = country => isUSA(country) ? 'USA' : isUK(country) ? 'UK' : country;\n\nexport default function useYday(url, country) {\n  const {\n    0: yesterdayCn,\n    1: setStats\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState(false);\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true);\n      setError();\n      const URL = url + parseCountry(country).toLowerCase();\n\n      try {\n        const {\n          data\n        } = await axios.get(URL + '?yesterday=true');\n        const yesterdayCn = {\n          active: data.active,\n          cases: data.cases,\n          todayCases: data.todayCases,\n          recovered: data.recovered,\n          deaths: data.deaths,\n          country: data.country\n        };\n        setStats(yesterdayCn);\n        setLoading(false);\n      } catch (e) {\n        setError(e);\n      }\n    }\n\n    fetchData();\n  }, [country]);\n  return {\n    yesterdayCn,\n    loading,\n    error\n  };\n}","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/hooks/useYday.js"],"names":["useState","useEffect","axios","isUSA","s","isUK","str","capitalize","charAt","toUpperCase","toLowerCase","slice","parseCountry","country","useYday","url","yesterdayCn","setStats","loading","setLoading","error","setError","fetchData","URL","data","get","active","cases","todayCases","recovered","deaths","e"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAK,GAAGC,CAAC,IAAIA,CAAC,KAAK,KAAN,IAAeA,CAAC,KAAK,KAArB,IAA8BA,CAAC,KAAK,eAAvD;;AACA,MAAMC,IAAI,GAAGC,GAAG,IAAIA,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAK,SAAxB,IAAqCA,GAAG,KAAK,gBAA7C,IAAiEA,GAAG,IAAI,eAA5F;;AACA,MAAMC,UAAU,GAAGD,GAAG,IAAIA,GAAG,CAACE,MAAJ,CAAW,CAAX,EAAcC,WAAd,KAA8BH,GAAG,CAACI,WAAJ,GAAkBC,KAAlB,CAAwB,CAAxB,CAAxD;;AACA,MAAMC,YAAY,GAAGC,OAAO,IAAIV,KAAK,CAACU,OAAD,CAAL,GAAiB,KAAjB,GAAyBR,IAAI,CAACQ,OAAD,CAAJ,GAAgB,IAAhB,GAAuBA,OAAhF;;AAEA,eAAe,SAASC,OAAT,CAAiBC,GAAjB,EAAsBF,OAAtB,EAA+B;AAE5C,QAAM;AAAA,OAACG,WAAD;AAAA,OAAcC;AAAd,MAA0BjB,QAAQ,EAAxC;AACA,QAAM;AAAA,OAACkB,OAAD;AAAA,OAAUC;AAAV,MAAwBnB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACoB,KAAD;AAAA,OAAQC;AAAR,MAAoBrB,QAAQ,CAAC,KAAD,CAAlC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeqB,SAAf,GAA2B;AACzBH,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,MAAAA,QAAQ;AACR,YAAME,GAAG,GAAGR,GAAG,GAAGH,YAAY,CAACC,OAAD,CAAZ,CAAsBH,WAAtB,EAAlB;;AACA,UAAI;AACF,cAAM;AAAEc,UAAAA;AAAF,YAAW,MAAMtB,KAAK,CAACuB,GAAN,CAAUF,GAAG,GAAG,iBAAhB,CAAvB;AACA,cAAMP,WAAW,GAAG;AAClBU,UAAAA,MAAM,EAAEF,IAAI,CAACE,MADK;AAElBC,UAAAA,KAAK,EAAEH,IAAI,CAACG,KAFM;AAGlBC,UAAAA,UAAU,EAAEJ,IAAI,CAACI,UAHC;AAIlBC,UAAAA,SAAS,EAAEL,IAAI,CAACK,SAJE;AAKlBC,UAAAA,MAAM,EAAEN,IAAI,CAACM,MALK;AAMlBjB,UAAAA,OAAO,EAAEW,IAAI,CAACX;AANI,SAApB;AAQAI,QAAAA,QAAQ,CAACD,WAAD,CAAR;AACAG,QAAAA,UAAU,CAAC,KAAD,CAAV;AACA,OAZF,CAYG,OAAMY,CAAN,EAAS;AACVV,QAAAA,QAAQ,CAACU,CAAD,CAAR;AACD;AACF;;AACDT,IAAAA,SAAS;AACV,GAtBQ,EAsBN,CAACT,OAAD,CAtBM,CAAT;AAuBA,SAAO;AACLG,IAAAA,WADK;AACQE,IAAAA,OADR;AACiBE,IAAAA;AADjB,GAAP;AAGD","sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nconst isUSA = s => s === 'usa' || s === 'Usa' || s === 'United States'\nconst isUK = str => str === 'Uk' || str === 'England' || str === 'United Kingdom' || str == 'great britain'\nconst capitalize = str => str.charAt(0).toUpperCase() + str.toLowerCase().slice(1)\nconst parseCountry = country => isUSA(country) ? 'USA' : isUK(country) ? 'UK' : country\n\nexport default function useYday(url, country) {\n\n  const [yesterdayCn, setStats] = useState();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true)\n      setError()\n      const URL = url + parseCountry(country).toLowerCase()\n      try {\n        const { data } = await axios.get(URL + '?yesterday=true')\n        const yesterdayCn = {\n          active: data.active,\n          cases: data.cases,\n          todayCases: data.todayCases,\n          recovered: data.recovered,\n          deaths: data.deaths,\n          country: data.country\n        }\n        setStats(yesterdayCn)\n        setLoading(false)\n       } catch(e) {\n        setError(e)\n      }\n    }\n    fetchData();\n  }, [country])\n  return {\n    yesterdayCn, loading, error\n  }\n}\n"]},"metadata":{},"sourceType":"module"}