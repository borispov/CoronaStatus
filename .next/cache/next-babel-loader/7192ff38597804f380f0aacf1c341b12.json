{"ast":null,"code":"var _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport useStats from '../utils/useStats';\nimport StatBlock from '../components/StatBlock';\nimport useGeolocation from 'react-hook-geolocation';\n\nvar ComponentWithGeolocation = function ComponentWithGeolocation() {\n  var geolocation = useGeolocation();\n  console.log(geolocation);\n  return !geolocation.error ? __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Latitude:          \", geolocation.latitude), __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Longitude:         \", geolocation.longitude), __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Location accuracy: \", geolocation.accuracy), __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Altitude:          \", geolocation.altitude), __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Altitude accuracy: \", geolocation.altitudeAccuracy), __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Heading:           \", geolocation.heading), __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Speed:             \", geolocation.speed), __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Timestamp:         \", geolocation.timestamp)) : __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"No geolocation, sorry.\");\n}; // Seems like it's not UP TO DATE\n// fetch('https://covid19.mathdro.id/api/countries/Italy')\n\n\nvar url = 'https://corona.lmao.ninja/countries';\n\nfunction Stats() {\n  var _useStats = useStats(url),\n      stats = _useStats.stats,\n      error = _useStats.error,\n      loading = _useStats.loading;\n\n  if (!stats) return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Loading...\");\n  var country = stats.country,\n      cases = stats.cases,\n      recovered = stats.recovered,\n      deaths = stats.deaths,\n      todayCases = stats.todayCases,\n      critical = stats.critical;\n  console.log(stats);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Country: \", country), __jsx(StatBlock, {\n    title: \"Infected\",\n    data: cases,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), __jsx(StatBlock, {\n    title: \"Recovered\",\n    data: recovered,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), __jsx(StatBlock, {\n    title: \"Total Deaths\",\n    data: deaths,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), __jsx(StatBlock, {\n    title: \"Critical Cases\",\n    data: critical,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), __jsx(StatBlock, {\n    title: \"New Cases Today\",\n    data: todayCases,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }));\n}\n\nexport default function IndexPage() {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, __jsx(Stats, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), __jsx(ComponentWithGeolocation, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/pages/index.js"],"names":["useStats","StatBlock","useGeolocation","ComponentWithGeolocation","geolocation","console","log","error","latitude","longitude","accuracy","altitude","altitudeAccuracy","heading","speed","timestamp","url","Stats","stats","loading","country","cases","recovered","deaths","todayCases","critical","IndexPage"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;;AAEA,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,GAAM;AACrC,MAAMC,WAAW,GAAGF,cAAc,EAAlC;AAGAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AAEA,SAAO,CAACA,WAAW,CAACG,KAAb,GAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAwBH,WAAW,CAACI,QAApC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAwBJ,WAAW,CAACK,SAApC,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAwBL,WAAW,CAACM,QAApC,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAwBN,WAAW,CAACO,QAApC,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAwBP,WAAW,CAACQ,gBAApC,CALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAwBR,WAAW,CAACS,OAApC,CANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAwBT,WAAW,CAACU,KAApC,CAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAwBV,WAAW,CAACW,SAApC,CARF,CAFG,GAcH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAdJ;AAgBD,CAtBD,C,CAyBA;AACA;;;AACA,IAAMC,GAAG,GAAG,qCAAZ;;AAEA,SAASC,KAAT,GAAiB;AAAA,kBACmBjB,QAAQ,CAACgB,GAAD,CAD3B;AAAA,MACPE,KADO,aACPA,KADO;AAAA,MACAX,KADA,aACAA,KADA;AAAA,MACOY,OADP,aACOA,OADP;;AAGf,MAAI,CAACD,KAAL,EAAY,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAHG,MAMbE,OANa,GAYXF,KAZW,CAMbE,OANa;AAAA,MAObC,KAPa,GAYXH,KAZW,CAObG,KAPa;AAAA,MAQbC,SARa,GAYXJ,KAZW,CAQbI,SARa;AAAA,MASbC,MATa,GAYXL,KAZW,CASbK,MATa;AAAA,MAUbC,UAVa,GAYXN,KAZW,CAUbM,UAVa;AAAA,MAWbC,QAXa,GAYXP,KAZW,CAWbO,QAXa;AAcfpB,EAAAA,OAAO,CAACC,GAAR,CAAYY,KAAZ;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAcE,OAAd,CAFF,EAGE,MAAC,SAAD;AACE,IAAA,KAAK,EAAC,UADR;AAEE,IAAA,IAAI,EAAEC,KAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAOE,MAAC,SAAD;AACE,IAAA,KAAK,EAAC,WADR;AAEE,IAAA,IAAI,EAAEC,SAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAWE,MAAC,SAAD;AACE,IAAA,KAAK,EAAC,cADR;AAEE,IAAA,IAAI,EAAEC,MAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAeE,MAAC,SAAD;AACE,IAAA,KAAK,EAAC,gBADR;AAEE,IAAA,IAAI,EAAEE,QAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,EAmBE,MAAC,SAAD;AACE,IAAA,KAAK,EAAC,iBADR;AAEE,IAAA,IAAI,EAAED,UAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,CADF;AA0BD;;AAED,eAAe,SAASE,SAAT,GAAqB;AAClC,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD","sourcesContent":["import useStats from '../utils/useStats';\nimport StatBlock from '../components/StatBlock';\nimport useGeolocation from 'react-hook-geolocation'\n \nconst ComponentWithGeolocation = () => {\n  const geolocation = useGeolocation()\n\n\n  console.log(geolocation)\n \n  return !geolocation.error\n    ? (\n      <ul>\n        <li>Latitude:          {geolocation.latitude}</li>\n        <li>Longitude:         {geolocation.longitude}</li>\n        <li>Location accuracy: {geolocation.accuracy}</li>\n        <li>Altitude:          {geolocation.altitude}</li>\n        <li>Altitude accuracy: {geolocation.altitudeAccuracy}</li>\n        <li>Heading:           {geolocation.heading}</li>\n        <li>Speed:             {geolocation.speed}</li>\n        <li>Timestamp:         {geolocation.timestamp}</li>\n      </ul>\n    )\n    : (\n      <p>No geolocation, sorry.</p>\n    )\n}\n\n\n// Seems like it's not UP TO DATE\n// fetch('https://covid19.mathdro.id/api/countries/Italy')\nconst url = 'https://corona.lmao.ninja/countries'\n\nfunction Stats() {\n  const { stats, error, loading } = useStats(url);\n\n  if (!stats) return <div>Loading...</div>\n\n  const {\n    country,\n    cases,\n    recovered,\n    deaths,\n    todayCases,\n    critical\n  } = stats\n\n  console.log(stats)\n  return (\n    <div>\n\n      <h1>Country: {country}</h1>\n      <StatBlock \n        title=\"Infected\"\n        data={cases}\n      />\n      <StatBlock \n        title=\"Recovered\"\n        data={recovered}\n      />\n      <StatBlock \n        title=\"Total Deaths\"\n        data={deaths}\n      />\n      <StatBlock \n        title=\"Critical Cases\"\n        data={critical}\n      />\n      <StatBlock \n        title=\"New Cases Today\"\n        data={todayCases}\n      />\n    </div>\n  )\n}\n\nexport default function IndexPage() {\n  return (\n    <div>\n      <Stats />\n      <ComponentWithGeolocation />\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}