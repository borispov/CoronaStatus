{"ast":null,"code":"const firstWhole = (arr, n = 0) => {\n  if (arr[n] > 0) return n;\n  if (arr[n] == undefined) return 0;\n  n++;\n  return firstWhole(arr, n);\n};\n\nconst parseLabel = label => {\n  let d = new Date(label);\n  return d.getDate() + '.' + ('0' + (d.getMonth() + 1)).toString();\n};\n\nconst sortForChart = (obj, theme) => {\n  const zeroNull = c => c === null ? 0 : c;\n\n  const sortedObj = obj.sort((a, b) => new Date(a.date) - new Date(b.date));\n  const initCasesArray = sortedObj.map(o => o.confirmed);\n  const firstNumIndex = firstWhole(initCasesArray);\n  const fObj = sortedObj.slice(firstNumIndex);\n  const cases = fObj.map(o => o.confirmed);\n  const labels = fObj.map(o => parseLabel(o.date));\n  const deaths = fObj.map(o => zeroNull(o.deaths));\n  const label = obj[0].location;\n  const datasets = [{\n    label: 'deaths',\n    data: deaths,\n    backgroundColor: 'rgba(29,82,209,1) 100%)',\n    borderColor: 'rgba(21, 21, 21, 1)',\n    strokeColor: \"rgba(222, 222, 34, 1)\",\n    pointRadius: 1,\n    borderWidth: 4,\n    datalabels: {\n      display: ctx => ctx.dataIndex % 2,\n      align: 'end',\n      anchor: 'end'\n    }\n  }, {\n    label: 'cases',\n    data: cases,\n    backgroundColor: '#2A4561',\n    borderColor: theme && theme.analogous || '#6200ee',\n    strokeColor: \"#ADFF2F\",\n    pointBorderColor: 'rgba(75,10,192,0)',\n    pointBackgroundColor: '#fff',\n    pointHoverBackgroundColor: 'rgba(45, 20, 19, 0)',\n    borderWidth: 5,\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderJoinStyle: 'miter',\n    pointRadius: 1,\n    pointHitRadius: 10\n  }];\n  return {\n    datasets,\n    labels,\n    label\n  };\n};\n\nexport default sortForChart;","map":null,"metadata":{},"sourceType":"module"}