{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport sortForChart from './sortForChart';\nconst baseURL = `http://46.101.156.51:3003/api/v1/alltime/`;\n\nasync function currentCountry() {\n  return await axios.get('https://extreme-ip-lookup.com/json/').then(res => res.data.country).catch(e => 'israel');\n}\n\nasync function useTime(country, url = baseURL) {\n  const {\n    0: timeStats,\n    1: setData\n  } = useState();\n  const {\n    0: countryStats,\n    1: setCountryStats\n  } = useState();\n  const {\n    0: timeLoading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: timeError,\n    1: setError\n  } = useState(false);\n  const {\n    0: geo,\n    1: setGeo\n  } = useState('');\n  useEffect(() => {\n    let geoLocation = currentCountry();\n    setGeo(geoLocation);\n  }, []);\n\n  async function fetchData(cn) {\n    setLoading(true);\n    setError();\n    const URL = cn === 'world' ? baseURL : baseURL + country || geo;\n    const data = await axios.get(URL).then(res => res.data).catch(err => setError(err));\n    const timeStats = sortForChart(data);\n    setData(timeStats);\n    setLoading(false);\n  }\n\n  useEffect(() => {\n    fetchData('world');\n  }, []);\n  useEffect(() => {\n    fetchData(cn);\n  }, [country]);\n  return {\n    countryStats,\n    timeStats,\n    timeLoading,\n    timeError\n  };\n  return {\n    timeStats,\n    timeLoading,\n    timeError\n  };\n}\n\nexport default useTime;","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/utils/useTime.js"],"names":["useState","useEffect","axios","sortForChart","baseURL","currentCountry","get","then","res","data","country","catch","e","useTime","url","timeStats","setData","countryStats","setCountryStats","timeLoading","setLoading","timeError","setError","geo","setGeo","geoLocation","fetchData","cn","URL","err"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,MAAMC,OAAO,GAAI,2CAAjB;;AAEA,eAAeC,cAAf,GAA+B;AAC7B,SAAO,MAAMH,KAAK,CACfI,GADU,CACN,qCADM,EAEVC,IAFU,CAELC,GAAG,IAAIA,GAAG,CAACC,IAAJ,CAASC,OAFX,EAGVC,KAHU,CAGJC,CAAC,IAAI,QAHD,CAAb;AAID;;AAED,eAAeC,OAAf,CAAuBH,OAAvB,EAAgCI,GAAG,GAAGV,OAAtC,EAA+C;AAC7C,QAAM;AAAA,OAACW,SAAD;AAAA,OAAYC;AAAZ,MAAuBhB,QAAQ,EAArC;AACA,QAAM;AAAA,OAACiB,YAAD;AAAA,OAAeC;AAAf,MAAkClB,QAAQ,EAAhD;AACA,QAAM;AAAA,OAACmB,WAAD;AAAA,OAAcC;AAAd,MAA4BpB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAA,OAACqB,SAAD;AAAA,OAAYC;AAAZ,MAAwBtB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACuB,GAAD;AAAA,OAAMC;AAAN,MAAgBxB,QAAQ,CAAC,EAAD,CAA9B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIwB,WAAW,GAAGpB,cAAc,EAAhC;AACAmB,IAAAA,MAAM,CAACC,WAAD,CAAN;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,iBAAeC,SAAf,CAAyBC,EAAzB,EAA6B;AAC3BP,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,QAAQ;AAER,UAAMM,GAAG,GAAGD,EAAE,KAAK,OAAP,GAAiBvB,OAAjB,GAA2BA,OAAO,GAAGM,OAAV,IAAqBa,GAA5D;AACA,UAAMd,IAAI,GAAG,MAAMP,KAAK,CAACI,GAAN,CAAUsB,GAAV,EAChBrB,IADgB,CACXC,GAAG,IAAIA,GAAG,CAACC,IADA,EAEhBE,KAFgB,CAEVkB,GAAG,IAAIP,QAAQ,CAACO,GAAD,CAFL,CAAnB;AAGA,UAAMd,SAAS,GAAGZ,YAAY,CAACM,IAAD,CAA9B;AACAO,IAAAA,OAAO,CAACD,SAAD,CAAP;AACAK,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AAEDnB,EAAAA,SAAS,CAAC,MAAM;AACdyB,IAAAA,SAAS,CAAC,OAAD,CAAT;AACD,GAFQ,EAEN,EAFM,CAAT;AAIAzB,EAAAA,SAAS,CAAC,MAAM;AACdyB,IAAAA,SAAS,CAACC,EAAD,CAAT;AACD,GAFQ,EAEN,CAACjB,OAAD,CAFM,CAAT;AAIA,SAAO;AACLO,IAAAA,YADK;AACSF,IAAAA,SADT;AACoBI,IAAAA,WADpB;AACiCE,IAAAA;AADjC,GAAP;AAIA,SAAO;AACLN,IAAAA,SADK;AACMI,IAAAA,WADN;AACmBE,IAAAA;AADnB,GAAP;AAGD;;AAED,eAAeR,OAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport sortForChart from './sortForChart'\n\nconst baseURL = `http://46.101.156.51:3003/api/v1/alltime/`\n\nasync function currentCountry(){\n  return await axios\n    .get('https://extreme-ip-lookup.com/json/')\n    .then(res => res.data.country)\n    .catch(e => 'israel')\n}\n\nasync function useTime(country, url = baseURL) {\n  const [timeStats, setData] = useState();\n  const [countryStats, setCountryStats] = useState();\n  const [timeLoading, setLoading] = useState(false);\n  const [timeError, setError] = useState(false);\n  const [geo, setGeo] = useState('')\n\n  useEffect(() => {\n    let geoLocation = currentCountry()\n    setGeo(geoLocation)\n  }, [])\n\n  async function fetchData(cn) {\n    setLoading(true)\n    setError()\n\n    const URL = cn === 'world' ? baseURL : baseURL + country || geo\n    const data = await axios.get(URL)\n      .then(res => res.data)\n      .catch(err => setError(err))\n    const timeStats = sortForChart(data);\n    setData(timeStats)\n    setLoading(false)\n  }\n\n  useEffect(() => {\n    fetchData('world')\n  }, [])\n\n  useEffect(() => {\n    fetchData(cn);\n  }, [country])\n\n  return {\n    countryStats, timeStats, timeLoading, timeError\n  }\n\n  return {\n    timeStats, timeLoading, timeError\n  }\n}\n\nexport default useTime;\n"]},"metadata":{},"sourceType":"module"}