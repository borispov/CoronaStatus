{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport sortForChart from './sortForChart';\nvar baseURL = \"http://46.101.156.51:3003/api/v1/alltime/\";\n\nfunction currentCountry() {\n  return _regeneratorRuntime.async(function currentCountry$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios.get('https://extreme-ip-lookup.com/json/').then(function (res) {\n            return res.data.country;\n          })[\"catch\"](function (e) {\n            return 'Israel';\n          }));\n\n        case 2:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction useTime() {\n  var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : baseURL;\n  var country = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'world';\n\n  var _useState = useState(),\n      worldStats = _useState[0],\n      setData = _useState[1];\n\n  var _useState2 = useState(false),\n      timeLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      timeError = _useState3[0],\n      setError = _useState3[1];\n\n  useEffect(function () {\n    function fetchData() {\n      var URL, data, worldStats;\n      return _regeneratorRuntime.async(function fetchData$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setLoading(true);\n              setError();\n              URL = country === 'world' ? baseURL : baseURL + country;\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(axios.get(URL).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return setError(err);\n              }));\n\n            case 5:\n              data = _context2.sent;\n              worldStats = sortForChart(data);\n              setData(worldStats);\n              setLoading(false);\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData();\n  }, [country]);\n  return {\n    worldStats: worldStats,\n    timeLoading: timeLoading,\n    timeError: timeError\n  };\n}\n\nexport default useTime;","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/utils/useTime.js"],"names":["useState","useEffect","axios","sortForChart","baseURL","currentCountry","get","then","res","data","country","e","useTime","url","worldStats","setData","timeLoading","setLoading","timeError","setError","fetchData","URL","err"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,IAAMC,OAAO,8CAAb;;AAEA,SAAeC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACeH,KAAK,CACfI,GADU,CACN,qCADM,EAEVC,IAFU,CAEL,UAAAC,GAAG;AAAA,mBAAIA,GAAG,CAACC,IAAJ,CAASC,OAAb;AAAA,WAFE,WAGJ,UAAAC,CAAC;AAAA,mBAAI,QAAJ;AAAA,WAHG,CADf;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOA,SAASC,OAAT,GAAmD;AAAA,MAAlCC,GAAkC,uEAA5BT,OAA4B;AAAA,MAAnBM,OAAmB,uEAAT,OAAS;;AAAA,kBACnBV,QAAQ,EADW;AAAA,MAC1Cc,UAD0C;AAAA,MAC9BC,OAD8B;;AAAA,mBAEff,QAAQ,CAAC,KAAD,CAFO;AAAA,MAE1CgB,WAF0C;AAAA,MAE7BC,UAF6B;;AAAA,mBAGnBjB,QAAQ,CAAC,KAAD,CAHW;AAAA,MAG1CkB,SAH0C;AAAA,MAG/BC,QAH+B;;AAKjDlB,EAAAA,SAAS,CAAC,YAAM;AACd,aAAemB,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACEH,cAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,cAAAA,QAAQ;AAEFE,cAAAA,GAJR,GAIcX,OAAO,KAAK,OAAZ,GAAsBN,OAAtB,GAAgCA,OAAO,GAACM,OAJtD;AAAA;AAAA,+CAMqBR,KAAK,CAACI,GAAN,CAAUe,GAAV,EAChBd,IADgB,CACX,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAACC,IAAR;AAAA,eADQ,WAEV,UAAAa,GAAG;AAAA,uBAAIH,QAAQ,CAACG,GAAD,CAAZ;AAAA,eAFO,CANrB;;AAAA;AAMQb,cAAAA,IANR;AASQK,cAAAA,UATR,GASqBX,YAAY,CAACM,IAAD,CATjC;AAUEM,cAAAA,OAAO,CAACD,UAAD,CAAP;AACAG,cAAAA,UAAU,CAAC,KAAD,CAAV;;AAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcAG,IAAAA,SAAS;AACV,GAhBQ,EAgBN,CAACV,OAAD,CAhBM,CAAT;AAmBA,SAAO;AACLI,IAAAA,UAAU,EAAVA,UADK;AACOE,IAAAA,WAAW,EAAXA,WADP;AACoBE,IAAAA,SAAS,EAATA;AADpB,GAAP;AAGD;;AAED,eAAeN,OAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport sortForChart from './sortForChart'\n\nconst baseURL = `http://46.101.156.51:3003/api/v1/alltime/`\n\nasync function currentCountry(){\n  return await axios\n    .get('https://extreme-ip-lookup.com/json/')\n    .then(res => res.data.country)\n    .catch(e => 'Israel')\n}\n\nfunction useTime(url = baseURL, country = 'world') {\n  const [worldStats, setData] = useState();\n  const [timeLoading, setLoading] = useState(false);\n  const [timeError, setError] = useState(false);\n\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true)\n      setError()\n\n      const URL = country === 'world' ? baseURL : baseURL+country\n\n      const data = await axios.get(URL)\n        .then(res => res.data)\n        .catch(err => setError(err))\n      const worldStats = sortForChart(data);\n      setData(worldStats)\n      setLoading(false)\n    }\n\n    fetchData();\n  }, [country])\n\n\n  return {\n    worldStats, timeLoading, timeError\n  }\n}\n\nexport default useTime;\n"]},"metadata":{},"sourceType":"module"}