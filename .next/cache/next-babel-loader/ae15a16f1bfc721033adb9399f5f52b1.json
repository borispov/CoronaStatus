{"ast":null,"code":"var _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/components/CoronaApp.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport Input from './Input';\nimport Stats from './Stats';\nimport useTime from '../utils/useTime';\nimport useTodayStats from '../utils/useTodayStats';\nimport useCountries from '../utils/useCountries';\nimport Chart from './Chart';\nimport Container from './Container';\nimport HeaderDescription from './HeaderDescription';\nimport CaseChart from './CaseChart';\nimport styled, { withTheme } from 'styled-components';\nimport Select from 'react-select';\nexport default (function (_ref) {\n  var lang = _ref.lang;\n  console.log(theme);\n\n  var _useState = useState(true),\n      showWorld = _useState[0],\n      setShowWorld = _useState[1];\n\n  var _useState2 = useState(''),\n      country = _useState2[0],\n      setCountry = _useState2[1];\n\n  var _useState3 = useState(''),\n      inputValue = _useState3[0],\n      setInput = _useState3[1];\n\n  var url = 'https://covid19.borisky.me/api/v1/';\n\n  var _useTime = useTime(country),\n      countryStats = _useTime.countryStats;\n\n  var _useTodayStats = useTodayStats(url, country),\n      todayStats = _useTodayStats.todayStats;\n\n  var worldToday = useTodayStats(url, 'world').todayStats;\n\n  var _useCountries = useCountries(),\n      countries = _useCountries.countries;\n\n  var worldTodaySorted = worldToday && {\n    cases: worldToday.cases,\n    todayCases: worldToday.todayCases,\n    recovered: worldToday.recovered,\n    deaths: worldToday.deaths\n  } || '';\n  var todayStatsSorted = todayStats && {\n    cases: todayStats.cases,\n    todayCases: todayStats.todayCases,\n    recovered: todayStats.recovered,\n    deaths: todayStats.deaths\n  } || '';\n\n  var handleChange = function handleChange(selected) {\n    setCountry(selected.value);\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    setCountry(inputValue);\n  };\n\n  var selectOptions = countries && countries.map(function (a) {\n    return {\n      value: a,\n      label: a\n    };\n  });\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, __jsx(HeaderDescription, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, countryStats && __jsx(Chart, {\n    isHeb: lang === 'heb',\n    type: \"line\",\n    labels: countryStats.labels,\n    data: countryStats.datasets.filter(function (a) {\n      return a.label === 'cases';\n    }),\n    label: country || 'israel',\n    fill: false,\n    stops: 3,\n    showLegend: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), __jsx(Stats, {\n    cn: country || todayStats && todayStats.country,\n    todayStats: todayStatsSorted,\n    isHeb: lang === 'heb',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), __jsx(\"form\", {\n    style: {\n      maxWidth: '520px',\n      margin: '54px auto'\n    },\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    style: {\n      fontSize: '16px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, lang === 'eng' ? \"Data For Country:\" : \"\\u05E0\\u05EA\\u05D5\\u05E0\\u05D9\\u05DD \\u05DC\\u05E4\\u05D9 \\u05DE\\u05D3\\u05D9\\u05E0\\u05D4\"), __jsx(Select, {\n    className: 'Select',\n    options: selectOptions,\n    value: country,\n    onChange: handleChange,\n    placeholder: country || 'Get Country Stats',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  })), __jsx(Stats, {\n    cn: 'World',\n    todayWorld: worldTodaySorted,\n    isHeb: lang === 'heb',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), __jsx(CaseChart, {\n    showWorld: showWorld,\n    country: country,\n    isHeb: lang === 'heb',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  })));\n});","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/components/CoronaApp.js"],"names":["useState","useEffect","Input","Stats","useTime","useTodayStats","useCountries","Chart","Container","HeaderDescription","CaseChart","styled","withTheme","Select","lang","console","log","theme","showWorld","setShowWorld","country","setCountry","inputValue","setInput","url","countryStats","todayStats","worldToday","countries","worldTodaySorted","cases","todayCases","recovered","deaths","todayStatsSorted","handleChange","selected","value","handleSubmit","e","preventDefault","selectOptions","map","a","label","labels","datasets","filter","maxWidth","margin","fontSize"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport Input from './Input'\nimport Stats from './Stats'\nimport useTime from '../utils/useTime'\nimport useTodayStats from '../utils/useTodayStats'\nimport useCountries from '../utils/useCountries'\nimport Chart from './Chart'\nimport Container from './Container'\nimport HeaderDescription from './HeaderDescription'\nimport CaseChart from './CaseChart'\nimport styled, { withTheme } from 'styled-components'\nimport Select from 'react-select'\n\n\nexport default ({ lang}) => {\n  console.log(theme);\n  const [showWorld, setShowWorld] = useState(true)\n  const [country, setCountry] = useState('')\n  const [inputValue, setInput] = useState('')\n\n  const url = 'https://covid19.borisky.me/api/v1/'\n\n  const { countryStats } = useTime(country)\n  const { todayStats } = useTodayStats(url, country)\n  const worldToday = useTodayStats(url, 'world').todayStats\n\n  const { countries } = useCountries()\n\n  const worldTodaySorted = worldToday &&\n    {\n      cases: worldToday.cases,\n      todayCases: worldToday.todayCases,\n      recovered: worldToday.recovered,\n      deaths: worldToday.deaths\n    } || ''\n\n  const todayStatsSorted = todayStats && \n    {\n      cases: todayStats.cases,\n      todayCases: todayStats.todayCases,\n      recovered: todayStats.recovered,\n      deaths: todayStats.deaths\n    } || ''\n\n  const handleChange = selected => {\n    setCountry(selected.value)\n  }\n  const handleSubmit = e => {\n    e.preventDefault();\n    setCountry(inputValue)\n  }\n\n  const selectOptions = countries && countries.map(a => ({ value: a, label: a }))\n\n  return (\n    <div>\n      <HeaderDescription />\n\n      <Container>\n\n      {\n        countryStats &&\n          (\n              <Chart\n                isHeb={lang === 'heb'}\n                type='line'\n                labels={countryStats.labels}\n                data={countryStats.datasets.filter(a => a.label === 'cases')}\n                label={country || 'israel'}\n                fill={false}\n                stops={3}\n                showLegend={false}\n              />\n          )\n      }\n      <Stats\n        cn={country || todayStats && todayStats.country}\n        todayStats={todayStatsSorted}\n        isHeb={lang === 'heb'}\n      />\n\n      <form \n        style={{ maxWidth: '520px', margin: '54px auto'}}\n        onSubmit={handleSubmit}>\n        <label style={{fontSize: '16px'}}>\n          {\n            lang === 'eng'\n            ? `Data For Country:`\n            : `נתונים לפי מדינה`\n          }\n        </label>\n\n        <Select\n          className={'Select'}\n          options={selectOptions}\n          value={country}\n          onChange={handleChange}\n          placeholder={country || 'Get Country Stats'}\n        />\n      </form>\n\n      <Stats\n        cn={'World'}\n        todayWorld={worldTodaySorted}\n        isHeb={lang==='heb'}\n      />\n\n      <CaseChart\n        showWorld={showWorld} \n        country={country}\n        isHeb={lang === 'heb'}\n      />\n\n    </Container>\n\n    </div>\n  )\n  \n\n}\n"]},"metadata":{},"sourceType":"module"}