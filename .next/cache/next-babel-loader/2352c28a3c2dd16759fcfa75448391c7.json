{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  color: \", \";\\n  background-color: \", \";\\n  border-radius: 50%;\\n  position: absolute;\\n  top: 5%;\\n  left: 1%;\\n  padding: 6px 2px;\\n  outline: none;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport CoronaApp from '../components/CoronaApp';\nimport styled, { ThemeProvider } from 'styled-components';\nimport GlobalStyle from './Global';\nimport { useState } from 'react';\nimport { themes } from '../utils/themes';\n\nvar lightTheme = function lightTheme() {\n  return _objectSpread({}, themes['common'], {}, themes['light']);\n};\n\nvar darkTheme = function darkTheme() {\n  return _objectSpread({}, themes['common'], {}, themes['dark']);\n};\n\nvar Btn = styled.button(_templateObject(), function (props) {\n  return props.theme.bgColor;\n}, function (props) {\n  return props.theme.color;\n});\nexport default function IndexPage() {\n  var _useState = useState(lightTheme()),\n      theme = _useState[0],\n      setTheme = _useState[1];\n\n  var setDarkTheme = function setDarkTheme() {\n    return setTheme(darkTheme());\n  };\n\n  var setLightTheme = function setLightTheme() {\n    return setTheme(lightTheme());\n  };\n\n  var isLight = theme.type === 'light';\n  return __jsx(React.Fragment, null, __jsx(ThemeProvider, {\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(GlobalStyle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), __jsx(CoronaApp, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), __jsx(Btn, {\n    onClick: !isLight ? setLightTheme : setDarkTheme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, !isLight ? 'Light' : 'Dark')));\n}","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/pages/index.js"],"names":["CoronaApp","styled","ThemeProvider","GlobalStyle","useState","themes","lightTheme","darkTheme","Btn","button","props","theme","bgColor","color","IndexPage","setTheme","setDarkTheme","setLightTheme","isLight","type"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,IAAiBC,aAAjB,QAAsC,mBAAtC;AACA,OAAOC,WAAP,MAAwB,UAAxB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,iBAAvB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,2BACdD,MAAM,CAAC,QAAD,CADQ,MAEdA,MAAM,CAAC,OAAD,CAFQ;AAAA,CAAnB;;AAKA,IAAME,SAAS,GAAG,SAAZA,SAAY;AAAA,2BACbF,MAAM,CAAC,QAAD,CADO,MAEbA,MAAM,CAAC,MAAD,CAFO;AAAA,CAAlB;;AAKA,IAAMG,GAAG,GAAGP,MAAM,CAACQ,MAAV,oBACE,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYC,OAAhB;AAAA,CADP,EAEa,UAAAF,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYE,KAAhB;AAAA,CAFlB,CAAT;AAWA,eAAe,SAASC,SAAT,GAAqB;AAAA,kBACRV,QAAQ,CAACE,UAAU,EAAX,CADA;AAAA,MAC3BK,KAD2B;AAAA,MACpBI,QADoB;;AAElC,MAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,WAAMD,QAAQ,CAACR,SAAS,EAAV,CAAd;AAAA,GAArB;;AACA,MAAMU,aAAa,GAAG,SAAhBA,aAAgB;AAAA,WAAMF,QAAQ,CAACT,UAAU,EAAX,CAAd;AAAA,GAAtB;;AAEA,MAAMY,OAAO,GAAGP,KAAK,CAACQ,IAAN,KAAe,OAA/B;AAEA,SACE,4BACE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAER,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,MAAC,GAAD;AAAK,IAAA,OAAO,EAAE,CAACO,OAAD,GAAWD,aAAX,GAA2BD,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACE,OAAD,GAAW,OAAX,GAAqB,MADxB,CAHF,CADF,CADF;AAWD","sourcesContent":["import CoronaApp from '../components/CoronaApp'\nimport styled, { ThemeProvider } from 'styled-components'\nimport GlobalStyle from './Global'\nimport { useState } from 'react'\nimport { themes } from '../utils/themes'\n\nconst lightTheme = () => ({\n  ...themes['common'],\n  ...themes['light'],\n})\n\nconst darkTheme = () => ({\n  ...themes['common'],\n  ...themes['dark'],\n})\n\nconst Btn = styled.button`\n  color: ${props => props.theme.bgColor};\n  background-color: ${props => props.theme.color};\n  border-radius: 50%;\n  position: absolute;\n  top: 5%;\n  left: 1%;\n  padding: 6px 2px;\n  outline: none;\n`\n\nexport default function IndexPage() {\n  const [theme, setTheme] = useState(lightTheme())\n  const setDarkTheme = () => setTheme(darkTheme())\n  const setLightTheme = () => setTheme(lightTheme())\n\n  const isLight = theme.type === 'light'\n\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <GlobalStyle />\n        <CoronaApp />\n        <Btn onClick={!isLight ? setLightTheme : setDarkTheme}>\n          {!isLight ? 'Light' : 'Dark'}\n        </Btn>\n      </ThemeProvider>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}