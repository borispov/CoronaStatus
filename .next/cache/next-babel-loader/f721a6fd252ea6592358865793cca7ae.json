{"ast":null,"code":"var _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/components/QuickStats/QuickStats.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Container } from '../S';\nimport { Column, InRow, Row, Percentage, Header, Number } from './QuickStats.styled'; // utils\n\nimport { F } from './QuickStats.utils'; // locale hook\n\nimport useTranslation from '../../hooks/useTranslation.js';\nconst labels = {\n  cases: {\n    heb: 'מאומתים',\n    eng: 'Confirmed'\n  },\n  todayCases: {\n    heb: 'מקרים חדשים',\n    eng: 'New Cases'\n  },\n  deaths: {\n    heb: 'נפטרו',\n    eng: 'Deaths'\n  },\n  recovered: {\n    heb: 'החלימו',\n    eng: 'Recovered'\n  },\n  active: {\n    heb: 'פעילים',\n    eng: 'Active'\n  },\n  affectedCountries: {\n    heb: 'מדינות נגועות',\n    eng: 'Infected Countries'\n  }\n};\n\nconst engLbl = k => labels[k]['eng'];\n\nconst hebLbl = k => labels[k]['heb'];\n\nconst putLabel = (heb, k) => heb && hebLbl(k) || engLbl(k);\n\nexport default (({\n  S,\n  country,\n  isHeb,\n  yday,\n  comparison = true\n}) => {\n  const {\n    t\n  } = useTranslation();\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(Row, {\n    world: country.toLowerCase() === 'world',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, Object.keys(S).map((k, i) => {\n    return __jsx(Column, {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, __jsx(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \" \", t(k, labels)), __jsx(InRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, __jsx(Number, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, S[k] && F.formatNumber(S[k]), comparison && yday && country !== 'world' && country !== 'World' && __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"(\", F.formatNumber(yday[k]), \")\")), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), comparison && yday && __jsx(Percentage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, F.calcDiff(S[k])(yday[k]) < 0 && \"\\u2B07\" || '\\u2B06'), \"%\", Math.abs(F.calcDiff(S[k])(yday[k])))));\n  })));\n});","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/components/QuickStats/QuickStats.js"],"names":["Container","Column","InRow","Row","Percentage","Header","Number","F","useTranslation","labels","cases","heb","eng","todayCases","deaths","recovered","active","affectedCountries","engLbl","k","hebLbl","putLabel","S","country","isHeb","yday","comparison","t","toLowerCase","Object","keys","map","i","formatNumber","calcDiff","Math","abs"],"mappings":"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","sourcesContent":["import { Container } from '../S'\nimport { Column, InRow, Row, Percentage, Header, Number } from './QuickStats.styled'\n\n\n// utils\nimport { F } from './QuickStats.utils'\n// locale hook\nimport useTranslation from '../../hooks/useTranslation.js'\n\nconst labels = {\n  cases: { heb: 'מאומתים', eng: 'Confirmed' },\n  todayCases: { heb: 'מקרים חדשים', eng: 'New Cases'},\n  deaths: { heb: 'נפטרו', eng: 'Deaths' },\n  recovered: { heb: 'החלימו', eng: 'Recovered' },\n  active: { heb: 'פעילים', eng: 'Active' },\n  affectedCountries: { heb: 'מדינות נגועות', eng: 'Infected Countries' }\n}\n\nconst engLbl = k => labels[k]['eng']\nconst hebLbl = k => labels[k]['heb']\nconst putLabel = (heb, k) => heb && hebLbl(k) || engLbl(k)\n\nexport default ({ S, country, isHeb, yday, comparison=true}) => {\n\n  const { t } = useTranslation()\n\n  return (\n    <Container>\n      <Row world={country.toLowerCase() === 'world'}>\n\n    {\n      Object.keys(S).map((k,i) => {\n        return (\n          <Column key={i}>\n            <Header> { t(k, labels) }</Header>\n            <InRow>\n              <Number>\n                {\n                  S[k] && F.formatNumber(S[k])\n                }\n                {\n                  comparison  \n                    && yday \n                    && country !== 'world' \n                    && country !== 'World' \n                    && <span>\n                        ({F.formatNumber(yday[k])})\n                       </span>\n                }\n              </Number>\n              <br />\n              {\n                comparison && yday && <Percentage>\n                <span>{ F.calcDiff(S[k])(yday[k]) < 0 && \"\\u2B07\" || '\\u2B06' }</span>\n                %{ Math.abs(F.calcDiff(S[k])(yday[k]))} \n                </Percentage>\n              }\n            </InRow>\n          </Column>\n        )\n      })\n    }\n\n\n      </Row>\n    </Container>\n  )\n\n}\n"]},"metadata":{},"sourceType":"module"}