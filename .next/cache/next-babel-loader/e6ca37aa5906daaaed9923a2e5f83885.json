{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nvar capitalize = function capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.toLowerCase().slice(1);\n};\n\nvar parseCn = function parseCn(str) {\n  return str === 'usa' || str === 'Usa' ? 'USA' : str === 'Uk' || str === 'England' || str === 'United Kingdom' || str == 'great britain' ? 'UK' : capitalize(str);\n};\n\nfunction getCountry(list) {\n  return function (queryCountry) {\n    return list.reduce(function (a, c) {\n      return c.country === queryCountry ? c : a;\n    }, {});\n  };\n}\n\nfunction currentCountry() {\n  return _regeneratorRuntime.async(function currentCountry$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios.get('https://extreme-ip-lookup.com/json/').then(function (res) {\n            return res.data.country;\n          })[\"catch\"](function (e) {\n            return 'Israel';\n          }));\n\n        case 2:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction useStats(url, country) {\n  var _useState = useState(),\n      stats = _useState[0],\n      setStats = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  useEffect(function () {\n    function fetchData() {\n      var searchCountry, parsedCountry, data;\n      return _regeneratorRuntime.async(function fetchData$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log('fetching data');\n              setLoading(true);\n              setError();\n              _context2.t0 = country;\n\n              if (_context2.t0) {\n                _context2.next = 8;\n                break;\n              }\n\n              _context2.next = 7;\n              return _regeneratorRuntime.awrap(currentCountry());\n\n            case 7:\n              _context2.t0 = _context2.sent;\n\n            case 8:\n              searchCountry = _context2.t0;\n              parsedCountry = parseCn(searchCountry);\n              _context2.next = 12;\n              return _regeneratorRuntime.awrap(fetch(url).then(function (res) {\n                return res.json();\n              }).then(function (d) {\n                return getCountry(d)(parsedCountry);\n              })[\"catch\"](function (err) {\n                return setError(err);\n              }));\n\n            case 12:\n              data = _context2.sent;\n              setStats(data);\n              setLoading(false);\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData();\n  }, [country]);\n  return {\n    stats: stats,\n    loading: loading,\n    error: error\n  };\n}\n\nexport default useStats;","map":null,"metadata":{},"sourceType":"module"}