{"ast":null,"code":"var _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/components/CoronaApp.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport { withTheme } from 'styled-components';\nimport Select from 'react-select';\nimport useTime from '../utils/useTime';\nimport useTodayStats from '../utils/useTodayStats';\nimport useCountries from '../utils/useCountries';\nimport useYday from '../utils/useYday';\nimport { Container } from './S';\nimport Stats from './Stats';\nimport Chart from './Chart';\nimport HeaderDescription from './HeaderDescription';\nimport CaseChart from './CaseChart';\nimport countriesHebArray from '../assets/cns.js';\n\nconst calcDiff = current => prev => current !== 0 ? (current - prev) / 100 * 100 : 0;\n\nconst CoronaApp = ({\n  isHeb,\n  theme,\n  userLocation,\n  yesterdayC,\n  yesterdayGlobal,\n  worldTime\n}) => {\n  console.log(userLocation);\n  const {\n    0: showWorld,\n    1: setShowWorld\n  } = useState(true);\n  const {\n    0: country,\n    1: setCountry\n  } = useState(userLocation);\n  const {\n    0: inputValue,\n    1: setInput\n  } = useState('');\n  const url = 'https://nCorona.live/api/v1/';\n  const url2 = 'https://corona.lmao.ninja/countries/';\n  const worldUrl = 'https://corona.lmao.ninja/all';\n  const v2 = 'https://corona.lmao.ninja/v2/countries/';\n  const {\n    countryStats\n  } = useTime(country, theme);\n  const {\n    todayStats\n  } = useTodayStats(url, country);\n  const worldToday = useTodayStats(url, 'world').todayStats;\n  const {\n    yesterdayCn\n  } = useYday(v2, country);\n  const {\n    countries\n  } = useCountries();\n  const worldTodaySorted = worldToday && {\n    cases: worldToday.cases,\n    active: worldToday.active,\n    recovered: worldToday.recovered,\n    deaths: worldToday.deaths,\n    todayCases: worldToday.todayCases,\n    affectedCountries: yesterdayGlobal.affectedCountries\n  } || '';\n  const yesterdayStatsSorted = yesterdayCn && {\n    cases: yesterdayCn.cases,\n    todayCases: yesterdayCn.todayCases,\n    recovered: yesterdayCn.recovered,\n    deaths: yesterdayCn.deaths\n  } || '';\n  const yesterdayGlobalSorted = yesterdayGlobal && {\n    cases: yesterdayGlobal.cases,\n    active: yesterdayGlobal.active,\n    deaths: yesterdayGlobal.deaths,\n    todayCases: yesterdayGlobal.todayCases,\n    recovered: yesterdayGlobal.recovered,\n    affectedCountries: yesterdayGlobal.affectedCountries\n  } || '';\n  const todayStatsSorted = todayStats && {\n    cases: todayStats.cases,\n    todayCases: todayStats.todayCases,\n    recovered: todayStats.recovered,\n    deaths: todayStats.deaths\n  } || '';\n\n  const handleChange = selected => {\n    console.log(selected); // setCountry(selected.value)\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setCountry(inputValue);\n  };\n\n  const selectOptions = countries && countries.map(a => ({\n    value: a,\n    label: a\n  })); // const selectOptions = !countries ? { value: 'null', label: 'Loading List...' } : !isHeb\n  //   ? countries.map(a => ({ value: a, label: a }))\n  //   : countries\n  //       .map((country, idx) => ({\n  //           value: country,\n  //           label: countriesHebArray[idx]\n  //         }))\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, __jsx(\"form\", {\n    style: {\n      maxWidth: '520px',\n      margin: '54px auto 12px',\n      textAlign: 'center'\n    },\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    style: {\n      fontSize: '16px',\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, isHeb ? `נתונים לפי מדינה` : `Data For Country:`), __jsx(Select, {\n    className: 'Select',\n    options: selectOptions,\n    value: country === 'Israel' && isHeb ? 'ישראל' : country,\n    onChange: handleChange,\n    placeholder: country || 'ישראל',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  })), __jsx(Stats, {\n    cn: country || todayStats && todayStats.country,\n    todayStats: todayStatsSorted,\n    yesteryday: yesterdayStatsSorted,\n    isHeb: isHeb,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), countryStats && __jsx(Chart, {\n    isHeb: isHeb,\n    type: \"line\",\n    labels: countryStats.labels // data={countryStats.datasets.filter(a => a.label === 'cases')}\n    ,\n    data: countryStats.datasets,\n    label: country || 'israel',\n    fill: false,\n    stops: 3,\n    showLegend: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }), __jsx(Stats, {\n    cn: 'World',\n    todayWorld: worldTodaySorted,\n    yesteryday: yesterdayGlobalSorted,\n    isHeb: isHeb,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }), __jsx(HeaderDescription, {\n    txt: \"* \\u05D2\\u05E8\\u05E4\\u05D9\\u05DD \\u05D4\\u05DE\\u05E6\\u05D9\\u05D2\\u05D9\\u05DD \\u05D0\\u05EA \\u05E9\\u05D9\\u05E2\\u05D5\\u05E8 \\u05D4\\u05E6\\u05DE\\u05D9\\u05D7\\u05D4 \\u05E9\\u05DC \\u05E0\\u05D2\\u05D9\\u05E3 \\u05D4\\u05E7\\u05D5\\u05E8\\u05D5\\u05E0\\u05D4, \\u05D0\\u05D9\\u05E0\\u05DD \\u05DE\\u05EA\\u05E2\\u05D3\\u05DB\\u05E0\\u05D9\\u05DD \\u05D1\\u05D6\\u05DE\\u05DF \\u05D0\\u05DE\\u05EA \\u05D5\\u05DC\\u05DB\\u05DF \\u05D0\\u05D9\\u05E0\\u05DD \\u05DE\\u05E9\\u05E7\\u05E4\\u05D9\\u05DD \\u05D0\\u05EA \\u05D4\\u05D9\\u05D5\\u05DD \\u05D4\\u05E0\\u05D5\\u05DB\\u05D7\\u05D9. \\u05D1\\u05D3\\u05E8\\u05DA-\\u05DB\\u05DC\\u05DC \\u05DE\\u05EA\\u05E7\\u05D9\\u05D9\\u05DD \\u05E4\\u05E2\\u05E8 \\u05E9\\u05DC \\u05D9\\u05D5\\u05DD, \\u05DC\\u05DB\\u05DC \\u05D4\\u05D9\\u05D5\\u05EA\\u05E8 \\u05E9\\u05DC\\u05D5\\u05E9\\u05D4 \\u05D9\\u05DE\\u05D9\\u05DD. \\u05D4\\u05E0\\u05EA\\u05D5\\u05E0\\u05D9\\u05DD \\u05D4\\u05DE\\u05D5\\u05E6\\u05D2\\u05D9\\u05DD \\u05DE\\u05D7\\u05D5\\u05E5 \\u05DC\\u05D2\\u05E8\\u05E4\\u05D9\\u05DD \\u05DE\\u05E9\\u05E7\\u05E4\\u05D9\\u05DD \\u05D0\\u05EA \\u05D4\\u05D6\\u05DE\\u05DF \\u05D4\\u05E0\\u05EA\\u05D5\\u05DF \\u05D1\\u05E8\\u05D2\\u05E2 \\u05D4\\u05E0\\u05D5\\u05DB\\u05D7\\u05D9 \\u05D5\\u05DE\\u05EA\\u05E2\\u05D3\\u05DB\\u05E0\\u05D9\\u05DD \\u05D1\\u05E2\\u05E8\\u05DA \\u05D0\\u05D7\\u05EA \\u05DC\\u05D7\\u05E6\\u05D9 \\u05E9\\u05E2\\u05D4.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }), __jsx(Chart, {\n    isHeb: isHeb,\n    type: \"line\",\n    labels: worldTime.labels,\n    data: worldTime.datasets,\n    label: isHeb && 'עולם' || 'World',\n    fill: false,\n    stops: 3,\n    showLegend: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  })));\n};\n\nexport default withTheme(CoronaApp);","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/components/CoronaApp.js"],"names":["useState","withTheme","Select","useTime","useTodayStats","useCountries","useYday","Container","Stats","Chart","HeaderDescription","CaseChart","countriesHebArray","calcDiff","current","prev","CoronaApp","isHeb","theme","userLocation","yesterdayC","yesterdayGlobal","worldTime","console","log","showWorld","setShowWorld","country","setCountry","inputValue","setInput","url","url2","worldUrl","v2","countryStats","todayStats","worldToday","yesterdayCn","countries","worldTodaySorted","cases","active","recovered","deaths","todayCases","affectedCountries","yesterdayStatsSorted","yesterdayGlobalSorted","todayStatsSorted","handleChange","selected","handleSubmit","e","preventDefault","selectOptions","map","a","value","label","maxWidth","margin","textAlign","fontSize","fontWeight","labels","datasets"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { withTheme } from 'styled-components'\nimport Select from 'react-select'\n\nimport useTime from '../utils/useTime'\nimport useTodayStats from '../utils/useTodayStats'\nimport useCountries from '../utils/useCountries'\nimport useYday from '../utils/useYday'\n\nimport { Container } from './S'\nimport Stats from './Stats'\nimport Chart from './Chart'\nimport HeaderDescription from './HeaderDescription'\nimport CaseChart from './CaseChart'\n\nimport countriesHebArray from '../assets/cns.js'\n\nconst calcDiff = current => prev => current !== 0 ? ((current - prev) / 100) * 100 : 0\n\nconst CoronaApp = ({ isHeb, theme, userLocation, yesterdayC, yesterdayGlobal, worldTime }) => {\n\n  console.log(userLocation);\n\n  const [showWorld, setShowWorld] = useState(true)\n  const [country, setCountry] = useState(userLocation)\n  const [inputValue, setInput] = useState('')\n\n  const url = 'https://nCorona.live/api/v1/'\n  const url2 = 'https://corona.lmao.ninja/countries/'\n  const worldUrl = 'https://corona.lmao.ninja/all'\n  const v2 = 'https://corona.lmao.ninja/v2/countries/'\n  const { countryStats } = useTime(country, theme)\n  const { todayStats } = useTodayStats(url, country)\n  const worldToday = useTodayStats(url, 'world').todayStats\n  const { yesterdayCn } = useYday(v2, country)\n\n  const { countries } = useCountries()\n\n\n  const worldTodaySorted = worldToday &&\n    {\n      cases: worldToday.cases,\n      active: worldToday.active,\n      recovered: worldToday.recovered,\n      deaths: worldToday.deaths,\n      todayCases: worldToday.todayCases,\n      affectedCountries: yesterdayGlobal.affectedCountries\n    } || ''\n\n  const yesterdayStatsSorted = yesterdayCn && {\n    cases: yesterdayCn.cases,\n    todayCases: yesterdayCn.todayCases,\n    recovered: yesterdayCn.recovered,\n    deaths: yesterdayCn.deaths,\n  } || ''\n\n  const yesterdayGlobalSorted = yesterdayGlobal && {\n    cases: yesterdayGlobal.cases,\n    active: yesterdayGlobal.active,\n    deaths: yesterdayGlobal.deaths,\n    todayCases: yesterdayGlobal.todayCases,\n    recovered: yesterdayGlobal.recovered,\n    affectedCountries: yesterdayGlobal.affectedCountries\n  } || ''\n\n  const todayStatsSorted = todayStats && \n    {\n      cases: todayStats.cases,\n      todayCases: todayStats.todayCases,\n      recovered: todayStats.recovered,\n      deaths: todayStats.deaths,\n    } || ''\n\n  const handleChange = selected => {\n    console.log(selected);\n    // setCountry(selected.value)\n  }\n  const handleSubmit = e => {\n    e.preventDefault();\n    setCountry(inputValue)\n  }\n\n  const selectOptions = countries && countries.map(a => ({ value: a, label: a }))\n\n  // const selectOptions = !countries ? { value: 'null', label: 'Loading List...' } : !isHeb\n  //   ? countries.map(a => ({ value: a, label: a }))\n  //   : countries\n  //       .map((country, idx) => ({\n  //           value: country,\n  //           label: countriesHebArray[idx]\n  //         }))\n\n  return (\n    <div>\n\n      <Container>\n\n      <form \n        style={{ maxWidth: '520px', margin: '54px auto 12px', textAlign: 'center'}}\n        onSubmit={handleSubmit}>\n        <label style={{fontSize: '16px', fontWeight: 'bold'}}>\n          { isHeb ? `נתונים לפי מדינה` : `Data For Country:` }\n        </label>\n\n\n        <Select\n          className={'Select'}\n          options={selectOptions}\n          value={country === 'Israel' && isHeb ? 'ישראל' : country}\n          onChange={handleChange}\n          placeholder={country || 'ישראל'}\n        />\n      </form>\n\n    <Stats\n      cn={country || todayStats && todayStats.country}\n      todayStats={todayStatsSorted}\n      yesteryday={yesterdayStatsSorted}\n      isHeb={isHeb}\n    />\n\n    {/*\n      <iframe \n        style={{  width: \"100%\", height:\"420px\" }}\n        src=\"https://coronavirus.app/map?embed=true\" \n        frameborder=\"0\" \n        allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \n      />\n    */}\n      {\n        countryStats &&\n          (\n              <Chart\n                isHeb={isHeb}\n                type='line'\n                labels={countryStats.labels}\n                // data={countryStats.datasets.filter(a => a.label === 'cases')}\n                data={countryStats.datasets}\n                label={country || 'israel'}\n                fill={false}\n                stops={3}\n                showLegend={false}\n              />\n          )\n      }\n\n      <Stats\n        cn={'World'}\n        todayWorld={worldTodaySorted}\n        yesteryday={yesterdayGlobalSorted}\n        isHeb={isHeb}\n      />\n\n      <HeaderDescription \n        txt='* גרפים המציגים את שיעור הצמיחה של נגיף הקורונה,\n        אינם מתעדכנים בזמן אמת ולכן אינם משקפים את היום הנוכחי. בדרך-כלל מתקיים פער של יום,\n        לכל היותר שלושה ימים. הנתונים המוצגים מחוץ לגרפים משקפים את הזמן הנתון ברגע הנוכחי ומתעדכנים בערך אחת לחצי שעה.'\n      />\n\n    <Chart\n      isHeb={isHeb}\n      type='line'\n      labels={worldTime.labels}\n      data={worldTime.datasets}\n      label={isHeb && 'עולם' || 'World'}\n      fill={false}\n      stops={3}\n      showLegend={true}\n    />\n\n    </Container>\n\n    </div>\n  )\n}\n\nexport default withTheme(CoronaApp)\n"]},"metadata":{},"sourceType":"module"}