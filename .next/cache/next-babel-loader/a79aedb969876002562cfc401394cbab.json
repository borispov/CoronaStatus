{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react'; // Seems like it's not UP TO DATE\n// fetch('https://covid19.mathdro.id/api/countries/Italy')\n\nfunction getCountry(list) {\n  return function (queryCountry) {\n    return list.reduce(function (a, c) {\n      return c.country === queryCountry ? c : a;\n    }, {});\n  };\n}\n\nfunction useStats() {\n  var _useState = useState(),\n      stats = _useState[0],\n      setStats = _useState[1];\n\n  useEffect(function () {\n    function fetchData() {\n      var data;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log('fetching data...');\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch('https://corona.lmao.ninja/countries').then(function (res) {\n                return res.json();\n              }).then(function (d) {\n                return getCountry(d)(\"Israel\");\n              }));\n\n            case 3:\n              data = _context.sent;\n              setStats(data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData();\n  }, []);\n  return stats;\n}\n\nfunction Stats() {\n  var stats = useStats();\n  if (!stats) return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Loading...\");\n  var confirmed = stats.confirmed,\n      recovered = stats.recovered,\n      deaths = stats.deaths,\n      todayCases = stats.todayCases,\n      critical = stats.critical;\n  console.log(stats);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(StatBlock, {\n    title: \"Infected\",\n    data: confirmed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), __jsx(StatBlock, {\n    title: \"Recovered\",\n    data: recovered,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), __jsx(StatBlock, {\n    title: \"Total Deaths\",\n    data: deaths,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), __jsx(StatBlock, {\n    title: \"Critical Cases\",\n    data: critical,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), __jsx(StatBlock, {\n    title: \"New Cases Today\",\n    data: todayCases,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }));\n}\n\nexport default function IndexPage() {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, __jsx(Stats, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/pages/index.js"],"names":["useState","useEffect","getCountry","list","queryCountry","reduce","a","c","country","useStats","stats","setStats","fetchData","console","log","fetch","then","res","json","d","data","Stats","confirmed","recovered","deaths","todayCases","critical","IndexPage"],"mappings":";;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CAEA;AACA;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAAyB;AACvB,SAAO,UAASC,YAAT,EAAuB;AAC5B,WAAOD,IAAI,CAACE,MAAL,CAAY,UAACC,CAAD,EAAGC,CAAH;AAAA,aAASA,CAAC,CAACC,OAAF,KAAcJ,YAAd,GAA6BG,CAA7B,GAAiCD,CAA1C;AAAA,KAAZ,EAAyD,EAAzD,CAAP;AACD,GAFD;AAGD;;AAED,SAASG,QAAT,GAAoB;AAAA,kBACQT,QAAQ,EADhB;AAAA,MACXU,KADW;AAAA,MACJC,QADI;;AAElBV,EAAAA,SAAS,CAAC,YAAM;AACd,aAAeW,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACEC,cAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AADF;AAAA,+CAGIC,KAAK,CAAC,qCAAD,CAAL,CACCC,IADD,CACM,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,eADT,EAECF,IAFD,CAEM,UAAAG,CAAC;AAAA,uBAAIjB,UAAU,CAACiB,CAAD,CAAV,CAAc,QAAd,CAAJ;AAAA,eAFP,CAHJ;;AAAA;AAEQC,cAAAA,IAFR;AAMET,cAAAA,QAAQ,CAACS,IAAD,CAAR;;AANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQAR,IAAAA,SAAS;AACV,GAVQ,EAUN,EAVM,CAAT;AAWA,SAAOF,KAAP;AACD;;AAED,SAASW,KAAT,GAAiB;AACf,MAAMX,KAAK,GAAGD,QAAQ,EAAtB;AAEA,MAAI,CAACC,KAAL,EAAY,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAHG,MAMbY,SANa,GAWXZ,KAXW,CAMbY,SANa;AAAA,MAObC,SAPa,GAWXb,KAXW,CAOba,SAPa;AAAA,MAQbC,MARa,GAWXd,KAXW,CAQbc,MARa;AAAA,MASbC,UATa,GAWXf,KAXW,CASbe,UATa;AAAA,MAUbC,QAVa,GAWXhB,KAXW,CAUbgB,QAVa;AAafb,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,KAAK,EAAC,UADR;AAEE,IAAA,IAAI,EAAEY,SAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE,MAAC,SAAD;AACE,IAAA,KAAK,EAAC,WADR;AAEE,IAAA,IAAI,EAAEC,SAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EASE,MAAC,SAAD;AACE,IAAA,KAAK,EAAC,cADR;AAEE,IAAA,IAAI,EAAEC,MAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAaE,MAAC,SAAD;AACE,IAAA,KAAK,EAAC,gBADR;AAEE,IAAA,IAAI,EAAEE,QAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,EAiBE,MAAC,SAAD;AACE,IAAA,KAAK,EAAC,iBADR;AAEE,IAAA,IAAI,EAAED,UAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CADF;AAwBD;;AAED,eAAe,SAASE,SAAT,GAAqB;AAClC,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD","sourcesContent":["import { useState, useEffect } from 'react';\n\n// Seems like it's not UP TO DATE\n// fetch('https://covid19.mathdro.id/api/countries/Italy')\n\nfunction getCountry(list){\n  return function(queryCountry) {\n    return list.reduce((a,c) => c.country === queryCountry ? c : a, {})\n  }\n}\n\nfunction useStats() {\n  const [stats, setStats] = useState();\n  useEffect(() => {\n    async function fetchData() {\n      console.log('fetching data...')\n      const data = await\n        fetch('https://corona.lmao.ninja/countries')\n        .then(res => res.json())\n        .then(d => getCountry(d)(\"Israel\"))\n      setStats(data)\n    }\n    fetchData();\n  }, [])\n  return stats\n}\n\nfunction Stats() {\n  const stats = useStats();\n\n  if (!stats) return <div>Loading...</div>\n\n  const {\n    confirmed,\n    recovered,\n    deaths,\n    todayCases,\n    critical\n  } = stats\n\n  console.log(stats)\n  return (\n    <div>\n      <StatBlock \n        title=\"Infected\"\n        data={confirmed}\n      />\n      <StatBlock \n        title=\"Recovered\"\n        data={recovered}\n      />\n      <StatBlock \n        title=\"Total Deaths\"\n        data={deaths}\n      />\n      <StatBlock \n        title=\"Critical Cases\"\n        data={critical}\n      />\n      <StatBlock \n        title=\"New Cases Today\"\n        data={todayCases}\n      />\n    </div>\n  )\n}\n\nexport default function IndexPage() {\n  return (\n    <div>\n      <Stats />\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}