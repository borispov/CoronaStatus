{"ast":null,"code":"var _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/components/Bar.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Bar } from 'react-chartjs-2';\nconst data = {\n  labels: ['Infected', 'New Today', 'Recovered', 'Critical', 'Deaths'],\n  datasets: [{\n    label: 'Outbreak Info',\n    backgroundColor: ['rgba(112, 120, 176, 1)', 'rgba(255,99,132,1)', 'rgba(213, 199, 23, 1)', 'rgba(245, 158, 102, 1)', 'rgba(18, 18, 21, 1)'],\n    borderColor: 'rgba(255,99,132,0.8)',\n    borderWidth: 1,\n    hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n    hoverBorderColor: 'rgba(255,99,132,1)',\n    data: [65, 59, 80, 81, 56, 55, 40]\n  }]\n};\nexport default (({\n  info\n}) => {\n  const allData = _objectSpread({}, data, {\n    datasets: [_objectSpread({}, data.datasets[0], {\n      data: [info]\n    })]\n  });\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Outbreak Information\"), __jsx(Bar, {\n    data: allData,\n    width: 100,\n    height: 50,\n    options: {\n      maintainAspectRatio: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }));\n});","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/components/Bar.js"],"names":["Bar","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","info","allData","maintainAspectRatio"],"mappings":";;;;;;;;;;AAAA,SAASA,GAAT,QAAoB,iBAApB;AAEA,MAAMC,IAAI,GAAG;AACXC,EAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,WAAb,EAA0B,WAA1B,EAAuC,UAAvC,EAAmD,QAAnD,CADG;AAEXC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,KAAK,EAAE,eADT;AAEEC,IAAAA,eAAe,EAAE,CACf,wBADe,EAEf,oBAFe,EAGf,uBAHe,EAIf,wBAJe,EAKf,qBALe,CAFnB;AASEC,IAAAA,WAAW,EAAE,sBATf;AAUEC,IAAAA,WAAW,EAAE,CAVf;AAWEC,IAAAA,oBAAoB,EAAE,sBAXxB;AAYEC,IAAAA,gBAAgB,EAAE,oBAZpB;AAaER,IAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB;AAbR,GADQ;AAFC,CAAb;AAqBA,gBAAe,CAAC;AAAES,EAAAA;AAAF,CAAD,KAAc;AAI3B,QAAMC,OAAO,qBACRV,IADQ;AAEXE,IAAAA,QAAQ,EAAE,mBAAMF,IAAI,CAACE,QAAL,CAAc,CAAd,CAAN;AAAwBF,MAAAA,IAAI,EAAE,CAACS,IAAD;AAA9B;AAFC,IAAb;;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE,MAAC,GAAD;AACE,IAAA,IAAI,EAAEC,OADR;AAEE,IAAA,KAAK,EAAE,GAFT;AAGE,IAAA,MAAM,EAAE,EAHV;AAIE,IAAA,OAAO,EAAE;AACPC,MAAAA,mBAAmB,EAAE;AADd,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAaD,CArBD","sourcesContent":["import { Bar } from 'react-chartjs-2';\n\nconst data = {\n  labels: ['Infected', 'New Today', 'Recovered', 'Critical', 'Deaths'],\n  datasets: [\n    {\n      label: 'Outbreak Info',\n      backgroundColor: [\n        'rgba(112, 120, 176, 1)',\n        'rgba(255,99,132,1)',\n        'rgba(213, 199, 23, 1)',\n        'rgba(245, 158, 102, 1)',\n        'rgba(18, 18, 21, 1)'\n      ],\n      borderColor: 'rgba(255,99,132,0.8)',\n      borderWidth: 1,\n      hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n      hoverBorderColor: 'rgba(255,99,132,1)',\n      data: [65, 59, 80, 81, 56, 55, 40]\n    }\n  ]\n};\n\nexport default ({ info }) => {\n\n\n\n  const allData = {\n    ...data, \n    datasets: [{ ...data.datasets[0], data: [info] }]\n  }\n  return (\n    <div>\n      <h2>Outbreak Information</h2>\n      <Bar\n        data={allData}\n        width={100}\n        height={50}\n        options={{\n          maintainAspectRatio: false\n        }}\n      />\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}