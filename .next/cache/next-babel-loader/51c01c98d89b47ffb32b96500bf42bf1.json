{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport sortForChart from './sortForChart';\nconst baseURL = `http://46.101.156.51:3003/api/v1/alltime/`;\n\nasync function currentCountry() {\n  return await axios.get('https://extreme-ip-lookup.com/json/').then(res => res.data.country).catch(e => 'israel');\n}\n\nasync function useTime(loc, url = baseURL) {\n  const {\n    0: timeStats,\n    1: setData\n  } = useState();\n  const {\n    0: countryStats,\n    1: setCountryStats\n  } = useState();\n  const {\n    0: timeLoading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: timeError,\n    1: setError\n  } = useState(false);\n  const {\n    0: country,\n    1: setCountry\n  } = useState();\n  useEffect(() => {\n    (async () => {\n      let geoLocation = await currentCountry();\n      setCountry(geoLocation);\n    })();\n  }, []);\n\n  async function fetchData(cn) {\n    setLoading(true);\n    setError();\n    const URL = cn === 'world' ? baseURL : baseURL + country;\n    console.log(country);\n    console.log(URL);\n    const data = await axios.get(URL).then(res => res.data).catch(err => setError(err));\n    const timeStats = sortForChart(data);\n    console.log(timeStats);\n    setData(timeStats);\n    setLoading(false);\n  } // useEffect(() => {\n  //   console.log('inside World effect');\n  //   fetchData('world')\n  // }, [])\n\n\n  useEffect(() => {\n    console.log('inside Country Effect');\n    country !== 'undefined' && fetchData(country);\n  }, [country]);\n  return {\n    countryStats,\n    timeStats,\n    timeLoading,\n    timeError\n  };\n}\n\nexport default useTime;","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/utils/useTime.js"],"names":["useState","useEffect","axios","sortForChart","baseURL","currentCountry","get","then","res","data","country","catch","e","useTime","loc","url","timeStats","setData","countryStats","setCountryStats","timeLoading","setLoading","timeError","setError","setCountry","geoLocation","fetchData","cn","URL","console","log","err"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,MAAMC,OAAO,GAAI,2CAAjB;;AAEA,eAAeC,cAAf,GAA+B;AAC7B,SAAO,MAAMH,KAAK,CACfI,GADU,CACN,qCADM,EAEVC,IAFU,CAELC,GAAG,IAAIA,GAAG,CAACC,IAAJ,CAASC,OAFX,EAGVC,KAHU,CAGJC,CAAC,IAAI,QAHD,CAAb;AAID;;AAED,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAAG,GAAGX,OAAlC,EAA2C;AACzC,QAAM;AAAA,OAACY,SAAD;AAAA,OAAYC;AAAZ,MAAuBjB,QAAQ,EAArC;AACA,QAAM;AAAA,OAACkB,YAAD;AAAA,OAAeC;AAAf,MAAkCnB,QAAQ,EAAhD;AACA,QAAM;AAAA,OAACoB,WAAD;AAAA,OAAcC;AAAd,MAA4BrB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAA,OAACsB,SAAD;AAAA,OAAYC;AAAZ,MAAwBvB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACU,OAAD;AAAA,OAAUc;AAAV,MAAwBxB,QAAQ,EAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAY;AACX,UAAIwB,WAAW,GAAG,MAAMpB,cAAc,EAAtC;AACAmB,MAAAA,UAAU,CAACC,WAAD,CAAV;AACD,KAHD;AAID,GALQ,EAKN,EALM,CAAT;;AAOA,iBAAeC,SAAf,CAAyBC,EAAzB,EAA6B;AAC3BN,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,QAAQ;AAER,UAAMK,GAAG,GAAID,EAAE,KAAK,OAAP,GAAiBvB,OAAjB,GAA2BA,OAAO,GAAGM,OAAlD;AACAmB,IAAAA,OAAO,CAACC,GAAR,CAAYpB,OAAZ;AACAmB,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,UAAMnB,IAAI,GAAG,MAAMP,KAAK,CAACI,GAAN,CAAUsB,GAAV,EAChBrB,IADgB,CACXC,GAAG,IAAIA,GAAG,CAACC,IADA,EAEhBE,KAFgB,CAEVoB,GAAG,IAAIR,QAAQ,CAACQ,GAAD,CAFL,CAAnB;AAGA,UAAMf,SAAS,GAAGb,YAAY,CAACM,IAAD,CAA9B;AACAoB,IAAAA,OAAO,CAACC,GAAR,CAAYd,SAAZ;AACAC,IAAAA,OAAO,CAACD,SAAD,CAAP;AACAK,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GA5BwC,CA8BzC;AACA;AACA;AACA;;;AAEApB,EAAAA,SAAS,CAAC,MAAM;AACd4B,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACApB,IAAAA,OAAO,KAAK,WAAZ,IAA2BgB,SAAS,CAAChB,OAAD,CAApC;AACD,GAHQ,EAGN,CAACA,OAAD,CAHM,CAAT;AAMA,SAAO;AACLQ,IAAAA,YADK;AACSF,IAAAA,SADT;AACoBI,IAAAA,WADpB;AACiCE,IAAAA;AADjC,GAAP;AAGD;;AAED,eAAeT,OAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport sortForChart from './sortForChart'\n\nconst baseURL = `http://46.101.156.51:3003/api/v1/alltime/`\n\nasync function currentCountry(){\n  return await axios\n    .get('https://extreme-ip-lookup.com/json/')\n    .then(res => res.data.country)\n    .catch(e => 'israel')\n}\n\nasync function useTime(loc, url = baseURL) {\n  const [timeStats, setData] = useState();\n  const [countryStats, setCountryStats] = useState();\n  const [timeLoading, setLoading] = useState(false);\n  const [timeError, setError] = useState(false);\n  const [country, setCountry] = useState()\n\n  useEffect(() => {\n    (async () => {\n      let geoLocation = await currentCountry()\n      setCountry(geoLocation)\n    })()\n  }, [])\n\n  async function fetchData(cn) {\n    setLoading(true)\n    setError()\n\n    const URL =  cn === 'world' ? baseURL : baseURL + country\n    console.log(country);\n    console.log(URL);\n    const data = await axios.get(URL)\n      .then(res => res.data)\n      .catch(err => setError(err))\n    const timeStats = sortForChart(data);\n    console.log(timeStats);\n    setData(timeStats)\n    setLoading(false)\n  }\n\n  // useEffect(() => {\n  //   console.log('inside World effect');\n  //   fetchData('world')\n  // }, [])\n\n  useEffect(() => {\n    console.log('inside Country Effect');\n    country !== 'undefined' && fetchData(country);\n  }, [country])\n\n\n  return {\n    countryStats, timeStats, timeLoading, timeError\n  }\n}\n\nexport default useTime;\n"]},"metadata":{},"sourceType":"module"}