{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/components/LineChart.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\n\nvar popVal = function popVal(o) {\n  return Object.values(o)[0];\n};\n\nexport default (function (_ref) {\n  var _ref2;\n\n  var info = _ref.info;\n  var data = {\n    labels: ['Infected', 'new', 'recovered', 'critical', 'deaths'],\n    datasets: [(_ref2 = {\n      fill: true,\n      lineTension: 0.1,\n      backgroundColor: 'rgba(75,192,192,0.4)'\n    }, _defineProperty(_ref2, \"backgroundColor\", ['rgba(112, 120, 176, 1)', 'rgba(233,233,100,1)', 'rgba(213, 199, 23, 1)', 'rgba(245, 55, 66, 1)', 'rgba(18, 18, 21, 1)']), _defineProperty(_ref2, \"borderColor\", ['rgba(75,192,192,1)']), _defineProperty(_ref2, \"borderCapStyle\", 'butt'), _defineProperty(_ref2, \"options\", {\n      scales: {\n        yAxes: [{\n          stacked: true\n        }]\n      }\n    }), _defineProperty(_ref2, \"borderDash\", []), _defineProperty(_ref2, \"borderDashOffset\", 0.0), _defineProperty(_ref2, \"borderJoinStyle\", 'miter'), _defineProperty(_ref2, \"pointBorderColor\", 'rgba(75,192,192,1)'), _defineProperty(_ref2, \"pointBackgroundColor\", '#fff'), _defineProperty(_ref2, \"pointBorderWidth\", 1), _defineProperty(_ref2, \"pointHoverRadius\", 5), _defineProperty(_ref2, \"pointHoverBackgroundColor\", 'rgba(75,192,192,1)'), _defineProperty(_ref2, \"pointHoverBorderColor\", 'rgba(220,220,220,1)'), _defineProperty(_ref2, \"pointHoverBorderWidth\", 2), _defineProperty(_ref2, \"pointRadius\", 1), _defineProperty(_ref2, \"pointHitRadius\", 10), _defineProperty(_ref2, \"data\", info.map(popVal)), _ref2)]\n  };\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Line Example\"), __jsx(Line, {\n    data: data,\n    width: 40,\n    height: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }));\n});","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/components/LineChart.js"],"names":["React","Line","popVal","o","Object","values","info","data","labels","datasets","fill","lineTension","backgroundColor","scales","yAxes","stacked","map"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,iBAAnB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,CAAC;AAAA,SAAIC,MAAM,CAACC,MAAP,CAAcF,CAAd,EAAiB,CAAjB,CAAJ;AAAA,CAAhB;;AAEA,gBAAe,gBAAc;AAAA;;AAAA,MAAXG,IAAW,QAAXA,IAAW;AAE3B,MAAMC,IAAI,GAAG;AACXC,IAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,KAAb,EAAoB,WAApB,EAAiC,UAAjC,EAA6C,QAA7C,CADG;AAEXC,IAAAA,QAAQ,EAAE;AAENC,MAAAA,IAAI,EAAE,IAFA;AAGNC,MAAAA,WAAW,EAAE,GAHP;AAINC,MAAAA,eAAe,EAAE;AAJX,iDAKW,CACf,wBADe,EAEf,qBAFe,EAGf,uBAHe,EAIf,sBAJe,EAKf,qBALe,CALX,yCAYO,CACX,oBADW,CAZP,4CAeU,MAfV,qCAgBG;AACPC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,KAAK,EAAE,CAAC;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAD;AAAT;AADD,KAhBH,wCAmBM,EAnBN,8CAoBY,GApBZ,6CAqBW,OArBX,8CAsBY,oBAtBZ,kDAuBgB,MAvBhB,8CAwBY,CAxBZ,8CAyBY,CAzBZ,uDA0BqB,oBA1BrB,mDA2BiB,qBA3BjB,mDA4BiB,CA5BjB,yCA6BO,CA7BP,4CA8BU,EA9BV,kCA+BAT,IAAI,CAACU,GAAL,CAASd,MAAT,CA/BA;AAFC,GAAb;AAuCA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,MAAC,IAAD;AACE,IAAA,IAAI,EAAEK,IADR;AAEE,IAAA,KAAK,EAAE,EAFT;AAGE,IAAA,MAAM,EAAE,EAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAUD,CAnDD","sourcesContent":["import React from 'react';\nimport {Line} from 'react-chartjs-2';\n\nconst popVal = o => Object.values(o)[0]\n\nexport default ({ info }) => {\n\n  const data = {\n    labels: ['Infected', 'new', 'recovered', 'critical', 'deaths'],\n    datasets: [\n      {\n        fill: true,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        backgroundColor: [\n          'rgba(112, 120, 176, 1)',\n          'rgba(233,233,100,1)',\n          'rgba(213, 199, 23, 1)',\n          'rgba(245, 55, 66, 1)',\n          'rgba(18, 18, 21, 1)'\n        ],\n        borderColor: [\n          'rgba(75,192,192,1)',\n        ],\n        borderCapStyle: 'butt',\n        options: {\n          scales: { yAxes: [{ stacked: true }] }\n        },\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: info.map(popVal)\n      }\n    ]\n  };\n\n\n  return (\n    <div>\n      <h2>Line Example</h2>\n      <Line \n        data={data}\n        width={40}\n        height={12}\n      />\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}