{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/components/LineChart.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\n\nvar popVal = function popVal(o) {\n  return Object.values(o)[0];\n};\n\nvar defaultColors = ['rgba(112, 120, 176, 1)', 'rgba(233,233,100,1)', 'rgba(213, 199, 23, 1)', 'rgba(245, 55, 66, 1)', 'rgba(18, 18, 21, 1)'];\nvar defaultSettings = {\n  fillColor: \"rgba(220,220,220,0.2)\",\n  strokeColor: \"rgba(220,220,220,1)\" // pointColor: \"rgba(220,220,220,1)\",\n  // pointStrokeColor: \"#fff\",\n  // pointHighlightFill: \"#fff\",\n  // pointHighlightStroke: \"rgba(220,220,220,1)\",\n  // pointBackgroundColor: '#fff',\n  // pointBorderWidth: 1,\n  // pointHoverRadius: 5,\n  // pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  // pointHoverBorderColor: 'rgba(220,220,220,1)',\n  // pointHoverBorderWidth: 2,\n  // pointRadius: 1,\n  // pointHitRadius: 10,\n\n};\n\nvar parseDatasets = function parseDatasets(r) {\n  var dSets = r.map(function (set) {\n    return _objectSpread({}, defaultSettings, {}, set);\n  });\n};\n\nexport default (function (props) {\n  console.log(props);\n  var data = {\n    labels: props.labels // datasets: parseDatasets(props.datasets)\n\n  };\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, props.label), __jsx(Line, {\n    data: data,\n    width: 40,\n    height: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }));\n});","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/components/LineChart.js"],"names":["React","Line","popVal","o","Object","values","defaultColors","defaultSettings","fillColor","strokeColor","parseDatasets","r","dSets","map","set","props","console","log","data","labels","label"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,iBAAnB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,CAAC;AAAA,SAAIC,MAAM,CAACC,MAAP,CAAcF,CAAd,EAAiB,CAAjB,CAAJ;AAAA,CAAhB;;AAEA,IAAMG,aAAa,GAAG,CACpB,wBADoB,EAEpB,qBAFoB,EAGpB,uBAHoB,EAIpB,sBAJoB,EAKpB,qBALoB,CAAtB;AAQA,IAAMC,eAAe,GAAG;AACtBC,EAAAA,SAAS,EAAE,uBADW;AAEtBC,EAAAA,WAAW,EAAE,qBAFS,CAGtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAdsB,CAAxB;;AAiBA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,CAAC,EAAI;AACzB,MAAMC,KAAK,GAAGD,CAAC,CAACE,GAAF,CAAM,UAAAC,GAAG;AAAA,6BAClBP,eADkB,MAElBO,GAFkB;AAAA,GAAT,CAAd;AAID,CALD;;AAOA,gBAAe,UAAEC,KAAF,EAAa;AAE1BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,MAAMG,IAAI,GAAG;AACXC,IAAAA,MAAM,EAAEJ,KAAK,CAACI,MADH,CAEX;;AAFW,GAAb;AAMA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,KAAK,CAACK,KAAX,CADF,EAEE,MAAC,IAAD;AACE,IAAA,IAAI,EAAEF,IADR;AAEE,IAAA,KAAK,EAAE,EAFT;AAGE,IAAA,MAAM,EAAE,EAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAUD,CApBD","sourcesContent":["import React from 'react';\nimport {Line} from 'react-chartjs-2';\n\nconst popVal = o => Object.values(o)[0]\n\nconst defaultColors = [\n  'rgba(112, 120, 176, 1)',\n  'rgba(233,233,100,1)',\n  'rgba(213, 199, 23, 1)',\n  'rgba(245, 55, 66, 1)',\n  'rgba(18, 18, 21, 1)'\n]\n\nconst defaultSettings = {\n  fillColor: \"rgba(220,220,220,0.2)\",\n  strokeColor: \"rgba(220,220,220,1)\",\n  // pointColor: \"rgba(220,220,220,1)\",\n  // pointStrokeColor: \"#fff\",\n  // pointHighlightFill: \"#fff\",\n  // pointHighlightStroke: \"rgba(220,220,220,1)\",\n  // pointBackgroundColor: '#fff',\n  // pointBorderWidth: 1,\n  // pointHoverRadius: 5,\n  // pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  // pointHoverBorderColor: 'rgba(220,220,220,1)',\n  // pointHoverBorderWidth: 2,\n  // pointRadius: 1,\n  // pointHitRadius: 10,\n}\n\nconst parseDatasets = r => {\n  const dSets = r.map(set => ({\n    ...defaultSettings,\n    ...set\n  }))\n}\n\nexport default ( props ) => {\n\n  console.log(props);\n\n  const data = {\n    labels: props.labels,\n    // datasets: parseDatasets(props.datasets)\n  };\n\n\n  return (\n    <div>\n      <h2>{props.label}</h2>\n      <Line\n        data={data}\n        width={40}\n        height={12}\n      />\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}