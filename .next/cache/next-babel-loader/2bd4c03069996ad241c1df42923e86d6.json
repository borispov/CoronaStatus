{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect, useRef, createContext } from 'react';\nexport const ProxyContext = createContext();\nexport const ProxyContextProvider = props => {\n  const initialState = {\n    ipAddress: 'localhost',\n    countryName: 'Nowhere'\n  }; // Declare shareable proxy state\n\n  const {\n    0: proxy,\n    1: setProxy\n  } = useState(initialState);\n  const prev = useRef(); // Read and Write Proxy State to Local Storage\n\n  useEffect(() => {\n    if (proxy.countryName == 'Nowhere') {\n      const localState = JSON.parse(localStorage.getItem('ip2proxy'));\n\n      if (localState) {\n        console.info('reading local storage');\n        prev.current = localState.ipAddress;\n        setProxy(localState);\n      }\n    } else if (prev.current !== proxy.ipAddress) {\n      console.info('writing local storage');\n      localStorage.setItem('ip2proxy', JSON.stringify(proxy));\n    } // if (prev.current === undefined && proxy.countryName == 'israel') {\n    //     const localState = JSON.parse(localStorage.getItem('ip2proxy'))\n    //     if (localState) {\n    //         console.info('reading local storage')\n    //         prev.current = localState.ipAddress\n    //         setProxy(localState)\n    //     } else {\n    //       localStorage.setItem('ip2proxy', JSON.stringify(proxy))\n    //     }\n    // } else if (prev.current !== proxy.ipAddress) {\n    //     console.info('writing local storage')\n    //     localStorage.setItem('ip2proxy', JSON.stringify(proxy))\n    // }\n\n  }, [proxy]);\n  return __jsx(ProxyContext.Provider, {\n    value: [proxy, setProxy]\n  }, props.children);\n};","map":null,"metadata":{},"sourceType":"module"}