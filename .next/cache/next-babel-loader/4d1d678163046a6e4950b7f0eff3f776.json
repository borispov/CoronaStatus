{"ast":null,"code":"var _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/components/LineChart.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\n\nconst popVal = o => Object.values(o)[0];\n\nconst defaultColors = ['rgba(112, 120, 176, 1)', 'rgba(233,233,100,1)', 'rgba(213, 199, 23, 1)', 'rgba(245, 55, 66, 1)', 'rgba(18, 18, 21, 1)'];\nconst defaultSettings = {\n  fillColor: \"rgba(220,220,220,0.2)\",\n  strokeColor: \"rgba(220,220,220,1)\" // pointColor: \"rgba(220,220,220,1)\",\n  // pointStrokeColor: \"#fff\",\n  // pointHighlightFill: \"#fff\",\n  // pointHighlightStroke: \"rgba(220,220,220,1)\",\n  // pointBackgroundColor: '#fff',\n  // pointBorderWidth: 1,\n  // pointHoverRadius: 5,\n  // pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  // pointHoverBorderColor: 'rgba(220,220,220,1)',\n  // pointHoverBorderWidth: 2,\n  // pointRadius: 1,\n  // pointHitRadius: 10,\n\n};\n\nconst parseDatasets = arrayOfSets => {\n  return arrayOfSets.map(set => _objectSpread({}, defaultSettings, {}, set));\n};\n\nexport default (props => {\n  const data = {\n    labels: props.labels,\n    datasets: props.datasets && parseDatasets(props.datasets)\n  };\n  console.log(data);\n  var options = {\n    responsive: true,\n    maintainAspectRatio: true,\n    animation: {\n      easing: 'easeInOutQuad',\n      duration: 520\n    },\n    scales: {\n      xAxes: [{\n        gridLines: {\n          color: 'rgba(200, 200, 200, 0.05)',\n          lineWidth: 1\n        }\n      }],\n      yAxes: [{\n        gridLines: {\n          color: 'rgba(200, 200, 200, 0.08)',\n          lineWidth: 1\n        }\n      }]\n    },\n    elements: {\n      line: {\n        tension: 0.4\n      }\n    },\n    legend: {\n      display: false\n    },\n    point: {\n      backgroundColor: 'white'\n    },\n    tooltips: {\n      titleFontFamily: 'Open Sans',\n      backgroundColor: 'rgba(0,0,0,0.3)',\n      titleFontColor: 'red',\n      caretSize: 5,\n      cornerRadius: 2,\n      xPadding: 10,\n      yPadding: 10\n    }\n  };\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, props.label), __jsx(Line, {\n    data: data,\n    width: 4,\n    options: options,\n    height: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }));\n});","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/components/LineChart.js"],"names":["React","Line","popVal","o","Object","values","defaultColors","defaultSettings","fillColor","strokeColor","parseDatasets","arrayOfSets","map","set","props","data","labels","datasets","console","log","options","responsive","maintainAspectRatio","animation","easing","duration","scales","xAxes","gridLines","color","lineWidth","yAxes","elements","line","tension","legend","display","point","backgroundColor","tooltips","titleFontFamily","titleFontColor","caretSize","cornerRadius","xPadding","yPadding","label"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,iBAAnB;;AAEA,MAAMC,MAAM,GAAGC,CAAC,IAAIC,MAAM,CAACC,MAAP,CAAcF,CAAd,EAAiB,CAAjB,CAApB;;AAEA,MAAMG,aAAa,GAAG,CACpB,wBADoB,EAEpB,qBAFoB,EAGpB,uBAHoB,EAIpB,sBAJoB,EAKpB,qBALoB,CAAtB;AAQA,MAAMC,eAAe,GAAG;AACtBC,EAAAA,SAAS,EAAE,uBADW;AAEtBC,EAAAA,WAAW,EAAE,qBAFS,CAGtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAdsB,CAAxB;;AAiBA,MAAMC,aAAa,GAAGC,WAAW,IAAI;AACnC,SAAOA,WAAW,CAACC,GAAZ,CAAgBC,GAAG,sBACrBN,eADqB,MAErBM,GAFqB,CAAnB,CAAP;AAID,CALD;;AAOA,gBAAiBC,KAAF,IAAa;AAE1B,QAAMC,IAAI,GAAG;AACXC,IAAAA,MAAM,EAAEF,KAAK,CAACE,MADH;AAEXC,IAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,IAAkBP,aAAa,CAACI,KAAK,CAACG,QAAP;AAF9B,GAAb;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AAEA,MAAIK,OAAO,GAAG;AACZC,IAAAA,UAAU,EAAE,IADA;AAEZC,IAAAA,mBAAmB,EAAE,IAFT;AAGZC,IAAAA,SAAS,EAAE;AACPC,MAAAA,MAAM,EAAE,eADD;AAEPC,MAAAA,QAAQ,EAAE;AAFH,KAHC;AAOZC,IAAAA,MAAM,EAAE;AACJC,MAAAA,KAAK,EAAE,CAAC;AACJC,QAAAA,SAAS,EAAE;AACPC,UAAAA,KAAK,EAAE,2BADA;AAEPC,UAAAA,SAAS,EAAE;AAFJ;AADP,OAAD,CADH;AAOJC,MAAAA,KAAK,EAAE,CAAC;AACJH,QAAAA,SAAS,EAAE;AACPC,UAAAA,KAAK,EAAE,2BADA;AAEPC,UAAAA,SAAS,EAAE;AAFJ;AADP,OAAD;AAPH,KAPI;AAqBZE,IAAAA,QAAQ,EAAE;AACNC,MAAAA,IAAI,EAAE;AACFC,QAAAA,OAAO,EAAE;AADP;AADA,KArBE;AA0BZC,IAAAA,MAAM,EAAE;AACJC,MAAAA,OAAO,EAAE;AADL,KA1BI;AA6BZC,IAAAA,KAAK,EAAE;AACHC,MAAAA,eAAe,EAAE;AADd,KA7BK;AAgCZC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,eAAe,EAAE,WADX;AAENF,MAAAA,eAAe,EAAE,iBAFX;AAGNG,MAAAA,cAAc,EAAE,KAHV;AAINC,MAAAA,SAAS,EAAE,CAJL;AAKNC,MAAAA,YAAY,EAAE,CALR;AAMNC,MAAAA,QAAQ,EAAE,EANJ;AAONC,MAAAA,QAAQ,EAAE;AAPJ;AAhCE,GAAd;AA2CA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK/B,KAAK,CAACgC,KAAX,CADF,EAEE,MAAC,IAAD;AACE,IAAA,IAAI,EAAE/B,IADR;AAEE,IAAA,KAAK,EAAE,CAFT;AAGE,IAAA,OAAO,EAAEK,OAHX;AAIE,IAAA,MAAM,EAAE,CAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAWD,CA/DD","sourcesContent":["import React from 'react';\nimport {Line} from 'react-chartjs-2';\n\nconst popVal = o => Object.values(o)[0]\n\nconst defaultColors = [\n  'rgba(112, 120, 176, 1)',\n  'rgba(233,233,100,1)',\n  'rgba(213, 199, 23, 1)',\n  'rgba(245, 55, 66, 1)',\n  'rgba(18, 18, 21, 1)'\n]\n\nconst defaultSettings = {\n  fillColor: \"rgba(220,220,220,0.2)\",\n  strokeColor: \"rgba(220,220,220,1)\",\n  // pointColor: \"rgba(220,220,220,1)\",\n  // pointStrokeColor: \"#fff\",\n  // pointHighlightFill: \"#fff\",\n  // pointHighlightStroke: \"rgba(220,220,220,1)\",\n  // pointBackgroundColor: '#fff',\n  // pointBorderWidth: 1,\n  // pointHoverRadius: 5,\n  // pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  // pointHoverBorderColor: 'rgba(220,220,220,1)',\n  // pointHoverBorderWidth: 2,\n  // pointRadius: 1,\n  // pointHitRadius: 10,\n}\n\nconst parseDatasets = arrayOfSets => {\n  return arrayOfSets.map(set => ({\n    ...defaultSettings,\n    ...set\n  }))\n}\n\nexport default ( props ) => {\n\n  const data = {\n    labels: props.labels,\n    datasets: props.datasets && parseDatasets(props.datasets)\n  };\n\n  console.log(data);\n\n  var options = {\n    responsive: true,\n    maintainAspectRatio: true,\n    animation: {\n        easing: 'easeInOutQuad',\n        duration: 520\n    },\n    scales: {\n        xAxes: [{\n            gridLines: {\n                color: 'rgba(200, 200, 200, 0.05)',\n                lineWidth: 1\n            }\n        }],\n        yAxes: [{\n            gridLines: {\n                color: 'rgba(200, 200, 200, 0.08)',\n                lineWidth: 1\n            }\n        }]\n    },\n    elements: {\n        line: {\n            tension: 0.4\n        }\n    },\n    legend: {\n        display: false\n    },\n    point: {\n        backgroundColor: 'white'\n    },\n    tooltips: {\n        titleFontFamily: 'Open Sans',\n        backgroundColor: 'rgba(0,0,0,0.3)',\n        titleFontColor: 'red',\n        caretSize: 5,\n        cornerRadius: 2,\n        xPadding: 10,\n        yPadding: 10\n    }\n};\n\n  return (\n    <div>\n      <h2>{props.label}</h2>\n      <Line\n        data={data}\n        width={4}\n        options={options}\n        height={1}\n      />\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}