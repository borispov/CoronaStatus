{"ast":null,"code":"const defaultLocale = 'he';\nimport { ProxyContext } from '../context/proxy-context';\n\nconst isLocale = str => ['he', 'en'].some(locale => str === locale);\n\nexport function getInitialLocale(c) {\n  // preference from the previous session\n  const localSetting = localStorage.getItem('locale');\n\n  if (localSetting && isLocale(localSetting)) {\n    return localSetting;\n  } // const country = JSON.parse(localStorage.getItem('ip2proxy'))\n  // const country = c\n  // console.log(country);\n  // if (country === 'israel') {\n  //   return 'he'\n  // }\n  // the language setting of the browser\n\n\n  const [browserSetting] = navigator.language.split('-');\n\n  if (isLocale(browserSetting)) {\n    return browserSetting;\n  }\n\n  return defaultLocale;\n}","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/locales/getInitialLocale.js"],"names":["defaultLocale","ProxyContext","isLocale","str","some","locale","getInitialLocale","c","localSetting","localStorage","getItem","browserSetting","navigator","language","split"],"mappings":"AAAA,MAAMA,aAAa,GAAG,IAAtB;AAEA,SAASC,YAAT,QAA6B,0BAA7B;;AAEA,MAAMC,QAAQ,GAAGC,GAAG,IAAI,CAAC,IAAD,EAAO,IAAP,EAAaC,IAAb,CAAkBC,MAAM,IAAIF,GAAG,KAAKE,MAApC,CAAxB;;AAEA,OAAO,SAASC,gBAAT,CAA0BC,CAA1B,EAA4B;AACjC;AACA,QAAMC,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAArB;;AACA,MAAIF,YAAY,IAAIN,QAAQ,CAACM,YAAD,CAA5B,EAA4C;AAC1C,WAAOA,YAAP;AACD,GALgC,CAOjC;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA,QAAM,CAACG,cAAD,IAAmBC,SAAS,CAACC,QAAV,CAAmBC,KAAnB,CAAyB,GAAzB,CAAzB;;AACA,MAAIZ,QAAQ,CAACS,cAAD,CAAZ,EAA8B;AAC5B,WAAOA,cAAP;AACD;;AAED,SAAOX,aAAP;AACD","sourcesContent":["const defaultLocale = 'he'\n\nimport { ProxyContext } from '../context/proxy-context'\n\nconst isLocale = str => ['he', 'en'].some(locale => str === locale)\n\nexport function getInitialLocale(c){\n  // preference from the previous session\n  const localSetting = localStorage.getItem('locale')\n  if (localSetting && isLocale(localSetting)) {\n    return localSetting\n  }\n\n  // const country = JSON.parse(localStorage.getItem('ip2proxy'))\n  // const country = c\n  // console.log(country);\n  // if (country === 'israel') {\n  //   return 'he'\n  // }\n\n  // the language setting of the browser\n  const [browserSetting] = navigator.language.split('-')\n  if (isLocale(browserSetting)) {\n    return browserSetting\n  }\n\n  return defaultLocale\n}\n"]},"metadata":{},"sourceType":"module"}