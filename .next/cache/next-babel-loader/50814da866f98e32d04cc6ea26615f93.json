{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nvar baseURL = \"http://localhost:3005/api/v1/alltime/\"; // async function currentCountry(){\n//   return await axios\n//     .get('https://extreme-ip-lookup.com/json/')\n//     .then(res => res.data.country)\n//     .catch(e => 'Israel')\n// }\n\nfunction useTime() {\n  var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : baseURL;\n  var country = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'world';\n\n  var _useState = useState(),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  useEffect(function () {\n    function fetchData() {\n      var URL, data;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              setError();\n              URL = country === 'world' ? baseURL : baseURL + country;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(axios.get(URL).then(console.log)[\"catch\"](function (err) {\n                return setError(err);\n              }));\n\n            case 5:\n              data = _context.sent;\n              console.log('finished fetching...???');\n              console.log(data);\n              setStats(data);\n              setLoading(false);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData();\n  }, []);\n  return {\n    data: data,\n    loading: loading,\n    error: error\n  };\n}\n\nexport default useTime;","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/utils/useTime.js"],"names":["useState","useEffect","axios","baseURL","useTime","url","country","data","setData","loading","setLoading","error","setError","fetchData","URL","get","then","console","log","err","setStats"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAMC,OAAO,0CAAb,C,CAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,OAAT,GAAmD;AAAA,MAAlCC,GAAkC,uEAA5BF,OAA4B;AAAA,MAAnBG,OAAmB,uEAAT,OAAS;;AAAA,kBACzBN,QAAQ,EADiB;AAAA,MAC1CO,IAD0C;AAAA,MACpCC,OADoC;;AAAA,mBAEnBR,QAAQ,CAAC,KAAD,CAFW;AAAA,MAE1CS,OAF0C;AAAA,MAEjCC,UAFiC;;AAAA,mBAGvBV,QAAQ,CAAC,KAAD,CAHe;AAAA,MAG1CW,KAH0C;AAAA,MAGnCC,QAHmC;;AAKjDX,EAAAA,SAAS,CAAC,YAAM;AAEd,aAAeY,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACEH,cAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,cAAAA,QAAQ;AAEFE,cAAAA,GAJR,GAIcR,OAAO,KAAK,OAAZ,GAAsBH,OAAtB,GAAgCA,OAAO,GAACG,OAJtD;AAAA;AAAA,+CAKqBJ,KAAK,CAACa,GAAN,CAAUD,GAAV,EAChBE,IADgB,CACXC,OAAO,CAACC,GADG,WAEV,UAAAC,GAAG;AAAA,uBAAIP,QAAQ,CAACO,GAAD,CAAZ;AAAA,eAFO,CALrB;;AAAA;AAKQZ,cAAAA,IALR;AAQEU,cAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAD,cAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AACAa,cAAAA,QAAQ,CAACb,IAAD,CAAR;AACAG,cAAAA,UAAU,CAAC,KAAD,CAAV;;AAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcAG,IAAAA,SAAS;AACV,GAjBQ,EAiBN,EAjBM,CAAT;AAkBA,SAAO;AACLN,IAAAA,IAAI,EAAJA,IADK;AACCE,IAAAA,OAAO,EAAPA,OADD;AACUE,IAAAA,KAAK,EAALA;AADV,GAAP;AAGD;;AAED,eAAeP,OAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nconst baseURL = `http://localhost:3005/api/v1/alltime/`\n\n// async function currentCountry(){\n//   return await axios\n//     .get('https://extreme-ip-lookup.com/json/')\n//     .then(res => res.data.country)\n//     .catch(e => 'Israel')\n// }\n\nfunction useTime(url = baseURL, country = 'world') {\n  const [data, setData] = useState();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n\n    async function fetchData() {\n      setLoading(true)\n      setError()\n\n      const URL = country === 'world' ? baseURL : baseURL+country\n      const data = await axios.get(URL)\n        .then(console.log)\n        .catch(err => setError(err))\n      console.log('finished fetching...???');\n      console.log(data);\n      setStats(data)\n      setLoading(false)\n    }\n\n    fetchData();\n  }, [])\n  return {\n    data, loading, error\n  }\n}\n\nexport default useTime;\n"]},"metadata":{},"sourceType":"module"}