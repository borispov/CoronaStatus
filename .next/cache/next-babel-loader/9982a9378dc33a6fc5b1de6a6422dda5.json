{"ast":null,"code":"var _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/components/CaseChart.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Button, Container, Paragraph } from './S';\nimport axios from 'axios';\nimport sortForChart from '../utils/sortForChart';\nimport Chart from './Chart';\nimport Spinner from './Spinner';\nconst baseURL = `https://nCorona.live/api/v1/alltime/`;\n\nconst worldTimeData = async () => {\n  const data = await axios.get(baseURL);\n  const dataRes = await sortForChart(data.data);\n  return dataRes;\n};\n\nclass CaseChart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"present\", val => {\n      this.setState({\n        dataToPresent: val,\n        active: val\n      });\n    });\n\n    this.state = {\n      active: 'worldCases',\n      dataToPresent: 'worldCases',\n      worldData: [],\n      worldLabels: [],\n      worldCases: [],\n      deathCases: [],\n      newCases: [],\n      showWorld: true,\n      loading: false\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({\n      loading: true\n    });\n\n    try {\n      const timeStats = await worldTimeData();\n      const worldCases = timeStats && timeStats.datasets.filter(a => a.label === 'cases');\n      const deathCases = timeStats && timeStats.datasets.filter(a => a.label === 'deaths');\n      const newCases = timeStats && timeStats.datasets.filter(a => a.label === 'new cases');\n      const worldLabels = timeStats && timeStats.labels;\n      this.setState({\n        worldData: timeStats,\n        worldCases,\n        deathCases,\n        newCases,\n        worldLabels,\n        loading: false\n      });\n    } catch (err) {\n      this.setState({\n        loading: false,\n        error: err\n      });\n    }\n  }\n\n  render() {\n    if (this.state.loading) {\n      return __jsx(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Loading Data . . .\"));\n    }\n\n    if (this.state.error) {\n      return __jsx(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, ' error occured:' + this.state.error));\n    }\n\n    return __jsx(React.Fragment, null, __jsx(Paragraph, {\n      mw: \"auto\",\n      center: true,\n      secondary: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, this.props.isHeb && 'להלן: שיעור התפשטות הנגיף בעולם לפי: מקרי מוות ומסרים מקרים חדשים ליום' || 'Growth Rate of the virus in the world, including deaths and new cases'), __jsx(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-evenly',\n        padding: '34px 32px 8px 32px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, __jsx(Button, {\n      active: this.state.active === 'worldCases',\n      bg: \"transparent\",\n      fat: true,\n      outline: \"primaryLight\",\n      btnColor: \"onBg\",\n      medium: true,\n      onClick: () => this.present('worldCases'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.props.isHeb && 'נדבקים' || 'Cases'), __jsx(Button, {\n      active: this.state.active === 'deathCases',\n      bg: \"transparent\",\n      fat: true,\n      outline: \"primaryDark\",\n      btnColor: \"onBg\",\n      medium: true,\n      onClick: () => this.present('deathCases'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.props.isHeb && 'מקרי מוות' || 'Deaths'), __jsx(Button, {\n      active: this.state.active === 'newCases',\n      bg: \"transparent\",\n      fat: true,\n      outline: \"primaryDark\",\n      btnColor: \"onBg\",\n      medium: true,\n      onClick: () => this.present('newCases'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.props.isHeb && 'מקרים חדשים' || 'New cases')), this.state.worldData && __jsx(Chart, {\n      type: \"line\",\n      labels: this.state.worldLabels,\n      data: this.state[this.state.dataToPresent],\n      label: this.props.isHeb ? 'נתונים מהעולם' : 'Global',\n      theme: this.props.theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }) || __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \" Loading Charts ... \"));\n  }\n\n}\n\nexport default CaseChart;","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/components/CaseChart.js"],"names":["React","Button","Container","Paragraph","axios","sortForChart","Chart","Spinner","baseURL","worldTimeData","data","get","dataRes","CaseChart","Component","constructor","props","val","setState","dataToPresent","active","state","worldData","worldLabels","worldCases","deathCases","newCases","showWorld","loading","componentDidMount","timeStats","datasets","filter","a","label","labels","err","error","render","isHeb","display","justifyContent","padding","present","theme"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Button, Container, Paragraph } from './S'\nimport axios from 'axios'\nimport sortForChart from '../utils/sortForChart'\nimport Chart from './Chart'\nimport Spinner from './Spinner'\n\nconst baseURL = `https://nCorona.live/api/v1/alltime/`\n\nconst worldTimeData = async () => {\n  const data = await axios.get(baseURL)\n  const dataRes = await sortForChart(data.data)\n  return dataRes\n}\n\nclass CaseChart extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      active: 'worldCases',\n      dataToPresent: 'worldCases',\n      worldData: [],\n      worldLabels: [],\n      worldCases: [],\n      deathCases: [],\n      newCases: [],\n      showWorld: true,\n      loading: false\n    }\n  }\n\n  present = val => {\n    this.setState({dataToPresent: val, active: val})\n  }\n\n  async componentDidMount() {\n    this.setState({ loading: true })\n\n    try {\n      const timeStats = await worldTimeData()\n      const worldCases = timeStats && timeStats.datasets.filter(a => a.label === 'cases')\n      const deathCases = timeStats && timeStats.datasets.filter(a => a.label === 'deaths')\n      const newCases = timeStats && timeStats.datasets.filter(a => a.label === 'new cases')\n      const worldLabels = timeStats && timeStats.labels\n\n\n\n      this.setState({\n        worldData: timeStats,\n        worldCases,\n        deathCases,\n        newCases,\n        worldLabels,\n        loading: false\n      })\n    } catch(err) {\n      this.setState({ loading: false, error: err })\n    }\n\n  }\n\n  render() {\n\n    if (this.state.loading) {\n      return <Container><h1>Loading Data . . .</h1></Container>\n    }\n    if (this.state.error) {\n      return <Container><h1>{' error occured:' + this.state.error}</h1></Container>\n    }\n\n    return (\n      <>\n          <Paragraph mw='auto' center secondary>\n          {this.props.isHeb &&\n            'להלן: שיעור התפשטות הנגיף בעולם לפי: מקרי מוות ומסרים מקרים חדשים ליום'\n                || 'Growth Rate of the virus in the world, including deaths and new cases'}\n          </Paragraph>\n\n        <div style={{display: 'flex', justifyContent: 'space-evenly', padding: '34px 32px 8px 32px'}}>\n          <Button active={this.state.active === 'worldCases'} bg='transparent' fat outline='primaryLight' btnColor='onBg' medium onClick={() => this.present('worldCases')}>{this.props.isHeb && 'נדבקים' || 'Cases'}</Button>\n          <Button active={this.state.active === 'deathCases'} bg='transparent' fat outline='primaryDark' btnColor='onBg' medium onClick={() => this.present('deathCases')}>{this.props.isHeb && 'מקרי מוות' || 'Deaths'}</Button>\n          <Button active={this.state.active === 'newCases'} bg='transparent' fat outline='primaryDark' btnColor='onBg' medium onClick={() => this.present('newCases')}>{this.props.isHeb && 'מקרים חדשים' || 'New cases'}</Button>\n        </div>\n        {\n          this.state.worldData &&\n            <Chart \n              type='line'\n              labels={this.state.worldLabels}\n              data={this.state[this.state.dataToPresent]}\n              label={this.props.isHeb ? 'נתונים מהעולם' : 'Global'}\n              theme={this.props.theme}\n            /> || <div> Loading Charts ... </div>\n        }\n      </>\n    )\n  }\n\n}\n\nexport default CaseChart\n"]},"metadata":{},"sourceType":"module"}