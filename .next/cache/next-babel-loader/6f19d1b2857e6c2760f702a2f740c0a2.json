{"ast":null,"code":"var _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/components/Table/Table.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled, { withTheme } from 'styled-components';\nimport Cell from './Cell';\nvar ScrollTable = styled.div.withConfig({\n  displayName: \"Table__ScrollTable\",\n  componentId: \"sc-135jno9-0\"\n})([\"overflow-x:auto;\"]);\nvar DataTable = styled.div.withConfig({\n  displayName: \"Table__DataTable\",\n  componentId: \"sc-135jno9-1\"\n})([\"max-width:100%;\"]);\nvar Table = styled.table.withConfig({\n  displayName: \"Table\",\n  componentId: \"sc-135jno9-2\"\n})([\"position:relative;clear:both;border-collapse:separate;margin:0 auto;border-spacing:0px;background:#fff;box-shadow:0 1px 0 0 rgba(22,29,37,0.05);width:auto;\"]);\nvar colors = {\n  0: 'onPrimary',\n  1: 'successDefault',\n  2: 'error2',\n  3: 'purpleComp',\n  4: 'error',\n  5: 'complimentary'\n};\nexport default (function (_ref) {\n  var headings = _ref.headings,\n      theme = _ref.theme,\n      isHeb = _ref.isHeb,\n      rows = _ref.rows;\n\n  var renderHeadingRow = function renderHeadingRow(_cell, cellIndex) {\n    return __jsx(Cell, {\n      key: \"heading-\".concat(cellIndex),\n      content: headings[cellIndex],\n      header: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    });\n  };\n\n  var renderRow = function renderRow(_row, rowIndex) {\n    return __jsx(\"tr\", {\n      key: \"row-\".concat(rowIndex),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, rows[rowIndex].map(function (_cell, cellIndex) {\n      return __jsx(Cell, {\n        key: \"\".concat(rowIndex, \"-\").concat(cellIndex),\n        cellColor: colors[cellIndex] || 'onPrimary',\n        content: rows[rowIndex][cellIndex],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      });\n    }));\n  };\n\n  var theadMarkup = __jsx(\"tr\", {\n    role: \"row\",\n    key: \"heading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, headings.map(renderHeadingRow));\n\n  var tbodyMarkup = rows.map(renderRow);\n  return __jsx(DataTable, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, __jsx(ScrollTable, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(Table, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, __jsx(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, theadMarkup), __jsx(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, tbodyMarkup))));\n});","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/components/Table/Table.js"],"names":["styled","withTheme","Cell","ScrollTable","div","DataTable","Table","table","colors","headings","theme","isHeb","rows","renderHeadingRow","_cell","cellIndex","renderRow","_row","rowIndex","map","theadMarkup","tbodyMarkup"],"mappings":";;;AAAA,OAAOA,MAAP,IAAiBC,SAAjB,QAAkC,mBAAlC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,IAAMC,WAAW,GAAGH,MAAM,CAACI,GAAV;AAAA;AAAA;AAAA,wBAAjB;AAIA,IAAMC,SAAS,GAAGL,MAAM,CAACI,GAAV;AAAA;AAAA;AAAA,uBAAf;AAIA,IAAME,KAAK,GAAGN,MAAM,CAACO,KAAV;AAAA;AAAA;AAAA,mKAAX;AAWA,IAAMC,MAAM,GAAG;AACb,KAAG,WADU;AAEb,KAAG,gBAFU;AAGb,KAAG,QAHU;AAIb,KAAG,YAJU;AAKb,KAAG,OALU;AAMb,KAAG;AANU,CAAf;AASA,gBAAe,gBAAsC;AAAA,MAAnCC,QAAmC,QAAnCA,QAAmC;AAAA,MAAzBC,KAAyB,QAAzBA,KAAyB;AAAA,MAAlBC,KAAkB,QAAlBA,KAAkB;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAEnD,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAQC,SAAR;AAAA,WACvB,MAAC,IAAD;AACE,MAAA,GAAG,oBAAaA,SAAb,CADL;AAEE,MAAA,OAAO,EAAGN,QAAQ,CAACM,SAAD,CAFpB;AAGE,MAAA,MAAM,EAAE,IAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADuB;AAAA,GAAzB;;AAQA,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,IAAD,EAAOC,QAAP,EAAoB;AAElC,WACE;AAAI,MAAA,GAAG,gBAASA,QAAT,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGN,IAAI,CAACM,QAAD,CAAJ,CAAeC,GAAf,CAAmB,UAACL,KAAD,EAAQC,SAAR,EAAsB;AACxC,aACE,MAAC,IAAD;AACE,QAAA,GAAG,YAAKG,QAAL,cAAiBH,SAAjB,CADL;AAEE,QAAA,SAAS,EAAEP,MAAM,CAACO,SAAD,CAAN,IAAqB,WAFlC;AAGE,QAAA,OAAO,EAAEH,IAAI,CAACM,QAAD,CAAJ,CAAeH,SAAf,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD,KARA,CADH,CADF;AAaD,GAfH;;AAkBE,MAAMK,WAAW,GACf;AACE,IAAA,IAAI,EAAC,KADP;AAEE,IAAA,GAAG,EAAC,SAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGX,QAAQ,CAACU,GAAT,CAAaN,gBAAb,CAHH,CADF;;AAQA,MAAMQ,WAAW,GAAGT,IAAI,CAACO,GAAL,CAASH,SAAT,CAApB;AAEA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQI,WAAR,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQC,WAAR,CAFF,CADF,CADF,CADF;AAYH,CAlDD","sourcesContent":["import styled, { withTheme } from 'styled-components'\nimport Cell from './Cell'\n\nconst ScrollTable = styled.div`\n  overflow-x: auto;\n`\n\nconst DataTable = styled.div`\n  max-width: 100%;\n`\n\nconst Table = styled.table`\n  position: relative;\n  clear: both;\n  border-collapse: separate;\n  margin: 0 auto;\n  border-spacing: 0px;\n  background: #fff;\n  box-shadow: 0 1px 0 0 rgba(22, 29, 37, 0.05);\n  width: auto;\n`\n\nconst colors = {\n  0: 'onPrimary',\n  1: 'successDefault',\n  2: 'error2',\n  3: 'purpleComp',\n  4: 'error',\n  5: 'complimentary'\n}\n\nexport default ({ headings, theme, isHeb, rows }) => {\n\n  const renderHeadingRow = (_cell, cellIndex) => (\n    <Cell\n      key={`heading-${cellIndex}`}\n      content={ headings[cellIndex] }\n      header={true}\n    />\n  )\n\n  const renderRow = (_row, rowIndex) => {\n\n      return (\n        <tr key={`row-${rowIndex}`}>\n          {rows[rowIndex].map((_cell, cellIndex) => {\n            return (\n              <Cell\n                key={`${rowIndex}-${cellIndex}`}\n                cellColor={colors[cellIndex] || 'onPrimary'}\n                content={rows[rowIndex][cellIndex]}\n              />\n            )\n          })}\n        </tr>\n      )\n    };\n\n\n    const theadMarkup = (\n      <tr\n        role='row'\n        key=\"heading\">\n        {headings.map(renderHeadingRow)}\n      </tr>\n    );\n\n    const tbodyMarkup = rows.map(renderRow);\n\n    return (\n      <DataTable>\n        <ScrollTable>\n          <Table>\n            <thead>{theadMarkup}</thead>\n            <tbody>{tbodyMarkup}</tbody>\n          </Table>\n        </ScrollTable>\n      </DataTable>\n    );\n\n\n}\n"]},"metadata":{},"sourceType":"module"}