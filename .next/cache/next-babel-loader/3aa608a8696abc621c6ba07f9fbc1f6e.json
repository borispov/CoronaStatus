{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useEffect } from 'react';\n\nfunction getCountry(list) {\n  return function (queryCountry) {\n    return list.reduce(function (a, c) {\n      return c.country === queryCountry ? c : a;\n    }, {});\n  };\n}\n\nfunction useStats(url) {\n  var _useState = useState(),\n      stats = _useState[0],\n      setStats = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  useEffect(function () {\n    function fetchData() {\n      var currentCountry, data;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(axios.get('https://extreme-ip-lookup.com/json/').then(function (res) {\n                return res.data.country;\n              })[\"catch\"](function (e) {\n                return console.log('Request failed');\n              }));\n\n            case 3:\n              currentCountry = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(fetch(url).then(function (res) {\n                return res.json();\n              }).then(function (d) {\n                return getCountry(d)(\"Israel\");\n              })[\"catch\"](function (err) {\n                return setError(err);\n              }));\n\n            case 6:\n              data = _context.sent;\n              setStats(data);\n              setLoading(false);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData();\n  }, []);\n  return {\n    stats: stats,\n    loading: loading,\n    error: error\n  };\n}\n\nexport default useStats;","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/utils/useStats.js"],"names":["useState","useEffect","getCountry","list","queryCountry","reduce","a","c","country","useStats","url","stats","setStats","loading","setLoading","error","setError","fetchData","axios","get","then","res","data","e","console","log","currentCountry","fetch","json","d","err"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAAyB;AACvB,SAAO,UAASC,YAAT,EAAuB;AAC5B,WAAOD,IAAI,CAACE,MAAL,CAAY,UAACC,CAAD,EAAGC,CAAH;AAAA,aAASA,CAAC,CAACC,OAAF,KAAcJ,YAAd,GAA6BG,CAA7B,GAAiCD,CAA1C;AAAA,KAAZ,EAAyD,EAAzD,CAAP;AACD,GAFD;AAGD;;AAED,SAASG,QAAT,CAAkBC,GAAlB,EAAuB;AAAA,kBACKV,QAAQ,EADb;AAAA,MACdW,KADc;AAAA,MACPC,QADO;;AAAA,mBAESZ,QAAQ,CAAC,KAAD,CAFjB;AAAA,MAEda,OAFc;AAAA,MAELC,UAFK;;AAAA,mBAGKd,QAAQ,CAAC,KAAD,CAHb;AAAA,MAGde,KAHc;AAAA,MAGPC,QAHO;;AAKrBf,EAAAA,SAAS,CAAC,YAAM;AAEd,aAAegB,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACEH,cAAAA,UAAU,CAAC,IAAD,CAAV;AADF;AAAA,+CAE+BI,KAAK,CAC/BC,GAD0B,CACtB,qCADsB,EAE1BC,IAF0B,CAErB,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAACC,IAAJ,CAASd,OAAb;AAAA,eAFkB,WAGpB,UAAAe,CAAC;AAAA,uBAAIC,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAAJ;AAAA,eAHmB,CAF/B;;AAAA;AAEQC,cAAAA,cAFR;AAAA;AAAA,+CAOqBC,KAAK,CAACjB,GAAD,CAAL,CACdU,IADc,CACT,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAACO,IAAJ,EAAJ;AAAA,eADM,EAEdR,IAFc,CAET,UAAAS,CAAC;AAAA,uBAAI3B,UAAU,CAAC2B,CAAD,CAAV,CAAc,QAAd,CAAJ;AAAA,eAFQ,WAGR,UAAAC,GAAG;AAAA,uBAAId,QAAQ,CAACc,GAAD,CAAZ;AAAA,eAHK,CAPrB;;AAAA;AAOQR,cAAAA,IAPR;AAWEV,cAAAA,QAAQ,CAACU,IAAD,CAAR;AACAR,cAAAA,UAAU,CAAC,KAAD,CAAV;;AAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcAG,IAAAA,SAAS;AACV,GAjBQ,EAiBN,EAjBM,CAAT;AAkBA,SAAO;AACLN,IAAAA,KAAK,EAALA,KADK;AACEE,IAAAA,OAAO,EAAPA,OADF;AACWE,IAAAA,KAAK,EAALA;AADX,GAAP;AAGD;;AAED,eAAeN,QAAf","sourcesContent":["import { useState, useEffect } from 'react'\n\nfunction getCountry(list){\n  return function(queryCountry) {\n    return list.reduce((a,c) => c.country === queryCountry ? c : a, {})\n  }\n}\n\nfunction useStats(url) {\n  const [stats, setStats] = useState();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n\n    async function fetchData() {\n      setLoading(true)\n      const currentCountry = await axios\n        .get('https://extreme-ip-lookup.com/json/')\n        .then(res => res.data.country)\n        .catch(e => console.log('Request failed'))\n\n      const data = await fetch(url)\n          .then(res => res.json())\n          .then(d => getCountry(d)(\"Israel\"))\n          .catch(err => setError(err))\n      setStats(data)\n      setLoading(false)\n    }\n    fetchData();\n  }, [])\n  return {\n    stats, loading, error\n  }\n}\n\nexport default useStats;\n"]},"metadata":{},"sourceType":"module"}