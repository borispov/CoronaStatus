{"ast":null,"code":"var _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/components/Stats.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport useTodayStats from '../utils/useTodayStats';\nimport useTime from '../utils/useTime';\nimport StatBlock from './StatBlock';\nimport React from 'react';\nimport styled from 'styled-components';\nimport Spinner from './Spinner';\nimport Bar from './Bar';\nimport Chart from './Chart';\nconst Container = styled.div`\n  max-width: 760px;\n  margin: 0 auto;\n  text-align: center;\n`;\nconst Grid = styled.div`\n  margin-top: 32px;\n  display: flex;\n  justify-content: space-evenly;\n`;\nexport default function Stats({\n  cn = '',\n  isWorld,\n  timeData,\n  todayWorld,\n  todayStats\n}) {\n  const renderTimeGraph = timeData && __jsx(Chart, _extends({\n    type: \"line\"\n  }, timeData, {\n    label: isWorld && 'World' + '\\'s Outbreak Over Time',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })) || __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \" Loading Time Graph ... \");\n\n  console.log(todayStats);\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    style: {\n      fontSize: '20px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Status for:   \", __jsx(\"span\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, cn)), todayStats && __jsx(React.Fragment, null, __jsx(Chart, {\n    type: \"bar\",\n    info: todayStats,\n    label: cn + '\\'s Outbreak',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), __jsx(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(StatBlock, {\n    title: \"Infected\",\n    data: todayStats.cases,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), __jsx(StatBlock, {\n    title: \"Recovered\",\n    data: todayStats.recovered,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), __jsx(StatBlock, {\n    title: \"Total Deaths\",\n    data: todayStats.deaths,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), __jsx(StatBlock, {\n    title: \"New Cases Today\",\n    data: todayStats.todayCases,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }))), renderTimeGraph);\n}","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/components/Stats.js"],"names":["useTodayStats","useTime","StatBlock","React","styled","Spinner","Bar","Chart","Container","div","Grid","Stats","cn","isWorld","timeData","todayWorld","todayStats","renderTimeGraph","console","log","fontSize","fontWeight","cases","recovered","deaths","todayCases"],"mappings":";;;;;AAAA,OAAOA,aAAP,MAA0B,wBAA1B;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAGA,MAAMC,SAAS,GAAGJ,MAAM,CAACK,GAAI;;;;CAA7B;AAMA,MAAMC,IAAI,GAAGN,MAAM,CAACK,GAAI;;;;CAAxB;AAMA,eAAe,SAASE,KAAT,CAAe;AAAEC,EAAAA,EAAE,GAAG,EAAP;AAAWC,EAAAA,OAAX;AAAoBC,EAAAA,QAApB;AAA8BC,EAAAA,UAA9B;AAA0CC,EAAAA;AAA1C,CAAf,EAAuE;AAEpF,QAAMC,eAAe,GAAGH,QAAQ,IAC1B,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC;AAAZ,KAAuBA,QAAvB;AAAiC,IAAA,KAAK,EAAED,OAAO,IAAI,UAAU,wBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADkB,IAElB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFN;;AAIAK,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AAGA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,KAAK,EAAE;AAACI,MAAAA,QAAQ,EAAE;AAAX,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA6C;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,UAAU,EAAE;AAAb,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCT,EAApC,CAA7C,CADF,EAGII,UAAU,IACR,4BACA,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,KAAZ;AAAkB,IAAA,IAAI,EAAEA,UAAxB;AAAoC,IAAA,KAAK,EAAEJ,EAAE,GAAG,cAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,KAAK,EAAC,UADR;AAEE,IAAA,IAAI,EAAEI,UAAU,CAACM,KAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE,MAAC,SAAD;AACE,IAAA,KAAK,EAAC,WADR;AAEE,IAAA,IAAI,EAAEN,UAAU,CAACO,SAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EASE,MAAC,SAAD;AACE,IAAA,KAAK,EAAC,cADR;AAEE,IAAA,IAAI,EAAEP,UAAU,CAACQ,MAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAaE,MAAC,SAAD;AACE,IAAA,KAAK,EAAC,iBADR;AAEE,IAAA,IAAI,EAAER,UAAU,CAACS,UAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CAFA,CAJN,EA0BGR,eA1BH,CADF;AAgCD","sourcesContent":["import useTodayStats from '../utils/useTodayStats'\nimport useTime from '../utils/useTime'\nimport StatBlock from './StatBlock'\nimport React from 'react'\nimport styled from 'styled-components'\nimport Spinner from './Spinner'\nimport Bar from './Bar'\nimport Chart from './Chart'\n\n\nconst Container = styled.div`\n  max-width: 760px;\n  margin: 0 auto;\n  text-align: center;\n`\n\nconst Grid = styled.div`\n  margin-top: 32px;\n  display: flex;\n  justify-content: space-evenly;\n`\n\nexport default function Stats({ cn = '', isWorld, timeData, todayWorld, todayStats }) {\n\n  const renderTimeGraph = timeData \n    && (<Chart type='line' {...timeData} label={isWorld && 'World' + '\\'s Outbreak Over Time'} />)\n    || (<div> Loading Time Graph ... </div>)\n\n  console.log(todayStats);\n\n\n  return (\n    <Container>\n      <h1 style={{fontSize: '20px'}}>Status for:   <span style={{fontWeight: 'bold'}}>{cn}</span></h1>\n      {\n        todayStats &&\n          <>\n          <Chart type='bar' info={todayStats} label={cn + '\\'s Outbreak'} />\n          <Grid>\n            <StatBlock \n              title=\"Infected\"\n              data={todayStats.cases}\n            />\n            <StatBlock \n              title=\"Recovered\"\n              data={todayStats.recovered}\n            />\n            <StatBlock \n              title=\"Total Deaths\"\n              data={todayStats.deaths}\n            />\n            <StatBlock \n              title=\"New Cases Today\"\n              data={todayStats.todayCases}\n            />\n          </Grid>\n        </>\n      }\n      {renderTimeGraph}\n\n\n    </Container>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}