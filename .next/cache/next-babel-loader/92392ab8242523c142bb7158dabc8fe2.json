{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport App from 'next/app';\nimport Router from 'next/router';\nimport { ThemeProvider } from 'styled-components';\nimport GlobalStyle from './Global';\nimport Header from '../components/Header';\nimport { Button } from '../components/S';\nimport { MoonIcon, SunIcon, WorldIcon } from '../components/Icons/ThemeIcon';\nimport { themes } from '../utils/themes';\nimport * as gtag from '../utils/gtag';\nRouter.events.on('routeChangeComplete', function (url) {\n  return gtag.pageview(url);\n});\n\nvar lightTheme = function lightTheme() {\n  return _objectSpread({}, themes['common'], {}, themes['light']);\n};\n\nvar darkTheme = function darkTheme() {\n  return _objectSpread({}, themes['common'], {}, themes['dark']);\n};\n\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  function MyApp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MyApp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MyApp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      theme: lightTheme(),\n      isHeb: true\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleLang\", function () {\n      return _this.setState(function (prevState) {\n        return _objectSpread({}, prevState, {\n          isHeb: !prevState.isHeb\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setDarkTheme\", function () {\n      return _this.setState(function (prevState) {\n        return _objectSpread({}, prevState, {\n          theme: darkTheme()\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setLightTheme\", function () {\n      return _this.setState(function (prevState) {\n        return _objectSpread({}, prevState, {\n          theme: lightTheme()\n        });\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          theme = _this$state.theme,\n          isHeb = _this$state.isHeb;\n      var displayLang = isHeb ? 'English' : 'עברית';\n      var isLight = theme.type === 'light';\n\n      var themeButton = isLight && __jsx(MoonIcon, {\n        onClick: this.setDarkTheme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }) || __jsx(SunIcon, {\n        onClick: this.setLightTheme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      });\n\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps;\n      return __jsx(ThemeProvider, {\n        theme: theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, __jsx(GlobalStyle, {\n        isHeb: isHeb,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), __jsx(Header, {\n        title: \"nCorona\",\n        isHeb: isHeb,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, themeButton, __jsx(Button, {\n        langBtn: true,\n        onClick: this.toggleLang,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          padding: '4px',\n          justifyContent: 'space-between',\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, __jsx(WorldIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), displayLang))), __jsx(Component, _extends({}, pageProps, {\n        isHeb: isHeb,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport { MyApp as default };","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/pages/_app.js"],"names":["App","Router","ThemeProvider","GlobalStyle","Header","Button","MoonIcon","SunIcon","WorldIcon","themes","gtag","events","on","url","pageview","lightTheme","darkTheme","MyApp","theme","isHeb","setState","prevState","state","displayLang","isLight","type","themeButton","setDarkTheme","setLightTheme","props","Component","pageProps","toggleLang","display","alignItems","padding","justifyContent","width"],"mappings":"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","sourcesContent":["import App from 'next/app'\nimport Router from 'next/router'\nimport { ThemeProvider } from 'styled-components'\nimport GlobalStyle from './Global'\n\nimport Header from '../components/Header'\nimport { Button } from '../components/S'\n\nimport { MoonIcon, SunIcon, WorldIcon } from '../components/Icons/ThemeIcon'\nimport { themes } from '../utils/themes'\nimport * as gtag from '../utils/gtag'\n\nRouter.events.on('routeChangeComplete', url => gtag.pageview(url))\n\nconst lightTheme = () => ({\n  ...themes['common'],\n  ...themes['light'],\n})\n\nconst darkTheme = () => ({\n  ...themes['common'],\n  ...themes['dark'],\n})\n\nexport default class MyApp extends App {\n\n  state = {\n    theme: lightTheme(),\n    isHeb: true,\n  }\n\n  toggleLang =    () => this.setState(prevState => ({ ...prevState, isHeb: !prevState.isHeb }))\n  setDarkTheme =  () => this.setState(prevState => ({ ...prevState, theme: darkTheme() }))\n  setLightTheme = () => this.setState(prevState => ({ ...prevState, theme: lightTheme() }))\n\n  render() {\n    const { theme, isHeb } = this.state\n    const displayLang = isHeb ? 'English' : 'עברית'\n    const isLight = theme.type === 'light'\n    const themeButton = (isLight && <MoonIcon onClick={this.setDarkTheme} />) || <SunIcon onClick={this.setLightTheme} />\n    const { Component, pageProps } = this.props\n\n    return (\n      <ThemeProvider theme={theme}>\n        <GlobalStyle isHeb={isHeb}/>\n        <Header title='nCorona' isHeb={isHeb}>\n          { themeButton }\n          <Button langBtn onClick={this.toggleLang}>\n            <div style={{display: 'flex', alignItems: 'center', padding: '4px', justifyContent: 'space-between', width: '100%'}}>\n              <WorldIcon />\n              {displayLang}\n            </div>\n          </Button>\n        </Header>\n        <Component {...pageProps} isHeb={isHeb}/>\n      </ThemeProvider>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}