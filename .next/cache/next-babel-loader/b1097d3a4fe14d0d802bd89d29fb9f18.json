{"ast":null,"code":"var _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/components/Bar.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Bar } from 'react-chartjs-2';\nconst data = {\n  labels: [],\n  datasets: [{\n    label: 'Outbreak Info',\n    backgroundColor: ['rgba(112, 120, 176, 1)', 'rgba(255,99,132,1)', 'rgba(213, 199, 23, 1)', 'rgba(245, 158, 102, 1)', 'rgba(18, 18, 21, 1)'],\n    borderColor: 'rgba(255,99,132,0.8)',\n    borderWidth: 1,\n    hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n    hoverBorderColor: 'rgba(255,99,132,1)',\n    data: []\n  }]\n};\n\nconst prop = o => k => o[k];\n\nconst setData = (old, update) => {\n  const n = _objectSpread({}, old, {\n    labels: Object.keys(update),\n    datasets: [_objectSpread({}, old.datasets[0], {\n      data: Object.values(update)\n    })]\n  });\n\n  return n;\n};\n\nexport default (({\n  info\n}) => {\n  const allData = setData(data, info);\n  console.log(allData);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Outbreak Information\"), __jsx(Bar, {\n    data: allData,\n    width: 100,\n    height: 50,\n    options: {\n      maintainAspectRatio: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }));\n});","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/components/Bar.js"],"names":["Bar","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","prop","o","k","setData","old","update","n","Object","keys","values","info","allData","console","log","maintainAspectRatio"],"mappings":";;;;;;;;;;AAAA,SAASA,GAAT,QAAoB,iBAApB;AAEA,MAAMC,IAAI,GAAG;AACXC,EAAAA,MAAM,EAAE,EADG;AAEXC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,KAAK,EAAE,eADT;AAEEC,IAAAA,eAAe,EAAE,CACf,wBADe,EAEf,oBAFe,EAGf,uBAHe,EAIf,wBAJe,EAKf,qBALe,CAFnB;AASEC,IAAAA,WAAW,EAAE,sBATf;AAUEC,IAAAA,WAAW,EAAE,CAVf;AAWEC,IAAAA,oBAAoB,EAAE,sBAXxB;AAYEC,IAAAA,gBAAgB,EAAE,oBAZpB;AAaER,IAAAA,IAAI,EAAE;AAbR,GADQ;AAFC,CAAb;;AAqBA,MAAMS,IAAI,GAAGC,CAAC,IAAIC,CAAC,IAAID,CAAC,CAACC,CAAD,CAAxB;;AAEA,MAAMC,OAAO,GAAG,CAACC,GAAD,EAAMC,MAAN,KAAiB;AAC/B,QAAMC,CAAC,qBACFF,GADE;AAELZ,IAAAA,MAAM,EAAEe,MAAM,CAACC,IAAP,CAAYH,MAAZ,CAFH;AAGLZ,IAAAA,QAAQ,EAAE,mBAEHW,GAAG,CAACX,QAAJ,CAAa,CAAb,CAFG;AAGNF,MAAAA,IAAI,EAAEgB,MAAM,CAACE,MAAP,CAAcJ,MAAd;AAHA;AAHL,IAAP;;AAUA,SAAOC,CAAP;AACD,CAZD;;AAcA,gBAAe,CAAC;AAAEI,EAAAA;AAAF,CAAD,KAAc;AAE3B,QAAMC,OAAO,GAAGR,OAAO,CAACZ,IAAD,EAAOmB,IAAP,CAAvB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE,MAAC,GAAD;AACE,IAAA,IAAI,EAAEA,OADR;AAEE,IAAA,KAAK,EAAE,GAFT;AAGE,IAAA,MAAM,EAAE,EAHV;AAIE,IAAA,OAAO,EAAE;AACPG,MAAAA,mBAAmB,EAAE;AADd,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAaD,CAjBD","sourcesContent":["import { Bar } from 'react-chartjs-2';\n\nconst data = {\n  labels: [],\n  datasets: [\n    {\n      label: 'Outbreak Info',\n      backgroundColor: [\n        'rgba(112, 120, 176, 1)',\n        'rgba(255,99,132,1)',\n        'rgba(213, 199, 23, 1)',\n        'rgba(245, 158, 102, 1)',\n        'rgba(18, 18, 21, 1)'\n      ],\n      borderColor: 'rgba(255,99,132,0.8)',\n      borderWidth: 1,\n      hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n      hoverBorderColor: 'rgba(255,99,132,1)',\n      data: []\n    }\n  ]\n};\n\nconst prop = o => k => o[k]\n\nconst setData = (old, update) => {\n  const n = {\n    ...old,\n    labels: Object.keys(update),\n    datasets: [\n      {\n        ...old.datasets[0],\n        data: Object.values(update)\n      }\n    ]\n  }\n  return n\n}\n\nexport default ({ info }) => {\n\n  const allData = setData(data, info)\n  console.log(allData);\n  return (\n    <div>\n      <h2>Outbreak Information</h2>\n      <Bar\n        data={allData}\n        width={100}\n        height={50}\n        options={{\n          maintainAspectRatio: false\n        }}\n      />\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}