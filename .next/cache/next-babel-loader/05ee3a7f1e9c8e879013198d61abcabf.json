{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport sortForChart from './sortForChart';\nvar baseURL = \"http://46.101.156.51:3003/api/v1/alltime/\";\n\nfunction currentCountry() {\n  return _regeneratorRuntime.async(function currentCountry$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios.get('https://extreme-ip-lookup.com/json/').then(function (res) {\n            return res.data.country;\n          })[\"catch\"](function (e) {\n            return 'israel';\n          }));\n\n        case 2:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction useTime(country) {\n  var url,\n      _useState,\n      timeStats,\n      setData,\n      _useState2,\n      countryStats,\n      setCountryStats,\n      _useState3,\n      timeLoading,\n      setLoading,\n      _useState4,\n      timeError,\n      setError,\n      fetchData,\n      _countryStats,\n      countryLoading,\n      countryError,\n      _args3 = arguments;\n\n  return _regeneratorRuntime.async(function useTime$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          fetchData = function _ref(cn) {\n            var URL, data, timeStats;\n            return _regeneratorRuntime.async(function fetchData$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    setLoading(true);\n                    setError();\n\n                    if (!(cn === 'init')) {\n                      _context2.next = 10;\n                      break;\n                    }\n\n                    _context2.t1 = baseURL;\n                    _context2.next = 6;\n                    return _regeneratorRuntime.awrap(currentCountry());\n\n                  case 6:\n                    _context2.t2 = _context2.sent;\n                    _context2.t0 = _context2.t1 + _context2.t2;\n                    _context2.next = 11;\n                    break;\n\n                  case 10:\n                    _context2.t0 = cn !== 'world' ? baseURL + cn : baseURL;\n\n                  case 11:\n                    URL = _context2.t0;\n                    _context2.next = 14;\n                    return _regeneratorRuntime.awrap(axios.get(URL).then(function (res) {\n                      return res.data;\n                    })[\"catch\"](function (err) {\n                      return setError(err);\n                    }));\n\n                  case 14:\n                    data = _context2.sent;\n                    timeStats = sortForChart(data);\n                    setData(timeStats);\n                    setLoading(false);\n\n                  case 18:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          };\n\n          url = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : baseURL;\n          _useState = useState(), timeStats = _useState[0], setData = _useState[1];\n          _useState2 = useState(), countryStats = _useState2[0], setCountryStats = _useState2[1];\n          _useState3 = useState(false), timeLoading = _useState3[0], setLoading = _useState3[1];\n          _useState4 = useState(false), timeError = _useState4[0], setError = _useState4[1];\n          useEffect(function () {\n            fetchData('world');\n          }, []);\n          useEffect(function () {\n            fetchData();\n          }, [country]);\n\n          if (!(country !== 'world')) {\n            _context3.next = 13;\n            break;\n          }\n\n          _countryStats = timeStats;\n          countryLoading = timeLoading;\n          countryError = timeError;\n          return _context3.abrupt(\"return\", {\n            countryStats: _countryStats,\n            countryLoading: countryLoading,\n            countryError: countryError\n          });\n\n        case 13:\n          return _context3.abrupt(\"return\", {\n            timeStats: timeStats,\n            timeLoading: timeLoading,\n            timeError: timeError\n          });\n\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexport default useTime;","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/utils/useTime.js"],"names":["useState","useEffect","axios","sortForChart","baseURL","currentCountry","get","then","res","data","country","e","useTime","fetchData","cn","setLoading","setError","URL","err","timeStats","setData","url","countryStats","setCountryStats","timeLoading","timeError","countryLoading","countryError"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,IAAMC,OAAO,8CAAb;;AAEA,SAAeC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACeH,KAAK,CACfI,GADU,CACN,qCADM,EAEVC,IAFU,CAEL,UAAAC,GAAG;AAAA,mBAAIA,GAAG,CAACC,IAAJ,CAASC,OAAb;AAAA,WAFE,WAGJ,UAAAC,CAAC;AAAA,mBAAI,QAAJ;AAAA,WAHG,CADf;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOA,SAAeC,OAAf,CAAuBF,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMiBG,SANjB;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAMiBA,UAAAA,SANjB,iBAM2BC,EAN3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAOIC,oBAAAA,UAAU,CAAC,IAAD,CAAV;AACAC,oBAAAA,QAAQ;;AARZ,0BAUgBF,EAAE,KAAK,MAVvB;AAAA;AAAA;AAAA;;AAAA,mCAWQV,OAXR;AAAA;AAAA,qDAWwBC,cAAc,EAXtC;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,mCAYQS,EAAE,KAAK,OAAP,GACEV,OAAO,GAAGU,EADZ,GAEEV,OAdV;;AAAA;AAUUa,oBAAAA,GAVV;AAAA;AAAA,qDAgBuBf,KAAK,CAACI,GAAN,CAAUW,GAAV,EAChBV,IADgB,CACX,UAAAC,GAAG;AAAA,6BAAIA,GAAG,CAACC,IAAR;AAAA,qBADQ,WAEV,UAAAS,GAAG;AAAA,6BAAIF,QAAQ,CAACE,GAAD,CAAZ;AAAA,qBAFO,CAhBvB;;AAAA;AAgBUT,oBAAAA,IAhBV;AAmBUU,oBAAAA,SAnBV,GAmBsBhB,YAAY,CAACM,IAAD,CAnBlC;AAoBIW,oBAAAA,OAAO,CAACD,SAAD,CAAP;AACAJ,oBAAAA,UAAU,CAAC,KAAD,CAAV;;AArBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAgCM,UAAAA,GAAhC,8DAAsCjB,OAAtC;AAAA,sBAC+BJ,QAAQ,EADvC,EACSmB,SADT,iBACoBC,OADpB;AAAA,uBAE0CpB,QAAQ,EAFlD,EAESsB,YAFT,kBAEuBC,eAFvB;AAAA,uBAGoCvB,QAAQ,CAAC,KAAD,CAH5C,EAGSwB,WAHT,kBAGsBT,UAHtB;AAAA,uBAIgCf,QAAQ,CAAC,KAAD,CAJxC,EAISyB,SAJT,kBAIoBT,QAJpB;AAwBEf,UAAAA,SAAS,CAAC,YAAM;AACdY,YAAAA,SAAS,CAAC,OAAD,CAAT;AACD,WAFQ,EAEN,EAFM,CAAT;AAIAZ,UAAAA,SAAS,CAAC,YAAM;AACdY,YAAAA,SAAS;AACV,WAFQ,EAEN,CAACH,OAAD,CAFM,CAAT;;AA5BF,gBAgCOA,OAAO,KAAK,OAhCnB;AAAA;AAAA;AAAA;;AAiCUY,UAAAA,aAjCV,GAiCyBH,SAjCzB;AAkCUO,UAAAA,cAlCV,GAkC2BF,WAlC3B;AAmCUG,UAAAA,YAnCV,GAmCyBF,SAnCzB;AAAA,4CAoCW;AAAEH,YAAAA,YAAY,EAAZA,aAAF;AAAgBI,YAAAA,cAAc,EAAdA,cAAhB;AAAgCC,YAAAA,YAAY,EAAZA;AAAhC,WApCX;;AAAA;AAAA,4CAuCS;AACLR,YAAAA,SAAS,EAATA,SADK;AACMK,YAAAA,WAAW,EAAXA,WADN;AACmBC,YAAAA,SAAS,EAATA;AADnB,WAvCT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA4CA,eAAeb,OAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport sortForChart from './sortForChart'\n\nconst baseURL = `http://46.101.156.51:3003/api/v1/alltime/`\n\nasync function currentCountry(){\n  return await axios\n    .get('https://extreme-ip-lookup.com/json/')\n    .then(res => res.data.country)\n    .catch(e => 'israel')\n}\n\nasync function useTime(country, url = baseURL) {\n  const [timeStats, setData] = useState();\n  const [countryStats, setCountryStats] = useState();\n  const [timeLoading, setLoading] = useState(false);\n  const [timeError, setError] = useState(false);\n\n  async function fetchData(cn) {\n    setLoading(true)\n    setError()\n\n    const URL = cn === 'init'\n      ? baseURL + await currentCountry()\n      : cn !== 'world'\n        ? baseURL + cn\n        : baseURL\n\n    const data = await axios.get(URL)\n      .then(res => res.data)\n      .catch(err => setError(err))\n    const timeStats = sortForChart(data);\n    setData(timeStats)\n    setLoading(false)\n  }\n\n  useEffect(() => {\n    fetchData('world')\n  }, [])\n\n  useEffect(() => {\n    fetchData();\n  }, [country])\n\n  if ( country !== 'world' ) {\n    const countryStats = timeStats\n    const countryLoading = timeLoading\n    const countryError = timeError\n    return { countryStats, countryLoading, countryError }\n  }\n\n  return {\n    timeStats, timeLoading, timeError\n  }\n}\n\nexport default useTime;\n"]},"metadata":{},"sourceType":"module"}