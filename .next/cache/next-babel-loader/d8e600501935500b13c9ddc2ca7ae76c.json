{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport sortForChart from './sortForChart';\nvar baseURL = \"http://covid19.borisky.me:3003/api/v1/alltime/\";\n\nfunction worldTimeData() {\n  var _useState = useState(),\n      timeStats = _useState[0],\n      setData = _useState[1];\n\n  var _useState2 = useState(false),\n      timeLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      timeError = _useState3[0],\n      setError = _useState3[1];\n\n  useEffect(function () {\n    function fetchData() {\n      var data, sortedData;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log('RUNNINGGGGGG AGAIN');\n              setLoading(true);\n              setError();\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(axios.get(baseURL).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return setError(err);\n              }));\n\n            case 5:\n              data = _context.sent;\n              sortedData = sortForChart(data);\n              setData(sortedData);\n              setLoading(false);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData();\n  }, []);\n  return {\n    timeStats: timeStats,\n    timeLoading: timeLoading,\n    timeError: timeError\n  };\n}\n\nexport default worldTimeData;","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/utils/worldTimeData.js"],"names":["useState","useEffect","axios","sortForChart","baseURL","worldTimeData","timeStats","setData","timeLoading","setLoading","timeError","setError","fetchData","console","log","get","then","res","data","err","sortedData"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,IAAMC,OAAO,mDAAb;;AAEA,SAASC,aAAT,GAAyB;AAAA,kBACML,QAAQ,EADd;AAAA,MAChBM,SADgB;AAAA,MACLC,OADK;;AAAA,mBAEWP,QAAQ,CAAC,KAAD,CAFnB;AAAA,MAEhBQ,WAFgB;AAAA,MAEHC,UAFG;;AAAA,mBAGOT,QAAQ,CAAC,KAAD,CAHf;AAAA,MAGhBU,SAHgB;AAAA,MAGLC,QAHK;;AAKvBV,EAAAA,SAAS,CAAC,YAAM;AACd,aAAeW,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACEC,cAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAL,cAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,cAAAA,QAAQ;AAHV;AAAA,+CAIqBT,KAAK,CAACa,GAAN,CAAUX,OAAV,EAChBY,IADgB,CACX,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAACC,IAAR;AAAA,eADQ,WAEV,UAAAC,GAAG;AAAA,uBAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,eAFO,CAJrB;;AAAA;AAIQD,cAAAA,IAJR;AAOQE,cAAAA,UAPR,GAOqBjB,YAAY,CAACe,IAAD,CAPjC;AAQEX,cAAAA,OAAO,CAACa,UAAD,CAAP;AACAX,cAAAA,UAAU,CAAC,KAAD,CAAV;;AATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWAG,IAAAA,SAAS;AACV,GAbQ,EAaN,EAbM,CAAT;AAeA,SAAO;AACLN,IAAAA,SAAS,EAATA,SADK;AACME,IAAAA,WAAW,EAAXA,WADN;AACmBE,IAAAA,SAAS,EAATA;AADnB,GAAP;AAGD;;AAED,eAAeL,aAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport sortForChart from './sortForChart'\n\nconst baseURL = `http://covid19.borisky.me:3003/api/v1/alltime/`\n\nfunction worldTimeData() {\n  const [timeStats, setData] = useState();\n  const [timeLoading, setLoading] = useState(false);\n  const [timeError, setError] = useState(false);\n\n  useEffect(() => {\n    async function fetchData() {\n      console.log('RUNNINGGGGGG AGAIN');\n      setLoading(true)\n      setError()\n      const data = await axios.get(baseURL)\n        .then(res => res.data)\n        .catch(err => setError(err))\n      const sortedData = sortForChart(data);\n      setData(sortedData)\n      setLoading(false)\n    }\n    fetchData()\n  }, [])\n\n  return {\n    timeStats, timeLoading, timeError\n  }\n}\n\nexport default worldTimeData;\n"]},"metadata":{},"sourceType":"module"}