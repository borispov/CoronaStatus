{"ast":null,"code":"var _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/components/Stats.js\";\nvar __jsx = React.createElement;\nimport useTodayStats from '../utils/useTodayStats';\nimport useTime from '../utils/useTime';\nimport StatBlock from './StatBlock';\nimport React from 'react';\nimport styled from 'styled-components';\nimport Spinner from './Spinner';\nimport Bar from './Bar';\nimport Chart from './Chart';\nconst vocab = {\n  'cases': 'infected',\n  'recovered': 'recovered',\n  'country': 'country',\n  'deaths': 'deaths',\n  'todayCases': 'new today'\n};\n\nconst prop = o => k => o[k];\n\nconst switchToVocab = word => vocab[word];\n\nconst Container = styled.div`\n  max-width: 760px;\n  margin: 0 auto;\n  text-align: center;\n`;\nconst Grid = styled.div`\n  margin-top: 64px;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 1.5rem;\n`;\nexport default function Stats({\n  url,\n  cn = '',\n  search\n}) {\n  const {\n    todayStats,\n    error,\n    loading\n  } = useTodayStats(url, cn);\n  const {\n    worldStats\n  } = useTime();\n  if (error) return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \" We've encountered an Error. Maybe you typed wrong country\");\n  if (!todayStats) return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }));\n  const {\n    country,\n    cases,\n    recovered,\n    deaths,\n    todayCases\n  } = todayStats;\n  const o = {\n    cases,\n    todayCases,\n    recovered,\n    deaths\n  };\n\n  const organizeData = d => {\n    const mapToKeyword = k => ({\n      [switchToVocab(k)]: prop(d)(k)\n    });\n\n    return Object.keys(d).map(mapToKeyword);\n  };\n\n  const organizedData = organizeData(o);\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    style: {\n      fontSize: '20px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Status for:   \", __jsx(\"span\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, country)), __jsx(Chart, {\n    type: \"bar\",\n    info: organizedData,\n    label: country + '\\'s Outbreak',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), __jsx(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(StatBlock, {\n    title: \"Infected\",\n    data: cases,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), __jsx(StatBlock, {\n    title: \"Recovered\",\n    data: recovered,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), __jsx(StatBlock, {\n    title: \"Total Deaths\",\n    data: deaths,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), __jsx(StatBlock, {\n    title: \"New Cases Today\",\n    data: todayCases,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/components/Stats.js"],"names":["useTodayStats","useTime","StatBlock","React","styled","Spinner","Bar","Chart","vocab","prop","o","k","switchToVocab","word","Container","div","Grid","Stats","url","cn","search","todayStats","error","loading","worldStats","country","cases","recovered","deaths","todayCases","organizeData","d","mapToKeyword","Object","keys","map","organizedData","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import useTodayStats from '../utils/useTodayStats'\nimport useTime from '../utils/useTime'\nimport StatBlock from './StatBlock'\nimport React from 'react'\nimport styled from 'styled-components'\nimport Spinner from './Spinner'\nimport Bar from './Bar'\nimport Chart from './Chart'\n\nconst vocab = {\n  'cases': 'infected',\n  'recovered': 'recovered',\n  'country': 'country',\n  'deaths': 'deaths',\n  'todayCases': 'new today',\n}\n\nconst prop = o => k => o[k]\nconst switchToVocab = word => vocab[word]\n\nconst Container = styled.div`\n  max-width: 760px;\n  margin: 0 auto;\n  text-align: center;\n`\n\nconst Grid = styled.div`\n  margin-top: 64px;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 1.5rem;\n`\n\nexport default function Stats({ url, cn = '', search }) {\n\n  const { todayStats, error, loading } = useTodayStats(url, cn);\n  const { worldStats } = useTime()\n\n  if (error) return <div> We've encountered an Error. Maybe you typed wrong country</div>\n  if (!todayStats) return <div><Spinner /></div>\n\n  const {\n    country,\n    cases,\n    recovered,\n    deaths,\n    todayCases,\n  } = todayStats\n\n  const o = {\n    cases, todayCases, recovered, deaths\n  }\n\n  const organizeData = d => {\n    const mapToKeyword = (k) => ({[switchToVocab(k)]: prop(d)(k)})\n    return Object.keys(d).map(mapToKeyword)\n  }\n  const organizedData = organizeData(o)\n\n  return (\n    <Container>\n\n      <h1 style={{fontSize: '20px'}}>Status for:   <span style={{fontWeight: 'bold'}}>{country}</span></h1>\n\n      <Chart type='bar' info={organizedData} label={country + '\\'s Outbreak'} />\n\n      <Grid>\n        <StatBlock \n          title=\"Infected\"\n          data={cases}\n        />\n        <StatBlock \n          title=\"Recovered\"\n          data={recovered}\n        />\n        <StatBlock \n          title=\"Total Deaths\"\n          data={deaths}\n        />\n        <StatBlock \n          title=\"New Cases Today\"\n          data={todayCases}\n        />\n      </Grid>\n\n    </Container>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}