{"ast":null,"code":"var _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/components/LineChart.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Line, defaults } from 'react-chartjs-2';\nimport { useRef } from 'react';\nimport 'chartjs-plugin-datalabels';\nimport styled, { withTheme, keyframes } from 'styled-components';\nimport { FadeIn } from './S';\nimport useMobileDetect from '../utils/isMobile';\nimport useTranslation from '../hooks/useTranslation';\ndefaults.global.defaultFontFamily = \"'PT Sans', sans-serif\";\nconst Div = styled.div.withConfig({\n  displayName: \"LineChart__Div\",\n  componentId: \"sc-9esmyi-0\"\n})([\"margin-top:32px;margin-left:auto;margin-right:auto;margin-bottom:48px;height:375px;text-align:center;width:80%;direction:rtl;> *{direction:rtl;}h1{text-shadow:\", \";}canvas{border-radius:8px;}@media (max-width:560px){height:40vh;margin-bottom:48px;width:100vw;max-width:100%;}\"], ({\n  theme\n}) => theme.shadows[1]);\nconst noChartDisplaySettings = {\n  // backgroundColor: 'transparent',\n  // strokeColor: 'transparent',\n  // borderColor: 'transparent',\n  showLine: false,\n  borderWidth: 0,\n  pointHitRadius: 0,\n  pointHoverRadius: 0,\n  pointHoverBorderWidth: 0,\n  pointRadius: 0,\n  pointHitRadius: 0,\n  fill: false\n}; // if mobile, do by 8, if not do by 3\n\nconst LineChart = (props, {\n  theme\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const chartRef = useRef();\n\n  const showLastMonth = arr => arr.slice(Math.ceil(arr.length / 3.3));\n\n  const filterBy5 = (x, i) => useMobileDetect().isMobile() ? !(i % 8) : !(i % 2); // const subtractArray = arr => arr.filter(filterBy5).concat(arr[arr.length -1])\n\n\n  const subtractArray = arr => showLastMonth(arr);\n\n  const cutCaseCount = ({\n    data\n  }) => data.length > 30 ? subtractArray(data) : data;\n\n  const displayOnChart = dset => _objectSpread({}, dset, {\n    label: t(dset.label, 'chartLabels'),\n    data: cutCaseCount(dset),\n    fill: true\n  });\n\n  const dontDisplayOnChart = dset => _objectSpread({}, dset, {\n    label: t(dset.label, 'chartLabels'),\n    data: cutCaseCount(dset)\n  }, noChartDisplaySettings);\n\n  const parseDatasets = (arrayOfSets, fill) => arrayOfSets.map(sortForDisplay);\n\n  const sortForDisplay = dset => {\n    return dset.label !== 'cases' && dset.label !== 'נדבקים' ? dontDisplayOnChart(dset) : displayOnChart(dset);\n  };\n\n  const data2 = {\n    labels: props.labels.length > 30 ? subtractArray(props.labels) : props.labels,\n    datasets: parseDatasets(props.data, props.fill)\n  };\n\n  const data = canvas => {\n    const ctx = canvas.getContext('2d');\n    const gradient = ctx.createLinearGradient(0, 0, 0, 400);\n    gradient.addColorStop(0, 'rgba(250,174,50,1)');\n    gradient.addColorStop(1, 'rgba(250,174,50,0)');\n    data2.datasets[2].fill = gradient;\n    console.log(data2);\n    return _objectSpread({}, data2);\n  };\n\n  var options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    onAnimationComplete: function () {\n      this.showTooltip(this.datasets[0].points, true);\n    },\n    layout: {\n      padding: {\n        left: 5,\n        right: 15,\n        top: 15,\n        bottom: 15\n      }\n    },\n    animation: {\n      easing: 'easeInOutQuad',\n      duration: 999\n    },\n    scales: {\n      xAxes: [{\n        gridLines: {\n          backgroundColor: props.theme.analogous,\n          display: false,\n          drawBorder: true,\n          drawTicks: true,\n          color: 'rgba(0, 0, 0, 0.05)',\n          lineWidth: 1,\n          zeroLineWidth: 1\n        }\n      }],\n      yAxes: [{\n        ticks: {\n          display: true,\n          maxTicksLimit: 6\n        },\n        gridLines: {\n          backgroundColor: props.theme.primaryVariant,\n          display: false,\n          drawBorder: false,\n          // drawBorder: true,\n          drawTicks: true,\n          color: 'rgba(0, 0, 0, 0.05)',\n          lineWidth: 1,\n          zeroLineWidth: 1\n        }\n      }]\n    },\n    elements: {\n      line: {\n        tension: 0.5\n      }\n    },\n    legend: {\n      display: props.showLegend && true,\n      position: 'bottom'\n    },\n    tooltips: {\n      displayColors: true,\n      mode: 'index',\n      titleAlign: 'center',\n      position: 'nearest',\n      intersect: false,\n      bodySpacing: 4,\n      padding: 15,\n      titleFontFamily: 'Rubik',\n      backgroundColor: props.theme.dark,\n      titleFontColor: '#f9f9f9',\n      xPadding: 24,\n      yPadding: 14\n    },\n    hover: {\n      mode: 'index',\n      intersect: false\n    },\n    plugins: {\n      datalabels: {\n        display: ctx => {\n          let i = ctx.dataIndex;\n          if (ctx.dataset.label !== 'cases') return 0;\n          return i === Math.floor(ctx.dataset.data.length / 3) || i === Math.floor(ctx.dataset.data.length * 0.66) || i === ctx.dataset.data.length - 1; // return i === 0 || i === (ctx.dataset.data.length - 1) || !(i % 4)\n        },\n        align: ctx => {\n          return ctx.dataIndex === ctx.dataset.data.length - 1 ? 'end' : 'end';\n        },\n        anchor: 'end',\n        padding: {\n          left: 0,\n          right: -50,\n          top: -5,\n          bottom: 0\n        },\n        color: props.theme.color,\n        labels: {\n          title: {\n            font: {\n              weight: 'bold',\n              style: 'italic',\n              family: 'Rubik'\n            }\n          }\n        }\n      }\n    }\n  };\n  return __jsx(Div, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, __jsx(Line, {\n    label: props.label,\n    data: data,\n    width: 100,\n    options: options // height={40}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }));\n};\n\nexport default withTheme(LineChart);","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/components/LineChart.js"],"names":["Line","defaults","useRef","styled","withTheme","keyframes","FadeIn","useMobileDetect","useTranslation","global","defaultFontFamily","Div","div","theme","shadows","noChartDisplaySettings","showLine","borderWidth","pointHitRadius","pointHoverRadius","pointHoverBorderWidth","pointRadius","fill","LineChart","props","t","chartRef","showLastMonth","arr","slice","Math","ceil","length","filterBy5","x","i","isMobile","subtractArray","cutCaseCount","data","displayOnChart","dset","label","dontDisplayOnChart","parseDatasets","arrayOfSets","map","sortForDisplay","data2","labels","datasets","canvas","ctx","getContext","gradient","createLinearGradient","addColorStop","console","log","options","responsive","maintainAspectRatio","onAnimationComplete","showTooltip","points","layout","padding","left","right","top","bottom","animation","easing","duration","scales","xAxes","gridLines","backgroundColor","analogous","display","drawBorder","drawTicks","color","lineWidth","zeroLineWidth","yAxes","ticks","maxTicksLimit","primaryVariant","elements","line","tension","legend","showLegend","position","tooltips","displayColors","mode","titleAlign","intersect","bodySpacing","titleFontFamily","dark","titleFontColor","xPadding","yPadding","hover","plugins","datalabels","dataIndex","dataset","floor","align","anchor","title","font","weight","style","family"],"mappings":";;;;;;;;;;AAAA,SAASA,IAAT,EAAeC,QAAf,QAA+B,iBAA/B;AACA,SAASC,MAAT,QAAuB,OAAvB;AACA,OAAO,2BAAP;AACA,OAAOC,MAAP,IAAiBC,SAAjB,EAA4BC,SAA5B,QAA8C,mBAA9C;AACA,SAASC,MAAT,QAAuB,KAAvB;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AAEAP,QAAQ,CAACQ,MAAT,CAAgBC,iBAAhB,GAAoC,uBAApC;AAEA,MAAMC,GAAG,GAAGR,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,4RAaU,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,OAAN,CAAc,CAAd,CAbzB,CAAT;AA6BA,MAAMC,sBAAsB,GAAG;AAC7B;AACA;AACA;AACAC,EAAAA,QAAQ,EAAE,KAJmB;AAK7BC,EAAAA,WAAW,EAAE,CALgB;AAM7BC,EAAAA,cAAc,EAAE,CANa;AAO7BC,EAAAA,gBAAgB,EAAE,CAPW;AAQ7BC,EAAAA,qBAAqB,EAAE,CARM;AAS7BC,EAAAA,WAAW,EAAE,CATgB;AAU7BH,EAAAA,cAAc,EAAE,CAVa;AAW7BI,EAAAA,IAAI,EAAE;AAXuB,CAA/B,C,CAeA;;AAEA,MAAMC,SAAS,GAAG,CAAEC,KAAF,EAAS;AAACX,EAAAA;AAAD,CAAT,KAAsB;AAEtC,QAAM;AAAEY,IAAAA;AAAF,MAAQjB,cAAc,EAA5B;AACA,QAAMkB,QAAQ,GAAGxB,MAAM,EAAvB;;AAEA,QAAMyB,aAAa,GAAGC,GAAG,IAAIA,GAAG,CAACC,KAAJ,CAAUC,IAAI,CAACC,IAAL,CAAUH,GAAG,CAACI,MAAJ,GAAa,GAAvB,CAAV,CAA7B;;AAEA,QAAMC,SAAS,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU5B,eAAe,GAAG6B,QAAlB,KAA+B,EAAED,CAAC,GAAG,CAAN,CAA/B,GAA0C,EAAEA,CAAC,GAAG,CAAN,CAAtE,CAPsC,CAQtC;;;AAEA,QAAME,aAAa,GAAGT,GAAG,IAAID,aAAa,CAACC,GAAD,CAA1C;;AAEA,QAAMU,YAAY,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAaA,IAAI,CAACP,MAAL,GAAc,EAAd,GAAmBK,aAAa,CAACE,IAAD,CAAhC,GAAyCA,IAA3E;;AAEA,QAAMC,cAAc,GAAGC,IAAI,sBAAUA,IAAV;AAAgBC,IAAAA,KAAK,EAAEjB,CAAC,CAACgB,IAAI,CAACC,KAAN,EAAa,aAAb,CAAxB;AAAqDH,IAAAA,IAAI,EAAED,YAAY,CAACG,IAAD,CAAvE;AAA+EnB,IAAAA,IAAI,EAAE;AAArF,IAA3B;;AACA,QAAMqB,kBAAkB,GAAGF,IAAI,sBAAUA,IAAV;AAAgBC,IAAAA,KAAK,EAAEjB,CAAC,CAACgB,IAAI,CAACC,KAAN,EAAa,aAAb,CAAxB;AAAoDH,IAAAA,IAAI,EAAED,YAAY,CAACG,IAAD;AAAtE,KAAiF1B,sBAAjF,CAA/B;;AACA,QAAM6B,aAAa,GAAG,CAACC,WAAD,EAAcvB,IAAd,KAAuBuB,WAAW,CAACC,GAAZ,CAAgBC,cAAhB,CAA7C;;AACA,QAAMA,cAAc,GAAGN,IAAI,IAAI;AAC7B,WAAQA,IAAI,CAACC,KAAL,KAAe,OAAf,IAA0BD,IAAI,CAACC,KAAL,KAAe,QAA1C,GACHC,kBAAkB,CAACF,IAAD,CADf,GAEHD,cAAc,CAACC,IAAD,CAFlB;AAGD,GAJD;;AAOA,QAAMO,KAAK,GAAG;AACZC,IAAAA,MAAM,EAAEzB,KAAK,CAACyB,MAAN,CAAajB,MAAb,GAAsB,EAAtB,GAA2BK,aAAa,CAACb,KAAK,CAACyB,MAAP,CAAxC,GAAyDzB,KAAK,CAACyB,MAD3D;AAEZC,IAAAA,QAAQ,EAAEN,aAAa,CAACpB,KAAK,CAACe,IAAP,EAAaf,KAAK,CAACF,IAAnB;AAFX,GAAd;;AAMA,QAAMiB,IAAI,GAAGY,MAAM,IAAI;AACrB,UAAMC,GAAG,GAAGD,MAAM,CAACE,UAAP,CAAkB,IAAlB,CAAZ;AACA,UAAMC,QAAQ,GAAGF,GAAG,CAACG,oBAAJ,CAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,GAAlC,CAAjB;AACAD,IAAAA,QAAQ,CAACE,YAAT,CAAsB,CAAtB,EAAyB,oBAAzB;AACAF,IAAAA,QAAQ,CAACE,YAAT,CAAsB,CAAtB,EAAyB,oBAAzB;AAEAR,IAAAA,KAAK,CAACE,QAAN,CAAe,CAAf,EAAkB5B,IAAlB,GAAyBgC,QAAzB;AAEAG,IAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AAEA,6BACKA,KADL;AAGD,GAbD;;AAgBA,MAAIW,OAAO,GAAG;AACZC,IAAAA,UAAU,EAAE,IADA;AAEZC,IAAAA,mBAAmB,EAAE,KAFT;AAGZC,IAAAA,mBAAmB,EAAE,YAAU;AAC7B,WAAKC,WAAL,CAAiB,KAAKb,QAAL,CAAc,CAAd,EAAiBc,MAAlC,EAA0C,IAA1C;AACD,KALW;AAMZC,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAE,CADC;AAEPC,QAAAA,KAAK,EAAE,EAFA;AAGPC,QAAAA,GAAG,EAAE,EAHE;AAIPC,QAAAA,MAAM,EAAE;AAJD;AADH,KANI;AAcZC,IAAAA,SAAS,EAAE;AACPC,MAAAA,MAAM,EAAE,eADD;AAEPC,MAAAA,QAAQ,EAAE;AAFH,KAdC;AAkBZC,IAAAA,MAAM,EAAE;AACJC,MAAAA,KAAK,EAAE,CAAC;AACJC,QAAAA,SAAS,EAAE;AACPC,UAAAA,eAAe,EAAErD,KAAK,CAACX,KAAN,CAAYiE,SADtB;AAEPC,UAAAA,OAAO,EAAE,KAFF;AAGPC,UAAAA,UAAU,EAAE,IAHL;AAIPC,UAAAA,SAAS,EAAE,IAJJ;AAKPC,UAAAA,KAAK,EAAE,qBALA;AAMPC,UAAAA,SAAS,EAAE,CANJ;AAOPC,UAAAA,aAAa,EAAE;AAPR;AADP,OAAD,CADH;AAYJC,MAAAA,KAAK,EAAE,CAAC;AACNC,QAAAA,KAAK,EAAE;AACLP,UAAAA,OAAO,EAAE,IADJ;AAELQ,UAAAA,aAAa,EAAE;AAFV,SADD;AAKJX,QAAAA,SAAS,EAAE;AACPC,UAAAA,eAAe,EAAErD,KAAK,CAACX,KAAN,CAAY2E,cADtB;AAEPT,UAAAA,OAAO,EAAE,KAFF;AAGPC,UAAAA,UAAU,EAAE,KAHL;AAIP;AACAC,UAAAA,SAAS,EAAE,IALJ;AAMPC,UAAAA,KAAK,EAAE,qBANA;AAOPC,UAAAA,SAAS,EAAE,CAPJ;AAQPC,UAAAA,aAAa,EAAE;AARR;AALP,OAAD;AAZH,KAlBI;AA+CZK,IAAAA,QAAQ,EAAE;AACNC,MAAAA,IAAI,EAAE;AACFC,QAAAA,OAAO,EAAE;AADP;AADA,KA/CE;AAoDZC,IAAAA,MAAM,EAAE;AACNb,MAAAA,OAAO,EAAEvD,KAAK,CAACqE,UAAN,IAAoB,IADvB;AAENC,MAAAA,QAAQ,EAAE;AAFJ,KApDI;AAyDZC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,aAAa,EAAE,IADP;AAERC,MAAAA,IAAI,EAAE,OAFE;AAGRC,MAAAA,UAAU,EAAE,QAHJ;AAIRJ,MAAAA,QAAQ,EAAE,SAJF;AAKRK,MAAAA,SAAS,EAAE,KALH;AAMRC,MAAAA,WAAW,EAAE,CANL;AAORlC,MAAAA,OAAO,EAAE,EAPD;AAQRmC,MAAAA,eAAe,EAAE,OART;AASRxB,MAAAA,eAAe,EAAErD,KAAK,CAACX,KAAN,CAAYyF,IATrB;AAURC,MAAAA,cAAc,EAAE,SAVR;AAWRC,MAAAA,QAAQ,EAAE,EAXF;AAYRC,MAAAA,QAAQ,EAAE;AAZF,KAzDE;AAuEZC,IAAAA,KAAK,EAAE;AACLT,MAAAA,IAAI,EAAE,OADD;AAELE,MAAAA,SAAS,EAAE;AAFN,KAvEK;AA2EZQ,IAAAA,OAAO,EAAE;AACNC,MAAAA,UAAU,EAAE;AACX7B,QAAAA,OAAO,EAAE3B,GAAG,IAAI;AACd,cAAIjB,CAAC,GAAGiB,GAAG,CAACyD,SAAZ;AACA,cAAIzD,GAAG,CAAC0D,OAAJ,CAAYpE,KAAZ,KAAsB,OAA1B,EAAmC,OAAO,CAAP;AACnC,iBAAOP,CAAC,KAAKL,IAAI,CAACiF,KAAL,CAAW3D,GAAG,CAAC0D,OAAJ,CAAYvE,IAAZ,CAAiBP,MAAjB,GAA0B,CAArC,CAAN,IAAiDG,CAAC,KAAKL,IAAI,CAACiF,KAAL,CAAW3D,GAAG,CAAC0D,OAAJ,CAAYvE,IAAZ,CAAiBP,MAAjB,GAA0B,IAArC,CAAvD,IAAqGG,CAAC,KAAMiB,GAAG,CAAC0D,OAAJ,CAAYvE,IAAZ,CAAiBP,MAAjB,GAA0B,CAA7I,CAHc,CAId;AACD,SANU;AAOXgF,QAAAA,KAAK,EAAE5D,GAAG,IAAI;AAAE,iBAAOA,GAAG,CAACyD,SAAJ,KAAkBzD,GAAG,CAAC0D,OAAJ,CAAYvE,IAAZ,CAAiBP,MAAjB,GAAyB,CAA3C,GAA+C,KAA/C,GAAuD,KAA9D;AAAqE,SAP1E;AAQXiF,QAAAA,MAAM,EAAE,KARG;AASX/C,QAAAA,OAAO,EAAE;AACPC,UAAAA,IAAI,EAAE,CADC;AAEPC,UAAAA,KAAK,EAAE,CAAC,EAFD;AAGPC,UAAAA,GAAG,EAAE,CAAC,CAHC;AAIPC,UAAAA,MAAM,EAAE;AAJD,SATE;AAeXY,QAAAA,KAAK,EAAE1D,KAAK,CAACX,KAAN,CAAYqE,KAfR;AAgBVjC,QAAAA,MAAM,EAAE;AACNiE,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAE;AAAEC,cAAAA,MAAM,EAAE,MAAV;AAAkBC,cAAAA,KAAK,EAAE,QAAzB;AAAmCC,cAAAA,MAAM,EAAE;AAA3C;AAAR;AADD;AAhBE;AADN;AA3EG,GAAd;AAmGA,SACI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AACE,IAAA,KAAK,EAAE9F,KAAK,CAACkB,KADf;AAEE,IAAA,IAAI,EAAEH,IAFR;AAGE,IAAA,KAAK,EAAE,GAHT;AAIE,IAAA,OAAO,EAAEoB,OAJX,CAKE;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAWD,CA5JD;;AA8JA,eAAevD,SAAS,CAACmB,SAAD,CAAxB","sourcesContent":["import { Line, defaults } from 'react-chartjs-2'\nimport { useRef } from 'react'\nimport 'chartjs-plugin-datalabels'\nimport styled, { withTheme, keyframes }  from 'styled-components'\nimport { FadeIn } from './S'\n\nimport useMobileDetect from '../utils/isMobile'\nimport useTranslation from '../hooks/useTranslation'\n\ndefaults.global.defaultFontFamily = \"'PT Sans', sans-serif\"\n\nconst Div = styled.div`\n  margin-top: 32px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 48px;\n  height: 375px;\n  text-align: center;\n  width: 80%;\n  direction: rtl;\n  > * {\n    direction: rtl;\n  }\n  h1 {\n    text-shadow: ${({ theme }) => theme.shadows[1]};\n  }\n\n  canvas {\n    // background-color: #ededed;\n    border-radius: 8px;\n  }\n\n  @media (max-width: 560px) {\n    height: 40vh;\n    margin-bottom: 48px;\n    width: 100vw;\n    max-width: 100%;\n  }\n`\n\nconst noChartDisplaySettings = {\n  // backgroundColor: 'transparent',\n  // strokeColor: 'transparent',\n  // borderColor: 'transparent',\n  showLine: false,\n  borderWidth: 0,\n  pointHitRadius: 0,\n  pointHoverRadius: 0,\n  pointHoverBorderWidth: 0,\n  pointRadius: 0,\n  pointHitRadius: 0,\n  fill: false,\n}\n\n\n// if mobile, do by 8, if not do by 3\n\nconst LineChart = ( props, {theme} ) => {\n\n  const { t } = useTranslation()\n  const chartRef = useRef()\n\n  const showLastMonth = arr => arr.slice(Math.ceil(arr.length / 3.3))\n\n  const filterBy5 = (x, i) => useMobileDetect().isMobile() ? !(i % 8) : !(i % 2)\n  // const subtractArray = arr => arr.filter(filterBy5).concat(arr[arr.length -1])\n\n  const subtractArray = arr => showLastMonth(arr)\n\n  const cutCaseCount = ({ data}) => data.length > 30 ? subtractArray(data) : data\n\n  const displayOnChart = dset => ({ ...dset, label: t(dset.label, 'chartLabels'), data: cutCaseCount(dset), fill: true })\n  const dontDisplayOnChart = dset => ({ ...dset, label: t(dset.label, 'chartLabels'),data: cutCaseCount(dset), ...noChartDisplaySettings })\n  const parseDatasets = (arrayOfSets, fill) => arrayOfSets.map(sortForDisplay)\n  const sortForDisplay = dset => {\n    return (dset.label !== 'cases' && dset.label !== 'נדבקים')\n      ? dontDisplayOnChart(dset)\n      : displayOnChart(dset)\n  }\n\n\n  const data2 = {\n    labels: props.labels.length > 30 ? subtractArray(props.labels) : props.labels,\n    datasets: parseDatasets(props.data, props.fill)\n\n  };\n\n  const data = canvas => {\n    const ctx = canvas.getContext('2d')\n    const gradient = ctx.createLinearGradient(0, 0, 0, 400);\n    gradient.addColorStop(0, 'rgba(250,174,50,1)');\n    gradient.addColorStop(1, 'rgba(250,174,50,0)');\n\n    data2.datasets[2].fill = gradient\n\n    console.log(data2);\n\n    return {\n      ...data2,\n    }\n  }\n  \n\n  var options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    onAnimationComplete: function(){\n      this.showTooltip(this.datasets[0].points, true)\n    },\n    layout: {\n      padding: {\n        left: 5,\n        right: 15,\n        top: 15,\n        bottom: 15\n      }\n    },\n    animation: {\n        easing: 'easeInOutQuad',\n        duration: 999\n    },\n    scales: {\n        xAxes: [{\n            gridLines: {\n                backgroundColor: props.theme.analogous,\n                display: false,\n                drawBorder: true,\n                drawTicks: true,\n                color: 'rgba(0, 0, 0, 0.05)',\n                lineWidth: 1,\n                zeroLineWidth: 1,\n            }\n        }],\n        yAxes: [{\n          ticks: {\n            display: true,\n            maxTicksLimit: 6,\n          },\n            gridLines: {\n                backgroundColor: props.theme.primaryVariant,\n                display: false,\n                drawBorder: false,\n                // drawBorder: true,\n                drawTicks: true,\n                color: 'rgba(0, 0, 0, 0.05)',\n                lineWidth: 1,\n                zeroLineWidth: 1,\n            }\n        }]\n    },\n    elements: {\n        line: {\n            tension: 0.5\n        }\n    },\n    legend: {\n      display: props.showLegend && true,\n      position: 'bottom'\n    },\n\n    tooltips: {\n      displayColors: true,\n      mode: 'index',\n      titleAlign: 'center',\n      position: 'nearest',\n      intersect: false,\n      bodySpacing: 4,\n      padding: 15,\n      titleFontFamily: 'Rubik',\n      backgroundColor: props.theme.dark,\n      titleFontColor: '#f9f9f9',\n      xPadding: 24,\n      yPadding: 14,\n    },\n    hover: {\n      mode: 'index',\n      intersect: false,\n    },\n    plugins: {\n       datalabels: {\n        display: ctx => {\n          let i = ctx.dataIndex\n          if (ctx.dataset.label !== 'cases') return 0\n          return i === Math.floor(ctx.dataset.data.length / 3) || i === Math.floor(ctx.dataset.data.length * 0.66) || i === (ctx.dataset.data.length - 1)\n          // return i === 0 || i === (ctx.dataset.data.length - 1) || !(i % 4)\n        },\n        align: ctx => { return ctx.dataIndex === ctx.dataset.data.length -1 ? 'end' : 'end' },\n        anchor: 'end',\n        padding: {\n          left: 0,\n          right: -50,\n          top: -5,\n          bottom: 0\n        },\n        color: props.theme.color,\n         labels: {\n           title: { font: { weight: 'bold', style: 'italic', family: 'Rubik' } }\n         }\n       }\n    }\n}\n\n  return (\n      <Div>\n          <Line\n            label={props.label}\n            data={data}\n            width={100}\n            options={options}\n            // height={40}\n          />\n      </Div>\n  )\n}\n\nexport default withTheme(LineChart)\n"]},"metadata":{},"sourceType":"module"}