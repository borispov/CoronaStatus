{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect, useRef, useState, useContext } from 'react';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { themes } from '../utils/themes'; // Components\n\nimport Burger from '../components/Burger';\nimport Menu from '../components/Menu';\nimport Header from '../components/Header'; // Context & Hooks\n\nimport { ProxyContext } from '../context/proxy-context';\nimport { LocaleContext } from '../context/LocaleContext';\nimport useOutSide from '../hooks/useOutSide';\nimport useTranslation from '../hooks/useTranslation.js';\nimport { getInitialLocale } from '../locales/getInitialLocale'; // Functions for changing themes\n\nvar lightTheme = function lightTheme() {\n  return _objectSpread({}, themes['common'], {}, themes['light']);\n};\n\nvar darkTheme = function darkTheme() {\n  return _objectSpread({}, themes['common'], {}, themes['dark']);\n};\n\nvar langs = ['he', 'en'];\n\nvar Layout = function Layout(_ref) {\n  var children = _ref.children;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useContext = useContext(ProxyContext),\n      proxy = _useContext[0],\n      setProxy = _useContext[1];\n\n  var _useContext2 = useContext(LocaleContext),\n      locale = _useContext2.locale,\n      setLocale = _useContext2.setLocale;\n\n  var _useState = useState(false),\n      ig = _useState[0],\n      setIgnore = _useState[1]; // Initiation of Context API's\n\n\n  useEffect(function () {\n    var ip2proxy = JSON.parse(localStorage.getItem('ip2proxy'));\n    var locationFromStorage = ip2proxy && ip2proxy.countryName;\n    var loc = getInitialLocale(locationFromStorage);\n    setLocale(loc);\n    return function () {};\n  }, [proxy]); // setting locale. not  sure yet if I use it or context API only\n\n  var _useState2 = useState(false),\n      menuOpen = _useState2[0],\n      setOpen = _useState2[1];\n\n  var closeMenu = function closeMenu() {\n    return setOpen(false);\n  };\n\n  var toggleMenu = function toggleMenu() {\n    return setOpen(!menuOpen);\n  };\n\n  var toggleLang = function toggleLang() {\n    closeMenu();\n    var newLocale = langs[+!langs.indexOf(locale)];\n    setLocale(newLocale);\n  };\n\n  var node = useRef();\n  useOutSide(node, closeMenu);\n  var displayLang = locale === 'he' ? 'English' : 'עברית';\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, t('metaTitle')), __jsx(\"meta\", {\n    name: \"description\",\n    content: t('metaDescription')\n  }), __jsx(\"meta\", {\n    name: \"keywords\",\n    content: t('metaKeywords')\n  })), __jsx(React.Fragment, null, __jsx(Header, null, __jsx(\"div\", {\n    ref: node\n  }, __jsx(Burger, {\n    setOpen: toggleMenu,\n    open: menuOpen\n  }), __jsx(Menu, {\n    setOpen: toggleMenu,\n    open: menuOpen\n  }, __jsx(Link, {\n    href: \"/News\"\n  }, __jsx(\"a\", {\n    alt: \"news\",\n    onClick: function onClick() {\n      return closeMenu();\n    }\n  }, __jsx(\"span\", null, \"\\uD83D\\uDCF0\"), t('news', 'links'))), __jsx(Link, {\n    href: \"/Statistics\"\n  }, __jsx(\"a\", {\n    alt: \"stats\",\n    onClick: function onClick() {\n      return closeMenu();\n    }\n  }, __jsx(\"span\", null, \" \\uD83D\\uDDFA\"), t('statistics', 'links'))), __jsx(Link, {\n    href: \"/About\"\n  }, __jsx(\"a\", {\n    alt: \"about\",\n    onClick: function onClick() {\n      return closeMenu();\n    }\n  }, __jsx(\"span\", null, \" \\uD83E\\uDDD4\"), t('about', 'links'))), __jsx(\"a\", {\n    onClick: toggleLang\n  }, __jsx(\"span\", null, \"\\uD83C\\uDF10\"), displayLang)))), __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"214878086\", [menuOpen && \"\\n                filter: blur(\".concat(menuOpen ? '1px' : '0px', \");\\n                transition: all 500ms ease-in-out;\\n                -webkit-transition: -webkit-filter 500ms linear;\\n                }\\n              \")]]]) + \" \" + \"AppContainer\"\n  }, children, __jsx(_JSXStyle, {\n    id: \"214878086\",\n    dynamic: [menuOpen && \"\\n                filter: blur(\".concat(menuOpen ? '1px' : '0px', \");\\n                transition: all 500ms ease-in-out;\\n                -webkit-transition: -webkit-filter 500ms linear;\\n                }\\n              \")]\n  }, [\".AppContainer{\".concat(menuOpen && \"\\n                filter: blur(\".concat(menuOpen ? '1px' : '0px', \");\\n                transition: all 500ms ease-in-out;\\n                -webkit-transition: -webkit-filter 500ms linear;\\n                }\\n              \"), \";}\")]))));\n};\n\nexport default Layout;","map":null,"metadata":{},"sourceType":"module"}