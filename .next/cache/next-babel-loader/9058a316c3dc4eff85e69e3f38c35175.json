{"ast":null,"code":"var _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/context/proxy-context.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useRef, createContext } from 'react';\nexport var ProxyContext = createContext();\nexport var ProxyContextProvider = function ProxyContextProvider(props) {\n  var initialState = {\n    ipAddress: '0.0.0.0',\n    countryName: 'israel',\n    isProxy: false,\n    proxyType: ''\n  }; // Declare shareable proxy state\n\n  var _useState = useState(initialState),\n      proxy = _useState[0],\n      setProxy = _useState[1];\n\n  var prev = useRef(); // Read and Write Proxy State to Local Storage\n\n  useEffect(function () {\n    if (proxy.countryName == 'israel') {\n      var localState = JSON.parse(localStorage.getItem('ip2proxy'));\n\n      if (localState) {\n        console.info('reading local storage');\n        prev.current = localState.ipAddress;\n        setProxy(localState);\n      }\n    } else if (prev.current !== proxy.ipAddress) {\n      console.info('writing local storage');\n      localStorage.setItem('ip2proxy', JSON.stringify(proxy));\n    }\n  }, [proxy]);\n  return __jsx(ProxyContext.Provider, {\n    value: [proxy, setProxy],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, props.children);\n};","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/context/proxy-context.js"],"names":["React","useState","useEffect","useRef","createContext","ProxyContext","ProxyContextProvider","props","initialState","ipAddress","countryName","isProxy","proxyType","proxy","setProxy","prev","localState","JSON","parse","localStorage","getItem","console","info","current","setItem","stringify","children"],"mappings":";;AAAA,OAAOA,KAAP,IACIC,QADJ,EAEIC,SAFJ,EAGIC,MAHJ,EAIIC,aAJJ,QAKO,OALP;AAOA,OAAO,IAAMC,YAAY,GAAGD,aAAa,EAAlC;AAEP,OAAO,IAAME,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,KAAD,EAAW;AAC3C,MAAMC,YAAY,GAAG;AACjBC,IAAAA,SAAS,EAAE,SADM;AAEjBC,IAAAA,WAAW,EAAE,QAFI;AAGjBC,IAAAA,OAAO,EAAE,KAHQ;AAIjBC,IAAAA,SAAS,EAAE;AAJM,GAArB,CAD2C,CAQ3C;;AAR2C,kBASjBX,QAAQ,CAACO,YAAD,CATS;AAAA,MASpCK,KAToC;AAAA,MAS7BC,QAT6B;;AAU3C,MAAMC,IAAI,GAAGZ,MAAM,EAAnB,CAV2C,CAY3C;;AACAD,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIW,KAAK,CAACH,WAAN,IAAqB,QAAzB,EAAmC;AAC/B,UAAMM,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAnB;;AACA,UAAIJ,UAAJ,EAAgB;AACZK,QAAAA,OAAO,CAACC,IAAR,CAAa,uBAAb;AACAP,QAAAA,IAAI,CAACQ,OAAL,GAAeP,UAAU,CAACP,SAA1B;AACAK,QAAAA,QAAQ,CAACE,UAAD,CAAR;AACH;AACJ,KAPD,MAOO,IAAID,IAAI,CAACQ,OAAL,KAAiBV,KAAK,CAACJ,SAA3B,EAAsC;AACzCY,MAAAA,OAAO,CAACC,IAAR,CAAa,uBAAb;AACAH,MAAAA,YAAY,CAACK,OAAb,CAAqB,UAArB,EAAiCP,IAAI,CAACQ,SAAL,CAAeZ,KAAf,CAAjC;AACH;AACJ,GAZQ,EAYN,CAACA,KAAD,CAZM,CAAT;AAcA,SACI,MAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE,CAACA,KAAD,EAAQC,QAAR,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,KAAK,CAACmB,QADX,CADJ;AAKH,CAhCM","sourcesContent":["import React, {\n    useState,\n    useEffect,\n    useRef,\n    createContext\n} from 'react'\n\nexport const ProxyContext = createContext()\n\nexport const ProxyContextProvider = (props) => {\n    const initialState = {\n        ipAddress: '0.0.0.0',\n        countryName: 'israel',\n        isProxy: false,\n        proxyType: ''\n    }\n\n    // Declare shareable proxy state\n    const [proxy, setProxy] = useState(initialState)\n    const prev = useRef()\n\n    // Read and Write Proxy State to Local Storage\n    useEffect(() => {\n        if (proxy.countryName == 'israel') {\n            const localState = JSON.parse(localStorage.getItem('ip2proxy'))\n            if (localState) {\n                console.info('reading local storage')\n                prev.current = localState.ipAddress\n                setProxy(localState)\n            }\n        } else if (prev.current !== proxy.ipAddress) {\n            console.info('writing local storage')\n            localStorage.setItem('ip2proxy', JSON.stringify(proxy))\n        }\n    }, [proxy])\n\n    return(\n        <ProxyContext.Provider value={[proxy, setProxy]}>\n            {props.children}\n        </ProxyContext.Provider>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}