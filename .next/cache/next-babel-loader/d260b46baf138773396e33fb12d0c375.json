{"ast":null,"code":"var _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/components/LineChart.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nconst data = {\n  labels: ['Infected', 'Deaths'],\n  datasets: [{\n    label: 'My First dataset',\n    fill: false,\n    lineTension: 0.1,\n    backgroundColor: 'rgba(75,192,192,0.4)',\n    backgroundColor: ['rgba(112, 120, 176, 1)', 'rgba(233,233,100,1)', 'rgba(213, 199, 23, 1)', 'rgba(245, 55, 66, 1)', 'rgba(18, 18, 21, 1)'],\n    borderColor: ['rgba(75,192,192,1)'],\n    borderCapStyle: 'butt',\n    options: {\n      scales: {\n        yAxes: [{\n          stacked: true\n        }]\n      }\n    },\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderJoinStyle: 'miter',\n    pointBorderColor: 'rgba(75,192,192,1)',\n    pointBackgroundColor: '#fff',\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n    pointHoverBorderColor: 'rgba(220,220,220,1)',\n    pointHoverBorderWidth: 2,\n    pointRadius: 1,\n    pointHitRadius: 10,\n    data: [250, 0]\n  }]\n};\nexport default (() => {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Line Example\"), __jsx(Line, {\n    data: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }));\n}); // export default function LineChart({\n//   displayName: 'LineChart',\n//\n//   render() {\n//     return (\n//       <div>\n//         <h2>Line Example</h2>\n//         <Line data={data} />\n//       </div>\n//     );\n//   }\n// });","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/components/LineChart.js"],"names":["React","Line","data","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","options","scales","yAxes","stacked","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AAEA,MAAMC,IAAI,GAAG;AACXC,EAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,QAAb,CADG;AAEXC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,KAAK,EAAE,kBADT;AAEEC,IAAAA,IAAI,EAAE,KAFR;AAGEC,IAAAA,WAAW,EAAE,GAHf;AAIEC,IAAAA,eAAe,EAAE,sBAJnB;AAKEA,IAAAA,eAAe,EAAE,CACf,wBADe,EAEf,qBAFe,EAGf,uBAHe,EAIf,sBAJe,EAKf,qBALe,CALnB;AAYEC,IAAAA,WAAW,EAAE,CACX,oBADW,CAZf;AAeEC,IAAAA,cAAc,EAAE,MAflB;AAgBEC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,KAAK,EAAE,CAAC;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAD;AAAT;AADD,KAhBX;AAmBEC,IAAAA,UAAU,EAAE,EAnBd;AAoBEC,IAAAA,gBAAgB,EAAE,GApBpB;AAqBEC,IAAAA,eAAe,EAAE,OArBnB;AAsBEC,IAAAA,gBAAgB,EAAE,oBAtBpB;AAuBEC,IAAAA,oBAAoB,EAAE,MAvBxB;AAwBEC,IAAAA,gBAAgB,EAAE,CAxBpB;AAyBEC,IAAAA,gBAAgB,EAAE,CAzBpB;AA0BEC,IAAAA,yBAAyB,EAAE,oBA1B7B;AA2BEC,IAAAA,qBAAqB,EAAE,qBA3BzB;AA4BEC,IAAAA,qBAAqB,EAAE,CA5BzB;AA6BEC,IAAAA,WAAW,EAAE,CA7Bf;AA8BEC,IAAAA,cAAc,EAAE,EA9BlB;AA+BExB,IAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,CAAN;AA/BR,GADQ;AAFC,CAAb;AAuCA,gBAAe,MAAM;AACnB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAPD,E,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport {Line} from 'react-chartjs-2';\n\nconst data = {\n  labels: ['Infected', 'Deaths'],\n  datasets: [\n    {\n      label: 'My First dataset',\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: 'rgba(75,192,192,0.4)',\n      backgroundColor: [\n        'rgba(112, 120, 176, 1)',\n        'rgba(233,233,100,1)',\n        'rgba(213, 199, 23, 1)',\n        'rgba(245, 55, 66, 1)',\n        'rgba(18, 18, 21, 1)'\n      ],\n      borderColor: [\n        'rgba(75,192,192,1)',\n      ],\n      borderCapStyle: 'butt',\n      options: {\n        scales: { yAxes: [{ stacked: true }] }\n      },\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: 'rgba(75,192,192,1)',\n      pointBackgroundColor: '#fff',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: [250, 0]\n    }\n  ]\n};\n\nexport default () => {\n  return (\n    <div>\n      <h2>Line Example</h2>\n      <Line data={data} />\n    </div>\n  )\n}\n\n// export default function LineChart({\n//   displayName: 'LineChart',\n//\n//   render() {\n//     return (\n//       <div>\n//         <h2>Line Example</h2>\n//         <Line data={data} />\n//       </div>\n//     );\n//   }\n// });\n"]},"metadata":{},"sourceType":"module"}