{"ast":null,"code":"var _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/components/CoronaApp.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport Input from './Input';\nimport Stats from './Stats';\nimport Header from './Header';\nimport useTime from '../utils/useTime';\nimport useTodayStats from '../utils/useTodayStats';\nimport Chart from './Chart';\nimport Container from './Container';\nimport HeaderDescription from './HeaderDescription';\nimport CaseChart from './CaseChart';\nimport Select from 'react-select';\nconst allCountries = {\n  israel: '',\n  usa: '',\n  uk: '',\n  france: '',\n  lebanon: '',\n  germany: '',\n  poland: '',\n  russia: '',\n  india: '',\n  ukraine: '',\n  moldova: '',\n  spain: '',\n  italy: ''\n};\n\nconst translateCountries = countries => cn => countries[Object.keys(countries).filter(c => c === 'cn')];\n\nexport default (({\n  theme,\n  lang\n}) => {\n  const {\n    0: showWorld,\n    1: setShowWorld\n  } = useState(true);\n  const {\n    0: country,\n    1: setCountry\n  } = useState('');\n  const {\n    0: inputValue,\n    1: setInput\n  } = useState('');\n  const url = 'http://covid19.borisky.me:3003/api/v1/';\n  const {\n    countryStats,\n    countries\n  } = useTime(country);\n  const {\n    todayStats\n  } = useTodayStats(url, country);\n  const worldToday = useTodayStats(url, 'world').todayStats;\n  const worldTodaySorted = worldToday && {\n    cases: worldToday.cases,\n    todayCases: worldToday.todayCases,\n    recovered: worldToday.recovered,\n    deaths: worldToday.deaths\n  } || '';\n  const todayStatsSorted = todayStats && {\n    cases: todayStats.cases,\n    todayCases: todayStats.todayCases,\n    recovered: todayStats.recovered,\n    deaths: todayStats.deaths\n  } || '';\n\n  const handleChange = selected => setCountry(selected);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setCountry(inputValue);\n  };\n\n  const selectOptions = countries && countries.map(a => ({\n    value: a,\n    label: a\n  }));\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Covid19 Feed\"), __jsx(HeaderDescription, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, countryStats && __jsx(Chart, {\n    isHeb: lang === 'heb',\n    type: \"line\",\n    labels: countryStats.labels,\n    data: countryStats.datasets.filter(a => a.label === 'cases'),\n    label: country || 'israel',\n    theme: theme,\n    fill: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), __jsx(Stats, {\n    cn: country || todayStats && todayStats.country,\n    todayStats: todayStatsSorted,\n    isHeb: lang === 'heb',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), __jsx(\"form\", {\n    style: {\n      maxWidth: '520px',\n      margin: '54px auto'\n    },\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    style: {\n      fontSize: '16px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, lang === 'eng' ? `Search For Country:` : `חיפוש לפי מדינה`), __jsx(Select, {\n    options: selectOptions,\n    value: country,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  })), __jsx(Stats, {\n    cn: 'World',\n    todayWorld: worldTodaySorted,\n    isHeb: lang === 'heb',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), __jsx(CaseChart, {\n    showWorld: showWorld,\n    theme: theme,\n    country: country,\n    isHeb: lang === 'heb',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  })));\n});","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/components/CoronaApp.js"],"names":["useState","useEffect","Input","Stats","Header","useTime","useTodayStats","Chart","Container","HeaderDescription","CaseChart","Select","allCountries","israel","usa","uk","france","lebanon","germany","poland","russia","india","ukraine","moldova","spain","italy","translateCountries","countries","cn","Object","keys","filter","c","theme","lang","showWorld","setShowWorld","country","setCountry","inputValue","setInput","url","countryStats","todayStats","worldToday","worldTodaySorted","cases","todayCases","recovered","deaths","todayStatsSorted","handleChange","selected","handleSubmit","e","preventDefault","selectOptions","map","a","value","label","labels","datasets","maxWidth","margin","fontSize"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport Input from './Input'\nimport Stats from './Stats'\nimport Header from './Header'\nimport useTime from '../utils/useTime'\nimport useTodayStats from '../utils/useTodayStats'\nimport Chart from './Chart'\nimport Container from './Container'\nimport HeaderDescription from './HeaderDescription'\nimport CaseChart from './CaseChart'\nimport Select from 'react-select'\n\nconst allCountries = {\n  israel: '',\n  usa: '',\n  uk: '',\n  france: '',\n  lebanon: '',\n  germany: '',\n  poland: '',\n  russia: '',\n  india: '',\n  ukraine: '',\n  moldova: '',\n  spain: '',\n  italy: '',\n}\nconst translateCountries = countries => cn => countries[Object.keys(countries).filter(c => c === 'cn')]\n\n\nexport default ({ theme, lang}) => {\n\n  const [showWorld, setShowWorld] = useState(true)\n  const [country, setCountry] = useState('')\n  const [inputValue, setInput] = useState('')\n\n  const url = 'http://covid19.borisky.me:3003/api/v1/'\n\n  const { countryStats, countries } = useTime(country)\n  const { todayStats } = useTodayStats(url, country)\n  const worldToday = useTodayStats(url, 'world').todayStats\n\n  const worldTodaySorted = worldToday &&\n    {\n      cases: worldToday.cases,\n      todayCases: worldToday.todayCases,\n      recovered: worldToday.recovered,\n      deaths: worldToday.deaths\n    } || ''\n\n  const todayStatsSorted = todayStats && \n    {\n      cases: todayStats.cases,\n      todayCases: todayStats.todayCases,\n      recovered: todayStats.recovered,\n      deaths: todayStats.deaths\n    } || ''\n\n  const handleChange = selected => setCountry(selected)\n  const handleSubmit = e => {\n    e.preventDefault();\n    setCountry(inputValue)\n  }\n\n  const selectOptions = countries && countries.map(a => ({ value: a, label: a }))\n\n  return (\n    <div>\n      <Header>Covid19 Feed</Header>\n      <HeaderDescription />\n\n      <Container>\n\n      {\n        countryStats &&\n          (\n              <Chart\n                isHeb={lang === 'heb'}\n                type='line'\n                labels={countryStats.labels}\n                data={countryStats.datasets.filter(a => a.label === 'cases')}\n                label={country || 'israel'}\n                theme={theme}\n                fill={true}\n              />\n          )\n      }\n      <Stats\n        cn={country || todayStats && todayStats.country}\n        todayStats={todayStatsSorted}\n        isHeb={lang === 'heb'}\n      />\n\n      <form \n        style={{ maxWidth: '520px', margin: '54px auto'}}\n        onSubmit={handleSubmit}>\n\n        <label style={{fontSize: '16px'}}>\n          {\n            lang === 'eng'\n            ? `Search For Country:`\n            : `חיפוש לפי מדינה`\n          }\n        </label>\n\n        <Select \n          options={selectOptions}\n          value={country}\n          onChange={handleChange}\n        />\n      </form>\n\n      <Stats\n        cn={'World'}\n        todayWorld={worldTodaySorted}\n        isHeb={lang==='heb'}\n      />\n\n      <CaseChart\n        showWorld={showWorld} \n        theme={theme}\n        country={country}\n        isHeb={lang === 'heb'}\n      />\n\n    </Container>\n\n    </div>\n  )\n  \n\n}\n"]},"metadata":{},"sourceType":"module"}