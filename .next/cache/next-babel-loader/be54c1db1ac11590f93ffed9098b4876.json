{"ast":null,"code":"var _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from 'axios';\nimport Head from 'next/head';\nimport { useEffect, useContext } from 'react';\nimport CoronaApp from '../components/CoronaApp';\nimport InfoSection from '../components/InfoSection';\nimport Footer from '../components/Footer';\nimport { FadeIn } from '../components/S';\nimport useWorldData from '../hooks/useWorldData';\nimport { ProxyContext } from '../context/proxy-context';\nimport { LocaleContext } from '../context/LocaleContext';\nimport { getInitialLocale } from '../locales/getInitialLocale';\n\nconst getCountryFromData = response => response.data.country;\n\nconst currentCountry = async url => await axios.get(url).then(getCountryFromData).catch(e => 'israel');\n\nfunction IndexPage(worldTime, yesterdayGlobal, newProxy) {\n  const {\n    0: proxy\n  } = useContext(ProxyContext);\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"nCorona - Novel Coronavirus Statistics & Resources for Coping\")), __jsx(FadeIn, {\n    delay: \"0.5s\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(CoronaApp, {\n    userLocation: proxy.countryName,\n    worldTime: worldTime,\n    yesterdayGlobal: yesterdayGlobal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), __jsx(InfoSection, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })));\n}\n\nIndexPage.getInitialProps = async ({\n  req\n}) => {\n  const worldTime = await useWorldData();\n  const {\n    data\n  } = await axios.get('https://corona.lmao.ninja/v2/all?yesterday=true');\n  const yesterdayGlobal = {\n    active: data.active,\n    critical: data.critical,\n    cases: data.cases,\n    todayCases: data.todayCases,\n    recovered: data.recovered,\n    deaths: data.deaths,\n    country: data.country,\n    affectedCountries: data.affectedCountries\n  };\n\n  if (req) {\n    const ipAddress = req.headers['x-forwarded-for'] || req.connection.remoteAddress;\n    const localAddresses = ['::1', '127.0.0.1', 'localhost']; // Construct URL with IP ADDRESS\n\n    const proxyUrl = !localAddresses.includes(ipAddress) && `https://extreme-ip-lookup.com/json/${ipAddress}` || null;\n\n    try {\n      const countryName = await currentCountry(proxyUrl);\n      const newProxy = {\n        countryName,\n        ipAddress\n      };\n      return {\n        newProxy,\n        worldTime,\n        yesterdayGlobal\n      };\n    } catch (e) {\n      return {\n        errorCode: e.code,\n        errorMessage: e.message,\n        yesterdayGlobal,\n        worldTime\n      };\n    }\n  }\n\n  return {\n    yesterdayGlobal,\n    worldTime,\n    newProxy: null\n  };\n};\n\nexport default IndexPage;","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/pages/index.js"],"names":["axios","Head","useEffect","useContext","CoronaApp","InfoSection","Footer","FadeIn","useWorldData","ProxyContext","LocaleContext","getInitialLocale","getCountryFromData","response","data","country","currentCountry","url","get","then","catch","e","IndexPage","worldTime","yesterdayGlobal","newProxy","proxy","countryName","getInitialProps","req","active","critical","cases","todayCases","recovered","deaths","affectedCountries","ipAddress","headers","connection","remoteAddress","localAddresses","proxyUrl","includes","errorCode","code","errorMessage","message"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport Head from 'next/head'\nimport { useEffect, useContext } from 'react'\n\nimport CoronaApp from '../components/CoronaApp'\nimport InfoSection from '../components/InfoSection'\nimport Footer from '../components/Footer'\nimport { FadeIn } from '../components/S'\nimport useWorldData from '../hooks/useWorldData'\n\nimport { ProxyContext } from '../context/proxy-context'\nimport { LocaleContext } from '../context/LocaleContext'\nimport { getInitialLocale } from '../locales/getInitialLocale'\n\nconst getCountryFromData = response => response.data.country\nconst currentCountry = async (url) => await axios.get(url).then(getCountryFromData).catch(e => 'israel')\n\nfunction IndexPage( worldTime, yesterdayGlobal, newProxy) {\n\n  const [proxy]  = useContext(ProxyContext)\n\n  return (\n    <>\n      <Head>\n        <title>nCorona - Novel Coronavirus Statistics & Resources for Coping</title>\n      </Head>\n      <FadeIn delay=\"0.5s\">\n       <CoronaApp userLocation={proxy.countryName} worldTime={worldTime} yesterdayGlobal={yesterdayGlobal} />\n        <InfoSection />\n      </FadeIn>\n    </>\n  )\n}\n\nIndexPage.getInitialProps = async ({ req }) => {\n\n  const worldTime = await useWorldData()\n  const { data } = await axios.get('https://corona.lmao.ninja/v2/all?yesterday=true')\n  const yesterdayGlobal = {\n    active:data.active,\n    critical: data.critical,\n    cases: data.cases,\n    todayCases: data.todayCases,\n    recovered: data.recovered,\n    deaths: data.deaths,\n    country: data.country,\n    affectedCountries: data.affectedCountries\n  }\n\n  if (req) {\n      const ipAddress = req.headers['x-forwarded-for'] || req.connection.remoteAddress\n      const localAddresses = ['::1', '127.0.0.1', 'localhost']\n      // Construct URL with IP ADDRESS\n      const proxyUrl = !localAddresses.includes(ipAddress) && `https://extreme-ip-lookup.com/json/${ipAddress}` || null\n\n    try {\n      const countryName = await currentCountry(proxyUrl)\n      const newProxy = { countryName, ipAddress }\n      return { newProxy, worldTime, yesterdayGlobal }\n    } catch(e) {\n      return { errorCode: e.code, errorMessage: e.message, yesterdayGlobal, worldTime }\n    }\n  }\n\n  return {yesterdayGlobal, worldTime, newProxy: null}\n}\n\nexport default IndexPage\n"]},"metadata":{},"sourceType":"module"}