{"ast":null,"code":"var _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/context/LocaleContext.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect, useRef, createContext } from 'react';\nexport const LocaleContext = createContext();\nexport const LocaleProvider = props => {\n  // Default Setting\n  const initialState = 'he';\n  const {\n    0: locale,\n    1: setLocale\n  } = useState(initialState);\n  const prev = useRef();\n  prev.current = 'he';\n  useEffect(() => {\n    const preChanges = localStorage.getItem(\"locale\");\n    console.log('pre changes::::::', preChanges);\n\n    if (prev.current !== locale) {\n      prev.current = locale;\n      localStorage.setItem(\"locale\", locale);\n      setLocale(locale);\n    } else {\n      const lang = localStorage.getItem(\"locale\");\n      setLocale(lang);\n    } // if (prev.current === locale || locale === 'he' ) {\n    //   const langName = localStorage.getItem('locale')\n    //   if (langName) {\n    //     prev.current = langName\n    //     setLocale(locale)\n    //   } else {\n    //     localStorage.setItem(\"locale\", locale)\n    //     prev.current = langName\n    //   }\n    // } else if (prev.current !== locale) {\n    //   console.log('writing {LOCALE} to storage');\n    //   localStorage.setItem('locale', locale)\n    //   prev.current = locale\n    // }\n\n  }, [locale]);\n  return __jsx(LocaleContext.Provider, {\n    value: {\n      locale,\n      setLocale\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, props.children);\n};","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/context/LocaleContext.js"],"names":["useState","useEffect","useRef","createContext","LocaleContext","LocaleProvider","props","initialState","locale","setLocale","prev","current","preChanges","localStorage","getItem","console","log","setItem","lang","children"],"mappings":";;;AAAA,SACEA,QADF,EAEEC,SAFF,EAGEC,MAHF,EAIEC,aAJF,QAKO,OALP;AAOA,OAAO,MAAMC,aAAa,GAAGD,aAAa,EAAnC;AAEP,OAAO,MAAME,cAAc,GAAIC,KAAD,IAAW;AACvC;AACA,QAAMC,YAAY,GAAG,IAArB;AAEA,QAAM;AAAA,OAAEC,MAAF;AAAA,OAAUC;AAAV,MAAwBT,QAAQ,CAACO,YAAD,CAAtC;AACA,QAAMG,IAAI,GAAGR,MAAM,EAAnB;AAGAQ,EAAAA,IAAI,CAACC,OAAL,GAAe,IAAf;AAEAV,EAAAA,SAAS,CAAC,MAAM;AAEd,UAAMW,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCJ,UAAjC;;AACA,QAAIF,IAAI,CAACC,OAAL,KAAiBH,MAArB,EAA6B;AAC3BE,MAAAA,IAAI,CAACC,OAAL,GAAeH,MAAf;AACAK,MAAAA,YAAY,CAACI,OAAb,CAAqB,QAArB,EAA+BT,MAA/B;AACAC,MAAAA,SAAS,CAACD,MAAD,CAAT;AACD,KAJD,MAIO;AACL,YAAMU,IAAI,GAAGL,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAb;AACAL,MAAAA,SAAS,CAACS,IAAD,CAAT;AACD,KAXa,CAad;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,GA3BQ,EA2BN,CAACV,MAAD,CA3BM,CAAT;AA6BA,SACE,MAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAEA,MAAAA,MAAF;AAAUC,MAAAA;AAAV,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAACa,QADT,CADF;AAKD,CA5CM","sourcesContent":["import {\n  useState,\n  useEffect,\n  useRef,\n  createContext\n} from 'react'\n\nexport const LocaleContext = createContext()\n\nexport const LocaleProvider = (props) => {\n  // Default Setting\n  const initialState = 'he'\n\n  const [ locale, setLocale ] = useState(initialState)\n  const prev = useRef()\n\n\n  prev.current = 'he'\n\n  useEffect(() => {\n\n    const preChanges = localStorage.getItem(\"locale\")\n    console.log('pre changes::::::', preChanges);\n    if (prev.current !== locale) {\n      prev.current = locale\n      localStorage.setItem(\"locale\", locale)\n      setLocale(locale)\n    } else {\n      const lang = localStorage.getItem(\"locale\")\n      setLocale(lang)\n    }\n\n    // if (prev.current === locale || locale === 'he' ) {\n    //   const langName = localStorage.getItem('locale')\n    //   if (langName) {\n    //     prev.current = langName\n    //     setLocale(locale)\n    //   } else {\n    //     localStorage.setItem(\"locale\", locale)\n    //     prev.current = langName\n    //   }\n    // } else if (prev.current !== locale) {\n    //   console.log('writing {LOCALE} to storage');\n    //   localStorage.setItem('locale', locale)\n    //   prev.current = locale\n    // }\n  }, [locale])\n\n  return (\n    <LocaleContext.Provider value={{ locale, setLocale }} >\n      {props.children}\n    </LocaleContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}