{"ast":null,"code":"var _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/components/Table/Cell.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled, { withTheme } from 'styled-components';\nconst Cell = styled.td.withConfig({\n  displayName: \"Cell\",\n  componentId: \"h1tosf-0\"\n})([\"border:1px solid #f4f6f8;padding:4px;margin-left:6px;margin-right:6px;width:fit-content;font-size:14px;font-family:'Rubik';background:\", \";color:\", \";vertical-align:top;\"], props => props.theme.primaryLight, props => props.theme.onPrimary);\nconst CellHeader = styled.th.withConfig({\n  displayName: \"Cell__CellHeader\",\n  componentId: \"h1tosf-1\"\n})([\"\", \";top:0;position:sticky !important;z-index:999999;font-size:16px;padding:6px 12px;;background:\", \";color:\", \";width:145px;white-space:unset;backface-visibility:hidden;word-wrap:break-word;word-break:break-word;overflow-wrap:break-word;\"], Cell, props => props.theme.complementary, props => props.theme.onPrimary);\nexport default (({\n  content,\n  header\n}) => {\n  const cellMarkup = header ? __jsx(CellHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, content) : __jsx(Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, content);\n  return cellMarkup;\n});","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/components/Table/Cell.js"],"names":["styled","withTheme","Cell","td","props","theme","primaryLight","onPrimary","CellHeader","th","complementary","content","header","cellMarkup"],"mappings":";;;AAAA,OAAOA,MAAP,IAAiBC,SAAjB,QAAkC,mBAAlC;AAGA,MAAMC,IAAI,GAAGF,MAAM,CAACG,EAAV;AAAA;AAAA;AAAA,kLAQMC,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,YAR3B,EASCF,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYE,SATtB,CAAV;AAaA,MAAMC,UAAU,GAAGR,MAAM,CAACS,EAAV;AAAA;AAAA;AAAA,uPACZP,IADY,EAOAE,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYK,aAPrB,EAQLN,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYE,SARhB,CAAhB;AAmBA,gBAAe,CAAC;AAAEI,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAyB;AAEtC,QAAMC,UAAU,GAAGD,MAAM,GACvB,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OADH,CADuB,GAKvB,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OADH,CALF;AAUA,SAAQE,UAAR;AACD,CAbD","sourcesContent":["import styled, { withTheme } from 'styled-components'\n\n\nconst Cell = styled.td`\n  border: 1px solid #f4f6f8;\n  padding: 4px;\n  margin-left: 6px;\n  margin-right: 6px;\n  width: fit-content;\n  font-size: 14px;\n  font-family: 'Rubik';\n  background: ${props => props.theme.primaryLight};\n  color: ${props => props.theme.onPrimary};\n  vertical-align: top;\n`\n\nconst CellHeader = styled.th`\n  ${Cell};\n  top: 0;\n  position: sticky !important;\n  z-index: 999999;\n  font-size: 16px;\n  padding: 6px 12px;;\n  background: ${props => props.theme.complementary};\n  color: ${props => props.theme.onPrimary};\n  width: 145px;\n  white-space: unset;\n  backface-visibility: hidden;\n  word-wrap: break-word;\n  word-break: break-word;\n  overflow-wrap: break-word;\n`\n\n\n\nexport default ({ content, header }) => {\n\n  const cellMarkup = header ? (\n    <CellHeader>\n      {content}\n    </CellHeader>\n  ) : (\n    <Cell>\n      {content}\n    </Cell>\n  );\n\n  return (cellMarkup);\n}\n"]},"metadata":{},"sourceType":"module"}