{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/components/CaseChart.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Button, Container, Paragraph } from './S';\nimport axios from 'axios';\nimport sortForChart from '../utils/sortForChart';\nimport Chart from './Chart';\nimport Spinner from './Spinner';\nvar baseURL = \"https://nCorona.live/api/v1/alltime/\";\n\nvar worldTimeData = function worldTimeData() {\n  var data, dataRes;\n  return _regeneratorRuntime.async(function worldTimeData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(baseURL));\n\n        case 2:\n          data = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(sortForChart(data.data));\n\n        case 5:\n          dataRes = _context.sent;\n          return _context.abrupt(\"return\", dataRes);\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar CaseChart = /*#__PURE__*/function (_React$Component) {\n  _inherits(CaseChart, _React$Component);\n\n  function CaseChart(props) {\n    var _this;\n\n    _classCallCheck(this, CaseChart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CaseChart).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"present\", function (val) {\n      return _this.setState({\n        dataToPresent: val\n      });\n    });\n\n    _this.state = {\n      dataToPresent: 'worldCases',\n      worldData: [],\n      worldLabels: [],\n      worldCases: [],\n      deathCases: [],\n      newCases: [],\n      showWorld: true,\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(CaseChart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var timeStats, worldCases, deathCases, newCases, worldLabels;\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              this.setState({\n                loading: true\n              });\n              _context2.prev = 1;\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(worldTimeData());\n\n            case 4:\n              timeStats = _context2.sent;\n              worldCases = timeStats && timeStats.datasets.filter(function (a) {\n                return a.label === 'cases';\n              });\n              deathCases = timeStats && timeStats.datasets.filter(function (a) {\n                return a.label === 'deaths';\n              });\n              newCases = timeStats && timeStats.datasets.filter(function (a) {\n                return a.label === 'new cases';\n              });\n              worldLabels = timeStats && timeStats.labels;\n              this.setState({\n                worldData: timeStats,\n                worldCases: worldCases,\n                deathCases: deathCases,\n                newCases: newCases,\n                worldLabels: worldLabels,\n                loading: false\n              });\n              _context2.next = 15;\n              break;\n\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](1);\n              this.setState({\n                loading: false,\n                error: _context2.t0\n              });\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, [[1, 12]], Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.loading) {\n        return __jsx(Container, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, __jsx(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, \"Loading Data . . .\"));\n      }\n\n      if (this.state.error) {\n        return __jsx(Container, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, __jsx(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, ' error occured:' + this.state.error));\n      }\n\n      return __jsx(React.Fragment, null, __jsx(Paragraph, {\n        mw: \"auto\",\n        center: true,\n        secondary: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, this.props.isHeb && 'להלן: שיעור התפשטות הנגיף בעולם לפי: מקרי מוות ומסרים מקרים חדשים ליום' || 'Growth Rate of the virus in the world, including deaths and new cases'), __jsx(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-evenly',\n          padding: '34px 32px 8px 32px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, __jsx(Button, {\n        bg: \"transparent\",\n        outline: true,\n        error2: true,\n        btnColor: \"onBg\",\n        medium: true,\n        onClick: function onClick() {\n          return _this2.present('worldCases');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, this.props.isHeb && 'נדבקים' || 'Cases'), __jsx(Button, {\n        bg: \"transparent\",\n        outline: true,\n        error2: true,\n        btnColor: \"onBg\",\n        medium: true,\n        onClick: function onClick() {\n          return _this2.present('deathCases');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, this.props.isHeb && 'מקרי מוות' || 'Deaths'), __jsx(Button, {\n        bg: \"transparent\",\n        outline: true,\n        error2: true,\n        btnColor: \"onBg\",\n        medium: true,\n        onClick: function onClick() {\n          return _this2.present('newCases');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, this.props.isHeb && 'מקרים חדשים' || 'New cases')), this.state.worldData && __jsx(Chart, {\n        type: \"line\",\n        labels: this.state.worldLabels,\n        data: this.state[this.state.dataToPresent],\n        label: this.props.isHeb ? 'נתונים מהעולם' : 'Global',\n        theme: this.props.theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }) || __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \" Loading Charts ... \"));\n    }\n  }]);\n\n  return CaseChart;\n}(React.Component);\n\nexport default CaseChart;","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/components/CaseChart.js"],"names":["React","Button","Container","Paragraph","axios","sortForChart","Chart","Spinner","baseURL","worldTimeData","get","data","dataRes","CaseChart","props","val","setState","dataToPresent","state","worldData","worldLabels","worldCases","deathCases","newCases","showWorld","loading","timeStats","datasets","filter","a","label","labels","error","isHeb","display","justifyContent","padding","present","theme","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Button, Container, Paragraph } from './S'\nimport axios from 'axios'\nimport sortForChart from '../utils/sortForChart'\nimport Chart from './Chart'\nimport Spinner from './Spinner'\n\nconst baseURL = `https://nCorona.live/api/v1/alltime/`\n\nconst worldTimeData = async () => {\n  const data = await axios.get(baseURL)\n  const dataRes = await sortForChart(data.data)\n  return dataRes\n}\n\nclass CaseChart extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      dataToPresent: 'worldCases',\n      worldData: [],\n      worldLabels: [],\n      worldCases: [],\n      deathCases: [],\n      newCases: [],\n      showWorld: true,\n      loading: false\n    }\n  }\n\n  present = val => this.setState({dataToPresent: val})\n\n  async componentDidMount() {\n    this.setState({ loading: true })\n\n    try {\n      const timeStats = await worldTimeData()\n      const worldCases = timeStats && timeStats.datasets.filter(a => a.label === 'cases')\n      const deathCases = timeStats && timeStats.datasets.filter(a => a.label === 'deaths')\n      const newCases = timeStats && timeStats.datasets.filter(a => a.label === 'new cases')\n      const worldLabels = timeStats && timeStats.labels\n\n\n\n      this.setState({\n        worldData: timeStats,\n        worldCases,\n        deathCases,\n        newCases,\n        worldLabels,\n        loading: false\n      })\n    } catch(err) {\n      this.setState({ loading: false, error: err })\n    }\n\n  }\n\n  render() {\n\n    if (this.state.loading) {\n      return <Container><h1>Loading Data . . .</h1></Container>\n    }\n    if (this.state.error) {\n      return <Container><h1>{' error occured:' + this.state.error}</h1></Container>\n    }\n\n    return (\n      <>\n          <Paragraph mw='auto' center secondary>\n          {this.props.isHeb &&\n            'להלן: שיעור התפשטות הנגיף בעולם לפי: מקרי מוות ומסרים מקרים חדשים ליום'\n                || 'Growth Rate of the virus in the world, including deaths and new cases'}\n          </Paragraph>\n\n        <div style={{display: 'flex', justifyContent: 'space-evenly', padding: '34px 32px 8px 32px'}}>\n          <Button bg='transparent' outline error2 btnColor='onBg' medium onClick={() => this.present('worldCases')}>{this.props.isHeb && 'נדבקים' || 'Cases'}</Button>\n          <Button bg='transparent' outline error2 btnColor='onBg' medium onClick={() => this.present('deathCases')}>{this.props.isHeb && 'מקרי מוות' || 'Deaths'}</Button>\n          <Button bg='transparent' outline error2 btnColor='onBg' medium onClick={() => this.present('newCases')}>{this.props.isHeb && 'מקרים חדשים' || 'New cases'}</Button>\n        </div>\n        {\n          this.state.worldData &&\n            <Chart \n              type='line'\n              labels={this.state.worldLabels}\n              data={this.state[this.state.dataToPresent]}\n              label={this.props.isHeb ? 'נתונים מהעולם' : 'Global'}\n              theme={this.props.theme}\n            /> || <div> Loading Charts ... </div>\n        }\n      </>\n    )\n  }\n\n}\n\nexport default CaseChart\n"]},"metadata":{},"sourceType":"module"}