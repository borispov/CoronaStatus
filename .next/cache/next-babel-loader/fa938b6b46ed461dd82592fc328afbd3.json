{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useEffect, useReducer } from 'react';\nimport axios from 'axios';\nimport sortForChart from '../utils/sortForChart';\nimport sortExternalApi from '../utils/sortExternalApi';\nvar baseURL = \"https://nCorona.live/api/v1/alltime/\";\nvar baseURLv2 = 'https://pomber.github.io/covid19/timeseries.json';\n\nfunction currentCountry() {\n  return _regeneratorRuntime.async(function currentCountry$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios.get('https://extreme-ip-lookup.com/json/').then(function (res) {\n            return res.data.country;\n          })[\"catch\"](function (e) {\n            return 'israel';\n          }));\n\n        case 2:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n} // function useTime(loc, url = baseURL) {\n\n\nfunction useTime(loc) {\n  var theme = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var _useState = useState(),\n      countryStats = _useState[0],\n      setCountryStats = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  var _useState4 = useState(),\n      countries = _useState4[0],\n      setCountries = _useState4[1];\n\n  useEffect(function () {\n    function fetchData(cn) {\n      var country, URL, data, timeStats;\n      return _regeneratorRuntime.async(function fetchData$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setLoading(true);\n              setError();\n              _context2.t0 = loc;\n\n              if (_context2.t0) {\n                _context2.next = 7;\n                break;\n              }\n\n              _context2.next = 6;\n              return _regeneratorRuntime.awrap(currentCountry());\n\n            case 6:\n              _context2.t0 = _context2.sent;\n\n            case 7:\n              country = _context2.t0;\n              URL = baseURL + country;\n              _context2.next = 11;\n              return _regeneratorRuntime.awrap(axios.get(URL).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return setError(err);\n              }));\n\n            case 11:\n              data = _context2.sent;\n              // const data = await axios.get(baseURLv2)\n              //   .then(res => res.data[country])\n              //   .catch(err => setError(err))\n              // const timeStats = sortExternalApi(data);\n              timeStats = sortForChart(data, theme);\n              setCountryStats(timeStats);\n              setLoading(false);\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData(loc);\n  }, [loc]);\n  return {\n    countryStats: countryStats,\n    loading: loading,\n    error: error,\n    countries: countries\n  };\n}\n\nexport default useTime;","map":null,"metadata":{},"sourceType":"module"}