{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container } from './S';\nimport styled from 'styled-components';\nconst Wrapper = styled.div.withConfig({\n  displayName: \"InfoSection__Wrapper\",\n  componentId: \"sc-1anhjcp-0\"\n})([\"direction:rtl;text-align:none;display:flex;flex-wrap:wrap;justify-content:center;font-family:Rubik;margin-left:15px;margin-right:15px;margin-bottom:32px;@media (max-width:768px){flex-direction:column;align-content:center;}\"]);\nconst Section = styled.div.withConfig({\n  displayName: \"InfoSection__Section\",\n  componentId: \"sc-1anhjcp-1\"\n})([\"border-radius:4px;flex:0 0 50%;max-width:33%;position:relative;width:100%;border:1px solid;border-color:\", \";background:\", \";margin-left:8px;margin-right:8px;margin-top:16px;margin-bottom:16px;@media (max-width:768px){flex-direction:column;flex:0 0 100%;max-width:85%;}\"], props => props.theme.primaryColor, props => props.theme.bgColor);\nconst SectionTitle = styled.h2.withConfig({\n  displayName: \"InfoSection__SectionTitle\",\n  componentId: \"sc-1anhjcp-2\"\n})([\"color:\", \";background:\", \";font-size:20px;padding:4px 8px;margin-bottom:8px;border-bottom:1px solid black;\"], props => props.theme.onPrimary, props => props.theme.primaryColor);\nconst Link = styled.a.withConfig({\n  displayName: \"InfoSection__Link\",\n  componentId: \"sc-1anhjcp-3\"\n})([\"text-decoration:none;color:\", \";font-weight:500;font-family:'Rubik';font-size:18px;line-height:1.8;padding:6px 4px 2px 4px;transition:color 0.15s ease-in-out;&:hover{color:\", \";}@media (max-width:768px){font-size:16px;}\"], props => props.theme.primaryDark, props => props.theme.primaryLight);\nconst Desc = styled.p.withConfig({\n  displayName: \"InfoSection__Desc\",\n  componentId: \"sc-1anhjcp-4\"\n})([\"font-size:16px;line-height:1.3;color:\", \";padding:0 4px;padding-bottom:12px;@media (max-width:768px){font-size:14px;}\"], props => props.theme.text.secondary);\nconst Title = styled.h1.withConfig({\n  displayName: \"InfoSection__Title\",\n  componentId: \"sc-1anhjcp-5\"\n})([\"font-size:28px;margin:128px 12px auto;text-shadow:0 2px 6px rgba(0,0,0,0.16);text-align:center;color:\", \";\"], props => props.theme.onBg);\n\nconst reduceToCat = (a, _ref) => {\n  let {\n    category\n  } = _ref,\n      x = _objectWithoutProperties(_ref, [\"category\"]);\n\n  return {\n    category,\n    data: a['data'].concat(x)\n  };\n};\n\nconst init = {\n  category: '',\n  data: []\n}; // RENDERING functions\n\nconst mapDataToSection = (item, idx) => {\n  return __jsx(\"div\", {\n    key: idx\n  }, __jsx(Link, {\n    href: item.link\n  }, item.subject), __jsx(Desc, null, item.description));\n};\n\nconst renderSection = secData => {\n  return secData.map((it, ix) => __jsx(Section, {\n    key: ix\n  }, __jsx(SectionTitle, null, it.category), it.data.map(mapDataToSection)));\n};\n\nexport default (() => {\n  const {\n    0: data,\n    1: setData\n  } = useState();\n  const {\n    0: error,\n    1: setError\n  } = useState();\n  useEffect(() => {\n    async function fetchData() {\n      setError();\n\n      try {\n        const {\n          data\n        } = await axios.get('https://nCorona.live/api/data/resources');\n        const datakeys = [...new Set(data.map(i => i.category))];\n        const d = datakeys.map(key => data.filter(i => i.category === key)).map(each => each.reduce(reduceToCat, init));\n        setData(d);\n      } catch (e) {\n        setError(e);\n      }\n    }\n\n    fetchData();\n  }, []);\n\n  if (error) {\n    return __jsx(\"div\", null, \" Received Error Fetching Information ... Let Me Know About This: boristofu@gmail.com\");\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Title, null, \"Resources\"), __jsx(Wrapper, null, data && renderSection(data)));\n});","map":null,"metadata":{},"sourceType":"module"}