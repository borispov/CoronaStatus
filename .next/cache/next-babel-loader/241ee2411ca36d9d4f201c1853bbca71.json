{"ast":null,"code":"var _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/components/CoronaApp.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport Input from './Input';\nimport Stats from './Stats';\nimport useTime from '../utils/useTime';\nimport useTodayStats from '../utils/useTodayStats';\nimport useCountries from '../utils/useCountries';\nimport Chart from './Chart';\nimport { Container } from './S';\nimport HeaderDescription from './HeaderDescription';\nimport CaseChart from './CaseChart';\nimport Select from 'react-select';\nimport { withTheme } from 'styled-components';\n\nconst CoronaApp = ({\n  isHeb,\n  theme,\n  userLocation,\n  yesterday\n}) => {\n  const {\n    0: showWorld,\n    1: setShowWorld\n  } = useState(true);\n  const {\n    0: country,\n    1: setCountry\n  } = useState(userLocation);\n  const {\n    0: inputValue,\n    1: setInput\n  } = useState('');\n  console.log(yesterday);\n  const url = 'https://nCorona.live/api/v1/';\n  const url2 = 'https://corona.lmao.ninja/countries/';\n  const worldUrl = 'https://corona.lmao.ninja/all';\n  const {\n    countryStats\n  } = useTime(country, theme);\n  const {\n    todayStats\n  } = useTodayStats(url, country);\n  const worldToday = useTodayStats(url, 'world').todayStats;\n  const {\n    countries\n  } = useCountries();\n  const worldTodaySorted = worldToday && {\n    active: worldToday.active,\n    cases: worldToday.cases,\n    todayCases: worldToday.todayCases,\n    recovered: worldToday.recovered,\n    deaths: worldToday.deaths\n  } || '';\n  const todayStatsSorted = todayStats && {\n    cases: todayStats.cases,\n    todayCases: todayStats.todayCases,\n    recovered: todayStats.recovered,\n    deaths: todayStats.deaths\n  } || '';\n\n  const handleChange = selected => {\n    setCountry(selected.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setCountry(inputValue);\n  };\n\n  const selectOptions = countries && countries.map(a => ({\n    value: a,\n    label: a\n  }));\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(HeaderDescription, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, countryStats && __jsx(Chart, {\n    isHeb: isHeb,\n    type: \"line\",\n    labels: countryStats.labels // data={countryStats.datasets.filter(a => a.label === 'cases')}\n    ,\n    data: countryStats.datasets,\n    label: country || 'israel',\n    fill: false,\n    stops: 3,\n    showLegend: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), __jsx(\"form\", {\n    style: {\n      maxWidth: '520px',\n      margin: '54px auto',\n      textAlign: 'center'\n    },\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    style: {\n      fontSize: '16px',\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, isHeb ? `נתונים לפי מדינה` : `Data For Country:`), __jsx(Select, {\n    className: 'Select',\n    options: selectOptions,\n    value: country,\n    onChange: handleChange,\n    placeholder: country || 'ישראל',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })), __jsx(Stats, {\n    cn: country || todayStats && todayStats.country,\n    todayStats: todayStatsSorted,\n    isHeb: isHeb,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), __jsx(HeaderDescription, {\n    txt: \"* \\u05D2\\u05E8\\u05E4\\u05D9\\u05DD \\u05D4\\u05DE\\u05E6\\u05D9\\u05D2\\u05D9\\u05DD \\u05D0\\u05EA \\u05E9\\u05D9\\u05E2\\u05D5\\u05E8 \\u05D4\\u05E6\\u05DE\\u05D9\\u05D7\\u05D4 \\u05E9\\u05DC \\u05E0\\u05D2\\u05D9\\u05E3 \\u05D4\\u05E7\\u05D5\\u05E8\\u05D5\\u05E0\\u05D4, \\u05D0\\u05D9\\u05E0\\u05DD \\u05DE\\u05EA\\u05E2\\u05D3\\u05DB\\u05E0\\u05D9\\u05DD \\u05D1\\u05D6\\u05DE\\u05DF \\u05D0\\u05DE\\u05EA \\u05D5\\u05DC\\u05DB\\u05DF \\u05D0\\u05D9\\u05E0\\u05DD \\u05DE\\u05E9\\u05E7\\u05E4\\u05D9\\u05DD \\u05D0\\u05EA \\u05D4\\u05D9\\u05D5\\u05DD \\u05D4\\u05E0\\u05D5\\u05DB\\u05D7\\u05D9. \\u05D1\\u05D3\\u05E8\\u05DA-\\u05DB\\u05DC\\u05DC \\u05DE\\u05EA\\u05E7\\u05D9\\u05D9\\u05DD \\u05E4\\u05E2\\u05E8 \\u05E9\\u05DC \\u05D9\\u05D5\\u05DD, \\u05DC\\u05DB\\u05DC \\u05D4\\u05D9\\u05D5\\u05EA\\u05E8 \\u05E9\\u05DC\\u05D5\\u05E9\\u05D4 \\u05D9\\u05DE\\u05D9\\u05DD. \\u05D4\\u05E0\\u05EA\\u05D5\\u05E0\\u05D9\\u05DD \\u05D4\\u05DE\\u05D5\\u05E6\\u05D2\\u05D9\\u05DD \\u05DE\\u05D7\\u05D5\\u05E5 \\u05DC\\u05D2\\u05E8\\u05E4\\u05D9\\u05DD \\u05DE\\u05E9\\u05E7\\u05E4\\u05D9\\u05DD \\u05D0\\u05EA \\u05D4\\u05D6\\u05DE\\u05DF \\u05D4\\u05E0\\u05EA\\u05D5\\u05DF \\u05D1\\u05E8\\u05D2\\u05E2 \\u05D4\\u05E0\\u05D5\\u05DB\\u05D7\\u05D9 \\u05D5\\u05DE\\u05EA\\u05E2\\u05D3\\u05DB\\u05E0\\u05D9\\u05DD \\u05D1\\u05E2\\u05E8\\u05DA \\u05D0\\u05D7\\u05EA \\u05DC\\u05D7\\u05E6\\u05D9 \\u05E9\\u05E2\\u05D4.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), __jsx(Stats, {\n    cn: 'World',\n    todayWorld: worldTodaySorted,\n    isHeb: isHeb,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), __jsx(CaseChart, {\n    showWorld: showWorld,\n    country: country,\n    isHeb: isHeb,\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  })));\n};\n\nexport default withTheme(CoronaApp);","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/components/CoronaApp.js"],"names":["useState","Input","Stats","useTime","useTodayStats","useCountries","Chart","Container","HeaderDescription","CaseChart","Select","withTheme","CoronaApp","isHeb","theme","userLocation","yesterday","showWorld","setShowWorld","country","setCountry","inputValue","setInput","console","log","url","url2","worldUrl","countryStats","todayStats","worldToday","countries","worldTodaySorted","active","cases","todayCases","recovered","deaths","todayStatsSorted","handleChange","selected","value","handleSubmit","e","preventDefault","selectOptions","map","a","label","labels","datasets","maxWidth","margin","textAlign","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport Input from './Input'\nimport Stats from './Stats'\nimport useTime from '../utils/useTime'\nimport useTodayStats from '../utils/useTodayStats'\nimport useCountries from '../utils/useCountries'\nimport Chart from './Chart'\nimport { Container } from './S'\nimport HeaderDescription from './HeaderDescription'\nimport CaseChart from './CaseChart'\nimport Select from 'react-select'\nimport { withTheme } from 'styled-components'\n\n\nconst CoronaApp = ({ isHeb, theme, userLocation, yesterday }) => {\n\n  const [showWorld, setShowWorld] = useState(true)\n  const [country, setCountry] = useState(userLocation)\n  const [inputValue, setInput] = useState('')\n\n  console.log(yesterday);\n\n  const url = 'https://nCorona.live/api/v1/'\n  const url2 = 'https://corona.lmao.ninja/countries/'\n  const worldUrl = 'https://corona.lmao.ninja/all'\n\n  const { countryStats } = useTime(country, theme)\n  const { todayStats } = useTodayStats(url, country)\n  const worldToday = useTodayStats(url, 'world').todayStats\n\n  const { countries } = useCountries()\n\n  const worldTodaySorted = worldToday &&\n    {\n      active: worldToday.active,\n      cases: worldToday.cases,\n      todayCases: worldToday.todayCases,\n      recovered: worldToday.recovered,\n      deaths: worldToday.deaths\n    } || ''\n\n  const todayStatsSorted = todayStats && \n    {\n      cases: todayStats.cases,\n      todayCases: todayStats.todayCases,\n      recovered: todayStats.recovered,\n      deaths: todayStats.deaths\n    } || ''\n\n  const handleChange = selected => {\n    setCountry(selected.value)\n  }\n  const handleSubmit = e => {\n    e.preventDefault();\n    setCountry(inputValue)\n  }\n\n  const selectOptions = countries && countries.map(a => ({ value: a, label: a }))\n\n  return (\n    <div>\n      <HeaderDescription />\n\n      <Container>\n\n      {\n        countryStats &&\n          (\n              <Chart\n                isHeb={isHeb}\n                type='line'\n                labels={countryStats.labels}\n                // data={countryStats.datasets.filter(a => a.label === 'cases')}\n                data={countryStats.datasets}\n                label={country || 'israel'}\n                fill={false}\n                stops={3}\n                showLegend={false}\n              />\n          )\n      }\n\n      <form \n        style={{ maxWidth: '520px', margin: '54px auto', textAlign: 'center'}}\n        onSubmit={handleSubmit}>\n        <label style={{fontSize: '16px', fontWeight: 'bold'}}>\n          { isHeb ? `נתונים לפי מדינה` : `Data For Country:` }\n        </label>\n\n        <Select\n          className={'Select'}\n          options={selectOptions}\n          value={country}\n          onChange={handleChange}\n          placeholder={country || 'ישראל'}\n        />\n      </form>\n\n      <Stats\n        cn={country || todayStats && todayStats.country}\n        todayStats={todayStatsSorted}\n        isHeb={isHeb}\n      />\n\n      <HeaderDescription \n        txt='* גרפים המציגים את שיעור הצמיחה של נגיף הקורונה,\n        אינם מתעדכנים בזמן אמת ולכן אינם משקפים את היום הנוכחי. בדרך-כלל מתקיים פער של יום,\n        לכל היותר שלושה ימים. הנתונים המוצגים מחוץ לגרפים משקפים את הזמן הנתון ברגע הנוכחי ומתעדכנים בערך אחת לחצי שעה.'/>\n\n      <Stats\n        cn={'World'}\n        todayWorld={worldTodaySorted}\n        isHeb={isHeb}\n      />\n\n      <CaseChart\n        showWorld={showWorld} \n        country={country}\n        isHeb={isHeb}\n        theme={theme}\n      />\n\n    </Container>\n\n    </div>\n  )\n}\n\nexport default withTheme(CoronaApp)\n"]},"metadata":{},"sourceType":"module"}