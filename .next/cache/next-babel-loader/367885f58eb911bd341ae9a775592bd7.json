{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport App from 'next/app';\nimport Router from 'next/router';\nimport Link from 'next/link';\nimport { useState, useRef } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport axios from 'axios';\nimport useOutSide from '../utils/useOutSide';\nimport GlobalStyle from './Global';\nimport Header from '../components/Header';\nimport Burger from '../components/Burger';\nimport Menu from '../components/Menu';\nimport { MoonIcon, SunIcon, WorldIcon } from '../components/Icons/ThemeIcon';\nimport { themes } from '../utils/themes';\nimport * as gtag from '../utils/gtag';\nRouter.events.on('routeChangeComplete', function (url) {\n  return gtag.pageview(url);\n});\n\nvar lightTheme = function lightTheme() {\n  return _objectSpread({}, themes['common'], {}, themes['light']);\n};\n\nvar darkTheme = function darkTheme() {\n  return _objectSpread({}, themes['common'], {}, themes['dark']);\n};\n\nfunction MyApp(_ref) {\n  var Component, pageProps, currentCountry, userLocation, _useState, theme, setTheme, _useState2, isHeb, setHeb, _useState3, menuOpen, setOpen, closeMenu, toggleMenu, toggleLang, setDarkTheme, setLightTheme, node, displayLang, isLight;\n\n  return _regeneratorRuntime.async(function MyApp$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          currentCountry = function _ref2() {\n            return _regeneratorRuntime.async(function currentCountry$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return _regeneratorRuntime.awrap(axios.get('https://extreme-ip-lookup.com/json/').then(function (res) {\n                      return res.data.country;\n                    })[\"catch\"](function (e) {\n                      return 'israel';\n                    }));\n\n                  case 2:\n                    return _context.abrupt(\"return\", _context.sent);\n\n                  case 3:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          };\n\n          Component = _ref.Component, pageProps = _ref.pageProps;\n          userLocation = currentCountry();\n          _useState = useState(lightTheme()), theme = _useState[0], setTheme = _useState[1];\n          _useState2 = useState(userLocation && (userLocation === 'israel' || userLocation === 'Israel' ? true : false) || 'true'), isHeb = _useState2[0], setHeb = _useState2[1];\n          _useState3 = useState(false), menuOpen = _useState3[0], setOpen = _useState3[1];\n\n          closeMenu = function closeMenu() {\n            return setOpen(false);\n          };\n\n          toggleMenu = function toggleMenu() {\n            return setOpen(!menuOpen);\n          };\n\n          toggleLang = function toggleLang() {\n            closeMenu(), setHeb(!isHeb);\n          };\n\n          setDarkTheme = function setDarkTheme() {\n            closeMenu(), setTheme(darkTheme());\n          };\n\n          setLightTheme = function setLightTheme() {\n            closeMenu(), setTheme(lightTheme());\n          };\n\n          node = useRef();\n          useOutSide(node, closeMenu);\n          displayLang = isHeb ? 'English' : 'עברית';\n          isLight = theme.type === 'light';\n          return _context2.abrupt(\"return\", __jsx(ThemeProvider, {\n            theme: theme,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }, __jsx(GlobalStyle, {\n            isHeb: isHeb,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            },\n            __self: this\n          }), __jsx(Header, {\n            title: \"nCorona\",\n            isHeb: isHeb,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          }, __jsx(\"div\", {\n            ref: node,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          }, __jsx(Burger, {\n            setOpen: toggleMenu,\n            open: menuOpen,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          }), __jsx(Menu, {\n            setOpen: toggleMenu,\n            open: menuOpen,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          }, __jsx(Link, {\n            href: \"/News\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          }, __jsx(\"a\", {\n            alt: \"news\",\n            onClick: function onClick() {\n              return closeMenu();\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }, __jsx(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          }, \"\\uD83D\\uDCF0\"), isHeb && 'חדשות' || 'News')), __jsx(Link, {\n            href: \"/Statistics\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, __jsx(\"a\", {\n            alt: \"stats\",\n            onClick: function onClick() {\n              return closeMenu();\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }, __jsx(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          }, \" \\uD83D\\uDDFA\"), isHeb && 'נתונים' || 'Data')), __jsx(Link, {\n            href: \"/About\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }, __jsx(\"a\", {\n            alt: \"about\",\n            onClick: function onClick() {\n              return closeMenu();\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          }, __jsx(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          }, \" \\uD83D\\uDDFA\"), isHeb && 'אודות' || 'About')), __jsx(\"a\", {\n            onClick: toggleLang,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105\n            },\n            __self: this\n          }, __jsx(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106\n            },\n            __self: this\n          }, \"\\uD83C\\uDF10\"), displayLang)))), __jsx(Component, _extends({}, pageProps, {\n            isHeb: isHeb,\n            userLocation: typeof userLocation === 'string' && userLocation,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114\n            },\n            __self: this\n          }))));\n\n        case 16:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, this, null, Promise);\n}\n\nMyApp.getInitialProps = function _callee(appContext) {\n  var appProps;\n  return _regeneratorRuntime.async(function _callee$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(App.getInitialProps(appContext));\n\n        case 2:\n          appProps = _context3.sent;\n          return _context3.abrupt(\"return\", _objectSpread({}, appProps));\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/pages/_app.js"],"names":["App","Router","Link","useState","useRef","ThemeProvider","axios","useOutSide","GlobalStyle","Header","Burger","Menu","MoonIcon","SunIcon","WorldIcon","themes","gtag","events","on","url","pageview","lightTheme","darkTheme","MyApp","currentCountry","get","then","res","data","country","e","Component","pageProps","userLocation","theme","setTheme","isHeb","setHeb","menuOpen","setOpen","closeMenu","toggleMenu","toggleLang","setDarkTheme","setLightTheme","node","displayLang","isLight","type","getInitialProps","appContext","appProps"],"mappings":"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","sourcesContent":["import App from 'next/app'\nimport Router from 'next/router'\nimport Link from 'next/link';\nimport { useState, useRef } from 'react'\nimport { ThemeProvider } from 'styled-components'\nimport axios from 'axios'\n\nimport useOutSide from '../utils/useOutSide'\nimport GlobalStyle from './Global'\nimport Header from '../components/Header'\nimport Burger from '../components/Burger';\nimport Menu from '../components/Menu';\nimport { MoonIcon, SunIcon, WorldIcon } from '../components/Icons/ThemeIcon'\nimport { themes } from '../utils/themes'\nimport * as gtag from '../utils/gtag'\n\n\nRouter.events.on('routeChangeComplete', url => gtag.pageview(url))\n\nconst lightTheme = () => ({\n  ...themes['common'],\n  ...themes['light'],\n})\n\nconst darkTheme = () => ({\n  ...themes['common'],\n  ...themes['dark'],\n})\n\n\nasync function MyApp ({ Component, pageProps }) {\n\n  async function currentCountry(){\n    return await axios\n      .get('https://extreme-ip-lookup.com/json/')\n      .then(res => res.data.country)\n      .catch(e => 'israel')\n  }\n\n  const userLocation = currentCountry()\n\n\n  const [theme, setTheme] = useState(lightTheme())\n  const [isHeb, setHeb] = useState(userLocation && (userLocation === 'israel' || userLocation === 'Israel' ? true : false) || 'true')\n  const [menuOpen, setOpen] = useState(false)\n\n  const closeMenu     = () => setOpen(false)\n  const toggleMenu    = () => setOpen(!menuOpen)\n  const toggleLang    = () => {closeMenu(), setHeb(!isHeb)}\n  const setDarkTheme  = () => {closeMenu(), setTheme(darkTheme())}\n  const setLightTheme = () => {closeMenu(), setTheme(lightTheme())}\n\n  const node          = useRef()\n  useOutSide(node, closeMenu)\n\n  const displayLang   = isHeb ? 'English' : 'עברית'\n  const isLight       = theme.type === 'light'\n\n\n\n\n\n  return (\n    <ThemeProvider theme={theme}>\n\n      <GlobalStyle isHeb={isHeb}/>\n      <Header title='nCorona' isHeb={isHeb} >\n        <div ref={node}>\n          <Burger setOpen={toggleMenu} open={menuOpen} />\n          <Menu setOpen={toggleMenu} open={menuOpen} >\n\n            <Link href=\"/News\">\n              <a alt=\"news\" onClick={() => closeMenu()}>\n                <span>&#128240;</span>\n                { isHeb && 'חדשות' || 'News' }\n              </a>\n            </Link>\n\n            <Link href=\"/Statistics\">\n              <a alt=\"stats\" onClick={() => closeMenu()}>\n                <span>\t&#128506;</span>\n                { isHeb && 'נתונים' || 'Data' }\n              </a>\n            </Link>\n\n            <Link href=\"/About\">\n              <a alt=\"about\" onClick={() => closeMenu()}>\n                <span>\t&#128506;</span>\n                { isHeb && 'אודות' || 'About' }\n              </a>\n            </Link>\n\n    {/*\n    // This is Night Mode.. Currently disabled\n            <a onClick={isLight ?setDarkTheme : setLightTheme}>\n              <span>{ isLight ? '🌒' : '🌞'}</span>\n              {\n                isLight\n                ? (isHeb && 'מצב לילה' || 'Dark Mode')\n                : (isHeb && 'מצב יום' || 'Light Mode')\n              }\n            </a>\n    */}\n\n            <a onClick={toggleLang}>\n              <span>&#127760;</span>\n              {displayLang}\n            </a>\n\n          </Menu>\n        </div>\n\n      </Header>\n      <Component {...pageProps} isHeb={isHeb} userLocation={typeof userLocation === 'string' && userLocation}  />\n    </ThemeProvider>\n  )\n}\n\n\nMyApp.getInitialProps = async (appContext) => {\n  const appProps = await App.getInitialProps(appContext);\n  return { ...appProps }\n}\n\nexport default MyApp\n"]},"metadata":{},"sourceType":"module"}