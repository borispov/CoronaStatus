{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/components/LineChart.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\n\nvar popVal = function popVal(o) {\n  return Object.values(o)[0];\n};\n\nvar defaultSettings = {\n  // fillColor: \"rgba(220,220,220,0.2)\",\n  strokeColor: \"rgba(220,220,220,1)\",\n  pointColor: \"rgba(220,220,220,1)\",\n  pointStrokeColor: \"#fff\",\n  pointHighlightFill: \"#fff\",\n  pointHighlightStroke: \"rgba(220,220,220,1)\",\n  pointBackgroundColor: '#111',\n  pointBorderWidth: 1,\n  pointHoverRadius: 5,\n  pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  pointHoverBorderColor: 'rgba(220,220,220,1)',\n  pointHoverBorderWidth: 2,\n  pointHitRadius: 10,\n  fill: false\n};\n\nvar filterBy5 = function filterBy5(x, i) {\n  return !(i % 14);\n};\n\nvar subtractArray = function subtractArray(arr) {\n  return arr.filter(filterBy5);\n};\n\nvar parseDatasets = function parseDatasets(arrayOfSets) {\n  return arrayOfSets.map(function (set) {\n    return _objectSpread({}, defaultSettings, {}, set, {\n      data: subtractArray(set.data)\n    });\n  });\n};\n\nexport default (function (props) {\n  var data = {\n    labels: subtractArray(props.labels),\n    datasets: props.datasets && parseDatasets(props.datasets)\n  };\n  console.log(data);\n  var options = {\n    // scaleShowGridLines: true,\n    scaleGridLineColor: 'rgba(0,0,0,.05)',\n    scaleGridLineWidth: 1,\n    scaleShowHorizontalLines: true,\n    scaleShowVerticalLines: true,\n    bezierCurve: true,\n    bezierCurveTension: 0.4,\n    pointDot: true,\n    pointDotRadius: 4,\n    pointDotStrokeWidth: 1,\n    pointHitDetectionRadius: 20,\n    datasetStroke: true,\n    datasetStrokeWidth: 2,\n    datasetFill: true,\n    legendTemplate: '<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\\\"background-color:<%=datasets[i].strokeColor%>\\\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>'\n  }; //   var options = {\n  //     responsive: true,\n  //     maintainAspectRatio: true,\n  //     animation: {\n  //         easing: 'easeInOutQuad',\n  //         duration: 520\n  //     },\n  //     scales: {\n  //         xAxes: [{\n  //             gridLines: {\n  //                 color: 'rgba(200, 200, 200, 0.05)',\n  //                 lineWidth: 1\n  //             }\n  //         }],\n  //         yAxes: [{\n  //           ticks: {\n  //             max: 75000,\n  //             min: 0,\n  //             stepSize: 50000\n  //           },\n  //             gridLines: {\n  //                 color: 'rgba(200, 200, 200, 0.08)',\n  //                 lineWidth: 1\n  //             }\n  //         }]\n  //     },\n  //     elements: {\n  //         line: {\n  //             tension: 0.4\n  //         }\n  //     },\n  //     legend: {\n  //         display: true\n  //     },\n  //     tooltips: {\n  //         titleFontFamily: 'Open Sans',\n  //         backgroundColor: 'rgba(0,0,0,0.3)',\n  //         titleFontColor: 'black',\n  //         caretSize: 5,\n  //         cornerRadius: 3,\n  //         xPadding: 10,\n  //         yPadding: 10\n  //     }\n  // };\n\n  return __jsx(\"div\", {\n    style: {\n      marginTop: '32px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    style: {\n      fontSize: '1.65rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, props.label), __jsx(Line, {\n    data: data,\n    width: 100,\n    options: options,\n    height: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }));\n});","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/components/LineChart.js"],"names":["React","Line","popVal","o","Object","values","defaultSettings","strokeColor","pointColor","pointStrokeColor","pointHighlightFill","pointHighlightStroke","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointHitRadius","fill","filterBy5","x","i","subtractArray","arr","filter","parseDatasets","arrayOfSets","map","set","data","props","labels","datasets","console","log","options","scaleGridLineColor","scaleGridLineWidth","scaleShowHorizontalLines","scaleShowVerticalLines","bezierCurve","bezierCurveTension","pointDot","pointDotRadius","pointDotStrokeWidth","pointHitDetectionRadius","datasetStroke","datasetStrokeWidth","datasetFill","legendTemplate","marginTop","fontSize","label"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Line} from 'react-chartjs-2';\n\nconst popVal = o => Object.values(o)[0]\n\nconst defaultSettings = {\n  // fillColor: \"rgba(220,220,220,0.2)\",\n  strokeColor: \"rgba(220,220,220,1)\",\n  pointColor: \"rgba(220,220,220,1)\",\n  pointStrokeColor: \"#fff\",\n  pointHighlightFill: \"#fff\",\n  pointHighlightStroke: \"rgba(220,220,220,1)\",\n  pointBackgroundColor: '#111',\n  pointBorderWidth: 1,\n  pointHoverRadius: 5,\n  pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n  pointHoverBorderColor: 'rgba(220,220,220,1)',\n  pointHoverBorderWidth: 2,\n  pointHitRadius: 10,\n  fill: false\n}\n\nconst filterBy5 = (x, i) => !(i % 14)\nconst subtractArray = arr => arr.filter(filterBy5)\n\nconst parseDatasets = arrayOfSets => {\n  return arrayOfSets.map(set => ({\n    ...defaultSettings,\n    ...set,\n    data: subtractArray(set.data)\n  }))\n}\n\nexport default ( props ) => {\n\n  const data = {\n    labels: subtractArray(props.labels),\n    datasets: props.datasets && parseDatasets(props.datasets)\n  };\n\n  console.log(data);\n\n\n  const options = {\n    // scaleShowGridLines: true,\n    scaleGridLineColor: 'rgba(0,0,0,.05)',\n    scaleGridLineWidth: 1,\n    scaleShowHorizontalLines: true,\n    scaleShowVerticalLines: true,\n    bezierCurve: true,\n    bezierCurveTension: 0.4,\n    pointDot: true,\n    pointDotRadius: 4,\n    pointDotStrokeWidth: 1,\n    pointHitDetectionRadius: 20,\n    datasetStroke: true,\n    datasetStrokeWidth: 2,\n    datasetFill: true,\n    legendTemplate: '<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\\\"background-color:<%=datasets[i].strokeColor%>\\\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>',\n  }\n\n//   var options = {\n//     responsive: true,\n//     maintainAspectRatio: true,\n//     animation: {\n//         easing: 'easeInOutQuad',\n//         duration: 520\n//     },\n//     scales: {\n//         xAxes: [{\n//             gridLines: {\n//                 color: 'rgba(200, 200, 200, 0.05)',\n//                 lineWidth: 1\n//             }\n//         }],\n//         yAxes: [{\n//           ticks: {\n//             max: 75000,\n//             min: 0,\n//             stepSize: 50000\n//           },\n//             gridLines: {\n//                 color: 'rgba(200, 200, 200, 0.08)',\n//                 lineWidth: 1\n//             }\n//         }]\n//     },\n//     elements: {\n//         line: {\n//             tension: 0.4\n//         }\n//     },\n//     legend: {\n//         display: true\n//     },\n//     tooltips: {\n//         titleFontFamily: 'Open Sans',\n//         backgroundColor: 'rgba(0,0,0,0.3)',\n//         titleFontColor: 'black',\n//         caretSize: 5,\n//         cornerRadius: 3,\n//         xPadding: 10,\n//         yPadding: 10\n//     }\n// };\n\n  return (\n    <div style={{marginTop: '32px'}}>\n      <h1 style={{fontSize: '1.65rem'}}>{props.label}</h1>\n      <Line\n        data={data}\n        width={100}\n        options={options}\n        height={30}\n      />\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}