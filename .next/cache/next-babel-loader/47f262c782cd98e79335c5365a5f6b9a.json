{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst capitalize = str => str.charAt(0).toUpperCase() + str.toLowerCase().slice(1);\n\nconst parseCn = str => {\n  return str === 'usa' || str === 'Usa' || str === 'United States' ? 'USA' : str === 'Uk' || str === 'England' || str === 'United Kingdom' || str == 'great britain' ? 'UK' : str.toLowerCase();\n};\n\nfunction getCountry(list) {\n  return function (queryCountry) {\n    return list.reduce((a, c) => c.country === queryCountry ? c : a, {});\n  };\n}\n\nasync function currentCountry() {\n  return await axios.get('https://extreme-ip-lookup.com/json/').then(res => res.data.country).catch(e => 'israel');\n}\n\nfunction useTodayStats(url, country) {\n  const {\n    0: todayStats,\n    1: setStats\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState(false);\n  useEffect(() => {\n    async function fetchData() {\n      const {\n        data\n      } = await axios.get('https://corona.lmao.ninja/countries/israel?yesterday=true');\n      console.log(nnum);\n      setLoading(true);\n      setError();\n      let searchCountry = country || (await currentCountry());\n      const parsedCountry = parseCn(searchCountry);\n      const URL = url + 'today/' + parsedCountry.toLowerCase(); // const URL = url + (country === 'world' ? '' : searchCountry)\n\n      try {\n        // const data = await fetch(URL)\n        //     .then(res => res.json())\n        //     .catch(err => setError(err))\n        const {\n          data\n        } = await axios.get(URL);\n        const relevant = {\n          active: data.active,\n          cases: data.cases,\n          todayCases: data.todayCases,\n          recovered: data.recovered,\n          deaths: data.deaths,\n          country: data.country\n        };\n        setStats(relevant);\n        setLoading(false);\n      } catch (e) {\n        setError(e);\n      }\n    }\n\n    fetchData();\n  }, [country]);\n  return {\n    todayStats,\n    loading,\n    error\n  };\n}\n\nexport default useTodayStats;","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/utils/useTodayStats.js"],"names":["useState","useEffect","axios","capitalize","str","charAt","toUpperCase","toLowerCase","slice","parseCn","getCountry","list","queryCountry","reduce","a","c","country","currentCountry","get","then","res","data","catch","e","useTodayStats","url","todayStats","setStats","loading","setLoading","error","setError","fetchData","console","log","nnum","searchCountry","parsedCountry","URL","relevant","active","cases","todayCases","recovered","deaths"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios'\n\n\n\nconst capitalize = str => str.charAt(0).toUpperCase() + str.toLowerCase().slice(1)\nconst parseCn = str => {\n  return str === 'usa' || str === 'Usa' || str === 'United States'\n    ? 'USA' \n      : str === 'Uk' || str === 'England' || str === 'United Kingdom' || str == 'great britain'\n    ? 'UK' \n    : str.toLowerCase();\n}\n\nfunction getCountry(list){\n  return function(queryCountry) {\n    return list.reduce((a,c) => c.country === queryCountry ? c : a, {})\n  }\n}\n\nasync function currentCountry(){\n  return await axios\n    .get('https://extreme-ip-lookup.com/json/')\n    .then(res => res.data.country)\n    .catch(e => 'israel')\n}\n\nfunction useTodayStats(url, country) {\n  const [todayStats, setStats] = useState();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n\n    async function fetchData() {\n\n      const { data } = await axios.get('https://corona.lmao.ninja/countries/israel?yesterday=true')\n      console.log(nnum);\n      setLoading(true)\n      setError()\n      let searchCountry = country || await currentCountry();\n\n      const parsedCountry = parseCn(searchCountry);\n      const URL = url + 'today/' + parsedCountry.toLowerCase()\n      // const URL = url + (country === 'world' ? '' : searchCountry)\n      try {\n        // const data = await fetch(URL)\n        //     .then(res => res.json())\n        //     .catch(err => setError(err))\n        const { data } = await axios.get(URL)\n        const relevant = {\n          active: data.active,\n          cases: data.cases,\n          todayCases: data.todayCases,\n          recovered: data.recovered,\n          deaths: data.deaths,\n          country: data.country\n        }\n        setStats(relevant)\n        setLoading(false)\n       } catch(e) {\n        setError(e)\n      }\n    }\n    fetchData();\n  }, [country])\n  return {\n    todayStats, loading, error\n  }\n}\n\nexport default useTodayStats;\n"]},"metadata":{},"sourceType":"module"}