{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/components/CaseChart.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Button from './Button';\nimport axios from 'axios';\nimport sortForChart from '../utils/sortForChart';\nimport Chart from './Chart';\nimport Container from './Container';\nvar baseURL = \"https://nCorona.live/api/v1/alltime/\";\n\nvar worldTimeData = function worldTimeData() {\n  var data, dataRes;\n  return _regeneratorRuntime.async(function worldTimeData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(baseURL));\n\n        case 2:\n          data = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(sortForChart(data.data));\n\n        case 5:\n          dataRes = _context.sent;\n          return _context.abrupt(\"return\", dataRes);\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar CaseChart = /*#__PURE__*/function (_React$Component) {\n  _inherits(CaseChart, _React$Component);\n\n  function CaseChart(props) {\n    var _this;\n\n    _classCallCheck(this, CaseChart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CaseChart).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"present\", function (val) {\n      return _this.setState({\n        dataToPresent: val\n      });\n    });\n\n    _this.state = {\n      dataToPresent: 'worldCases',\n      worldData: [],\n      countryData: [],\n      worldLabels: [],\n      countryLabels: [],\n      worldCases: [],\n      deathCases: [],\n      newCases: [],\n      countryCases: [],\n      showWorld: true,\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(CaseChart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        loading: true\n      });\n\n      try {\n        var timeStats = this.props.timeStats;\n        var worldCases = timeStats && timeStats.datasets.filter(function (a) {\n          return a.label === 'cases';\n        });\n        var deathCases = timeStats && timeStats.datasets.filter(function (a) {\n          return a.label === 'deaths';\n        });\n        var newCases = timeStats && timeStats.datasets.filter(function (a) {\n          return a.label === 'new cases';\n        });\n        var worldLabels = timeStats && timeStats.labels;\n        var worldDeaths = timeStats && timeStats.datasets.filter(function (a) {\n          return a.label === 'deaths';\n        });\n        this.setState({\n          worldData: timeStats,\n          worldCases: worldCases,\n          deathCases: deathCases,\n          newCases: newCases,\n          worldLabels: worldLabels,\n          loading: false\n        });\n      } catch (err) {\n        this.setState({\n          loading: false,\n          error: err\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.loading) {\n        return __jsx(Container, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, __jsx(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, \"Loading Data . . .\"));\n      }\n\n      if (this.state.error) {\n        return __jsx(Container, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, __jsx(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, this.state.error));\n      }\n\n      return __jsx(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        style: {\n          margin: '82px 0 0 0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, this.props.isHeb && 'שיעור התפשטות הנגיף בעולם, מקרי מוות ומסרים מקרים חדשים ליום' || 'Growth Rate of the virus in the world, including deaths and new cases'), this.state.worldData && __jsx(Chart, {\n        type: \"line\",\n        labels: this.state.worldLabels,\n        data: this.state[this.state.dataToPresent],\n        label: \"Global Statistics\",\n        theme: this.props.theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }) || __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \" Loading Charts ... \"), __jsx(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-around',\n          padding: '34px 32px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, __jsx(Button, {\n        onClick: function onClick() {\n          return _this2.present('worldCases');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, this.props.isHeb && 'נדבקים' || 'Cases'), __jsx(Button, {\n        onClick: function onClick() {\n          return _this2.present('deathCases');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, this.props.isHeb && 'מקרי מוות' || 'Deaths'), __jsx(Button, {\n        onClick: function onClick() {\n          return _this2.present('newCases');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, this.props.isHeb && 'מקרים חדשים' || 'New cases')));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(ctx) {\n      var timeStats;\n      return _regeneratorRuntime.async(function getInitialProps$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(worldTimeData());\n\n            case 2:\n              timeStats = _context2.sent;\n              return _context2.abrupt(\"return\", {\n                timeStats: timeStats\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return CaseChart;\n}(React.Component);\n\nexport default CaseChart;","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/components/CaseChart.js"],"names":["React","Button","axios","sortForChart","Chart","Container","baseURL","worldTimeData","get","data","dataRes","CaseChart","props","val","setState","dataToPresent","state","worldData","countryData","worldLabels","countryLabels","worldCases","deathCases","newCases","countryCases","showWorld","loading","timeStats","datasets","filter","a","label","labels","worldDeaths","err","error","margin","isHeb","theme","display","justifyContent","padding","present","ctx","Component"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,IAAMC,OAAO,yCAAb;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACDL,KAAK,CAACM,GAAN,CAAUF,OAAV,CADC;;AAAA;AACdG,UAAAA,IADc;AAAA;AAAA,2CAEEN,YAAY,CAACM,IAAI,CAACA,IAAN,CAFd;;AAAA;AAEdC,UAAAA,OAFc;AAAA,2CAGbA,OAHa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;;IAMMC,S;;;AAEJ,qBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,mFAAMA,KAAN;;AADgB,8DAsBR,UAAAC,GAAG;AAAA,aAAI,MAAKC,QAAL,CAAc;AAACC,QAAAA,aAAa,EAAEF;AAAhB,OAAd,CAAJ;AAAA,KAtBK;;AAEhB,UAAKG,KAAL,GAAa;AACXD,MAAAA,aAAa,EAAE,YADJ;AAEXE,MAAAA,SAAS,EAAE,EAFA;AAGXC,MAAAA,WAAW,EAAE,EAHF;AAIXC,MAAAA,WAAW,EAAE,EAJF;AAKXC,MAAAA,aAAa,EAAE,EALJ;AAMXC,MAAAA,UAAU,EAAE,EAND;AAOXC,MAAAA,UAAU,EAAE,EAPD;AAQXC,MAAAA,QAAQ,EAAE,EARC;AASXC,MAAAA,YAAY,EAAE,EATH;AAUXC,MAAAA,SAAS,EAAE,IAVA;AAWXC,MAAAA,OAAO,EAAE;AAXE,KAAb;AAFgB;AAejB;;;;wCASmB;AAClB,WAAKZ,QAAL,CAAc;AAAEY,QAAAA,OAAO,EAAE;AAAX,OAAd;;AAEA,UAAI;AAAA,YAEMC,SAFN,GAEoB,KAAKf,KAFzB,CAEMe,SAFN;AAIF,YAAMN,UAAU,GAAGM,SAAS,IAAIA,SAAS,CAACC,QAAV,CAAmBC,MAAnB,CAA0B,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACC,KAAF,KAAY,OAAhB;AAAA,SAA3B,CAAhC;AACA,YAAMT,UAAU,GAAGK,SAAS,IAAIA,SAAS,CAACC,QAAV,CAAmBC,MAAnB,CAA0B,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACC,KAAF,KAAY,QAAhB;AAAA,SAA3B,CAAhC;AACA,YAAMR,QAAQ,GAAGI,SAAS,IAAIA,SAAS,CAACC,QAAV,CAAmBC,MAAnB,CAA0B,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACC,KAAF,KAAY,WAAhB;AAAA,SAA3B,CAA9B;AAEA,YAAMZ,WAAW,GAAGQ,SAAS,IAAIA,SAAS,CAACK,MAA3C;AACA,YAAMC,WAAW,GAAGN,SAAS,IAAIA,SAAS,CAACC,QAAV,CAAmBC,MAAnB,CAA0B,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACC,KAAF,KAAY,QAAhB;AAAA,SAA3B,CAAjC;AAGA,aAAKjB,QAAL,CAAc;AACZG,UAAAA,SAAS,EAAEU,SADC;AAEZN,UAAAA,UAAU,EAAVA,UAFY;AAGZC,UAAAA,UAAU,EAAVA,UAHY;AAIZC,UAAAA,QAAQ,EAARA,QAJY;AAKZJ,UAAAA,WAAW,EAAXA,WALY;AAMZO,UAAAA,OAAO,EAAE;AANG,SAAd;AAQD,OApBD,CAoBE,OAAMQ,GAAN,EAAW;AACX,aAAKpB,QAAL,CAAc;AAAEY,UAAAA,OAAO,EAAE,KAAX;AAAkBS,UAAAA,KAAK,EAAED;AAAzB,SAAd;AACD;AAGF;;;6BAEQ;AAAA;;AAEP,UAAI,KAAKlB,KAAL,CAAWU,OAAf,EAAwB;AACtB,eAAO,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAX,CAAP;AACD;;AACD,UAAI,KAAKV,KAAL,CAAWmB,KAAf,EAAsB;AACpB,eAAO,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAK,KAAKnB,KAAL,CAAWmB,KAAhB,CAAX,CAAP;AACD;;AAED,aACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAE;AAAT,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKxB,KAAL,CAAWyB,KAAX,IACG,8DADH,IAEQ,uEAHX,CADF,EAOI,KAAKrB,KAAL,CAAWC,SAAX,IACE,MAAC,KAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,MAAM,EAAE,KAAKD,KAAL,CAAWG,WAFrB;AAGE,QAAA,IAAI,EAAE,KAAKH,KAAL,CAAW,KAAKA,KAAL,CAAWD,aAAtB,CAHR;AAIE,QAAA,KAAK,EAAC,mBAJR;AAKE,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAW0B,KALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,IAOQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAdZ,EAgBE;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,OAAO,EAAE,MAAV;AAAkBC,UAAAA,cAAc,EAAE,cAAlC;AAAkDC,UAAAA,OAAO,EAAE;AAA3D,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,MAAD;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACC,OAAL,CAAa,YAAb,CAAN;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoD,KAAK9B,KAAL,CAAWyB,KAAX,IAAoB,QAApB,IAAgC,OAApF,CADF,EAEE,MAAC,MAAD;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACK,OAAL,CAAa,YAAb,CAAN;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoD,KAAK9B,KAAL,CAAWyB,KAAX,IAAoB,WAApB,IAAmC,QAAvF,CAFF,EAGE,MAAC,MAAD;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACK,OAAL,CAAa,UAAb,CAAN;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkD,KAAK9B,KAAL,CAAWyB,KAAX,IAAoB,aAApB,IAAqC,WAAvF,CAHF,CAhBF,CADF;AAwBD;;;oCAtE4BM,G;;;;;;;+CACHpC,aAAa,E;;;AAA/BoB,cAAAA,S;gDACC;AAAEA,gBAAAA,SAAS,EAATA;AAAF,e;;;;;;;;;;;;EArBa3B,KAAK,CAAC4C,S;;AA6F9B,eAAejC,SAAf","sourcesContent":["import React from 'react'\nimport Button from './Button'\nimport axios from 'axios'\nimport sortForChart from '../utils/sortForChart'\nimport Chart from './Chart'\nimport Container from './Container'\n\nconst baseURL = `https://nCorona.live/api/v1/alltime/`\n\nconst worldTimeData = async () => {\n  const data = await axios.get(baseURL)\n  const dataRes = await sortForChart(data.data)\n  return dataRes\n}\n\nclass CaseChart extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      dataToPresent: 'worldCases',\n      worldData: [],\n      countryData: [],\n      worldLabels: [],\n      countryLabels: [],\n      worldCases: [],\n      deathCases: [],\n      newCases: [],\n      countryCases: [],\n      showWorld: true,\n      loading: false\n    }\n  }\n\n  static async getInitialProps(ctx) {\n    const timeStats = await worldTimeData()\n    return { timeStats }\n  }\n\n  present = val => this.setState({dataToPresent: val})\n\n  componentDidMount() {\n    this.setState({ loading: true })\n\n    try {\n\n      const { timeStats } = this.props\n\n      const worldCases = timeStats && timeStats.datasets.filter(a => a.label === 'cases')\n      const deathCases = timeStats && timeStats.datasets.filter(a => a.label === 'deaths')\n      const newCases = timeStats && timeStats.datasets.filter(a => a.label === 'new cases')\n\n      const worldLabels = timeStats && timeStats.labels\n      const worldDeaths = timeStats && timeStats.datasets.filter(a => a.label === 'deaths')\n\n\n      this.setState({\n        worldData: timeStats,\n        worldCases,\n        deathCases,\n        newCases,\n        worldLabels,\n        loading: false\n      })\n    } catch(err) {\n      this.setState({ loading: false, error: err })\n    }\n\n\n  }\n\n  render() {\n\n    if (this.state.loading) {\n      return <Container><h1>Loading Data . . .</h1></Container>\n    }\n    if (this.state.error) {\n      return <Container><h1>{this.state.error}</h1></Container>\n    }\n\n    return (\n      <Container >\n        <p style={{margin: '82px 0 0 0'}}>\n          {this.props.isHeb &&\n              'שיעור התפשטות הנגיף בעולם, מקרי מוות ומסרים מקרים חדשים ליום'\n                || 'Growth Rate of the virus in the world, including deaths and new cases'}\n        </p>\n        {\n          this.state.worldData &&\n            <Chart \n              type='line'\n              labels={this.state.worldLabels}\n              data={this.state[this.state.dataToPresent]}\n              label='Global Statistics'\n              theme={this.props.theme}\n            /> || <div> Loading Charts ... </div>\n        }\n        <div style={{display: 'flex', justifyContent: 'space-around', padding: '34px 32px'}}>\n          <Button onClick={() => this.present('worldCases')}>{this.props.isHeb && 'נדבקים' || 'Cases'}</Button>\n          <Button onClick={() => this.present('deathCases')}>{this.props.isHeb && 'מקרי מוות' || 'Deaths'}</Button>\n          <Button onClick={() => this.present('newCases')}>{this.props.isHeb && 'מקרים חדשים' || 'New cases'}</Button>\n        </div>\n      </Container>\n    )\n  }\n\n}\n\nexport default CaseChart\n"]},"metadata":{},"sourceType":"module"}