{"ast":null,"code":"var _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/components/QuickStats/QuickStats.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled from 'styled-components';\nimport { Container } from '../S';\nimport { Column, InRow, Row, Percentage, Header, Number } from './QuickStats.styled';\nimport useTranslation from '../../hooks/useTranslation.js';\n\nvar formatNumber = function formatNumber(x) {\n  return x.toString().split('').reverse().map(function (x, i) {\n    return i % 3 === 0 ? x + ',' : x;\n  }).reverse().join('').slice(0, -1);\n};\n\nvar isPercentDown = function isPercentDown(x) {\n  return x < 0;\n};\n\nvar showPercent = function showPercent(x) {\n  return x !== 0;\n};\n\nvar calcDiff = function calcDiff(current) {\n  return function (prev) {\n    return current !== 0 ? ((current - prev) / prev * 100).toFixed(2) : 0;\n  };\n}; // Percentage of increase = |100 - 150|/100 = 50/100 = 0.5 = 50%\n\n\nvar labels = {\n  cases: {\n    heb: 'מאומתים',\n    eng: 'Confirmed'\n  },\n  todayCases: {\n    heb: 'מקרים חדשים',\n    eng: 'New Cases'\n  },\n  deaths: {\n    heb: 'נפטרו',\n    eng: 'Deaths'\n  },\n  recovered: {\n    heb: 'החלימו',\n    eng: 'Recovered'\n  },\n  active: {\n    heb: 'פעילים',\n    eng: 'Active'\n  },\n  affectedCountries: {\n    heb: 'מדינות נגועות',\n    eng: 'Infected Countries'\n  }\n};\n\nvar engLbl = function engLbl(k) {\n  return labels[k]['eng'];\n};\n\nvar hebLbl = function hebLbl(k) {\n  return labels[k]['heb'];\n};\n\nvar putLabel = function putLabel(heb, k) {\n  return heb && hebLbl(k) || engLbl(k);\n};\n\nexport default (function (_ref) {\n  var S = _ref.S,\n      country = _ref.country,\n      isHeb = _ref.isHeb,\n      yday = _ref.yday,\n      _ref$comparison = _ref.comparison,\n      comparison = _ref$comparison === void 0 ? true : _ref$comparison;\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(Row, {\n    world: country.toLowerCase() === 'world',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, Object.keys(S).map(function (k, i) {\n    return __jsx(Column, {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, __jsx(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \" \", putLabel(isHeb, k)), __jsx(InRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, __jsx(Number, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, S[k] && formatNumber(S[k]), comparison && yday && country !== 'world' && country !== 'World' && __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"(\", formatNumber(yday[k]), \")\")), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), comparison && yday && __jsx(Percentage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, calcDiff(S[k])(yday[k]) < 0 && \"\\u2B07\" || \"\\u2B06\"), \"%\", Math.abs(calcDiff(S[k])(yday[k])))));\n  })));\n});","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/components/QuickStats/QuickStats.js"],"names":["styled","Container","Column","InRow","Row","Percentage","Header","Number","useTranslation","formatNumber","x","toString","split","reverse","map","i","join","slice","isPercentDown","showPercent","calcDiff","current","prev","toFixed","labels","cases","heb","eng","todayCases","deaths","recovered","active","affectedCountries","engLbl","k","hebLbl","putLabel","S","country","isHeb","yday","comparison","toLowerCase","Object","keys","Math","abs"],"mappings":"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","sourcesContent":["import styled from 'styled-components'\nimport { Container } from '../S'\nimport { Column, InRow, Row, Percentage, Header, Number } from './QuickStats.styled'\n\nimport useTranslation from '../../hooks/useTranslation.js'\n\nconst formatNumber = x => x\n  .toString()\n  .split('')\n  .reverse()\n  .map((x,i) => i % 3 === 0 ? x + ',' : x)\n  .reverse()\n  .join('')\n  .slice(0, -1)\n\nconst isPercentDown = x => x < 0\nconst showPercent = x => x !== 0\nconst calcDiff = current => prev => current !== 0 ? ((current - prev) / prev * 100).toFixed(2) : 0\n// Percentage of increase = |100 - 150|/100 = 50/100 = 0.5 = 50%\n\nconst labels = {\n  cases: { heb: 'מאומתים', eng: 'Confirmed' },\n  todayCases: { heb: 'מקרים חדשים', eng: 'New Cases'},\n  deaths: { heb: 'נפטרו', eng: 'Deaths' },\n  recovered: { heb: 'החלימו', eng: 'Recovered' },\n  active: { heb: 'פעילים', eng: 'Active' },\n  affectedCountries: { heb: 'מדינות נגועות', eng: 'Infected Countries' }\n}\n\nconst engLbl = k => labels[k]['eng']\nconst hebLbl = k => labels[k]['heb']\nconst putLabel = (heb, k) => heb && hebLbl(k) || engLbl(k)\n\nexport default ({ S, country, isHeb, yday, comparison=true}) => {\n\n  return (\n    <Container>\n      <Row world={country.toLowerCase() === 'world'}>\n\n    {\n      Object.keys(S).map((k,i) => {\n        return (\n          <Column key={i}>\n            <Header> { putLabel(isHeb,k) }</Header>\n            <InRow>\n              <Number>\n                {\n                  S[k] && formatNumber(S[k])\n                }\n                {\n                  comparison  \n                    && yday \n                    && country !== 'world' \n                    && country !== 'World' \n                    && <span>\n                        ({formatNumber(yday[k])})\n                       </span>\n                }\n              </Number>\n              <br />\n              {\n                comparison && yday && <Percentage>\n                <span>{ calcDiff(S[k])(yday[k]) < 0 && \"\\u2B07\" || '\\u2B06' }</span>\n                %{ Math.abs(calcDiff(S[k])(yday[k]))} \n                </Percentage>\n              }\n            </InRow>\n          </Column>\n        )\n      })\n    }\n\n\n      </Row>\n    </Container>\n  )\n\n}\n"]},"metadata":{},"sourceType":"module"}