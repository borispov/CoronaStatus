{"ast":null,"code":"var _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/components/Table/Table.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled, { withTheme } from 'styled-components';\nimport Cell from './Cell';\nconst Table = styled.table.withConfig({\n  displayName: \"Table\",\n  componentId: \"sc-135jno9-0\"\n})([\"border-spacing:0px;background:#fff;box-shadow:0 1px 0 0 rgba(22,29,37,0.05);\"]);\nexport default (({\n  headings,\n  theme,\n  isHeb,\n  rows\n}) => {\n  console.log(rows);\n\n  const renderHeadingRow = (_cell, cellIndex) => __jsx(Cell, {\n    key: `heading-${cellIndex}`,\n    content: headings[cellIndex],\n    header: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  });\n\n  const renderRow = (_row, rowIndex) => {\n    const {\n      rows\n    } = props;\n    return __jsx(\"tr\", {\n      key: `row-${rowIndex}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, rows[rowIndex].map((_cell, cellIndex) => {\n      return __jsx(Cell, {\n        key: `${rowIndex}-${cellIndex}`,\n        content: rows[rowIndex][cellIndex],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      });\n    }));\n  };\n\n  const theadMarkup = __jsx(\"tr\", {\n    key: \"heading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, headings.map(renderHeadingRow));\n\n  const tbodyMarkup = rows.map(renderRow);\n  return __jsx(React.Fragment, null, __jsx(Table, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, theadMarkup), __jsx(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, tbodyMarkup)));\n});","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/components/Table/Table.js"],"names":["styled","withTheme","Cell","Table","table","headings","theme","isHeb","rows","console","log","renderHeadingRow","_cell","cellIndex","renderRow","_row","rowIndex","props","map","theadMarkup","tbodyMarkup"],"mappings":";;;AAAA,OAAOA,MAAP,IAAiBC,SAAjB,QAAkC,mBAAlC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,MAAMC,KAAK,GAAGH,MAAM,CAACI,KAAV;AAAA;AAAA;AAAA,oFAAX;AAMA,gBAAe,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA,KAAnB;AAA0BC,EAAAA;AAA1B,CAAD,KAAsC;AAEnDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AAEA,QAAMG,gBAAgB,GAAG,CAACC,KAAD,EAAQC,SAAR,KACvB,MAAC,IAAD;AACE,IAAA,GAAG,EAAG,WAAUA,SAAU,EAD5B;AAEE,IAAA,OAAO,EAAGR,QAAQ,CAACQ,SAAD,CAFpB;AAGE,IAAA,MAAM,EAAE,IAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;;AAQA,QAAMC,SAAS,GAAG,CAACC,IAAD,EAAOC,QAAP,KAAoB;AAClC,UAAM;AAACR,MAAAA;AAAD,QAASS,KAAf;AAEA,WACE;AAAI,MAAA,GAAG,EAAG,OAAMD,QAAS,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGR,IAAI,CAACQ,QAAD,CAAJ,CAAeE,GAAf,CAAmB,CAACN,KAAD,EAAQC,SAAR,KAAsB;AACxC,aACE,MAAC,IAAD;AACE,QAAA,GAAG,EAAG,GAAEG,QAAS,IAAGH,SAAU,EADhC;AAEE,QAAA,OAAO,EAAEL,IAAI,CAACQ,QAAD,CAAJ,CAAeH,SAAf,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAMD,KAPA,CADH,CADF;AAYD,GAfH;;AAkBE,QAAMM,WAAW,GACf;AAAI,IAAA,GAAG,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,QAAQ,CAACa,GAAT,CAAaP,gBAAb,CADH,CADF;;AAMA,QAAMS,WAAW,GAAGZ,IAAI,CAACU,GAAL,CAASJ,SAAT,CAApB;AAEA,SACE,4BACA,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQK,WAAR,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQC,WAAR,CAFF,CADA,CADF;AAUH,CAhDD","sourcesContent":["import styled, { withTheme } from 'styled-components'\nimport Cell from './Cell';\n\nconst Table = styled.table`\n  border-spacing: 0px;\n  background: #fff;\n  box-shadow: 0 1px 0 0 rgba(22, 29, 37, 0.05);\n`\n\nexport default ({ headings, theme, isHeb, rows }) => {\n\n  console.log(rows);\n\n  const renderHeadingRow = (_cell, cellIndex) => (\n    <Cell\n      key={`heading-${cellIndex}`}\n      content={ headings[cellIndex] }\n      header={true}\n    />\n  )\n\n  const renderRow = (_row, rowIndex) => {\n      const {rows} = props;\n\n      return (\n        <tr key={`row-${rowIndex}`}>\n          {rows[rowIndex].map((_cell, cellIndex) => {\n            return (\n              <Cell\n                key={`${rowIndex}-${cellIndex}`}\n                content={rows[rowIndex][cellIndex]}\n              />\n            )\n          })}\n        </tr>\n      )\n    };\n\n\n    const theadMarkup = (\n      <tr key=\"heading\">\n        {headings.map(renderHeadingRow)}\n      </tr>\n    );\n\n    const tbodyMarkup = rows.map(renderRow);\n\n    return (\n      <>\n      <Table>\n        <thead>{theadMarkup}</thead>\n        <tbody>{tbodyMarkup}</tbody>\n      </ Table>\n      </>\n    );\n\n\n}\n"]},"metadata":{},"sourceType":"module"}