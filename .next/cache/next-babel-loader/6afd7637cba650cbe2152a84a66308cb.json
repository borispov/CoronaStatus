{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport axios from 'axios';\nimport Head from 'next/head';\nimport { useEffect, useContext } from 'react';\nimport CoronaApp from '../components/CoronaApp';\nimport InfoSection from '../components/InfoSection';\nimport Footer from '../components/Footer';\nimport { FadeIn } from '../components/S';\nimport useWorldData from '../hooks/useWorldData';\nimport { ProxyContext } from '../context/proxy-context';\nimport { LocaleContext } from '../context/LocaleContext';\nimport { getInitialLocale } from '../locales/getInitialLocale';\n\nconst getCountryFromData = response => response.data.country;\n\nconst currentCountry = async url => await axios.get(url).then(getCountryFromData).catch(e => 'israel');\n\nfunction IndexPage({\n  worldTime,\n  yesterdayGlobal,\n  newProxy\n}) {\n  const {\n    0: proxy,\n    1: setProxy\n  } = useContext(ProxyContext);\n  useEffect(() => {\n    let ignore = false;\n\n    if (newProxy && !ignore) {\n      setProxy(newProxy);\n    }\n\n    return () => {\n      ignore: true;\n    };\n  }, [newProxy]);\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"nCorona - Novel Coronavirus Statistics & Resources for Coping\")), __jsx(FadeIn, {\n    delay: \"0.5s\"\n  }, __jsx(CoronaApp, {\n    userLocation: newProxy && newProxy.countryName || proxy && proxy.countryName,\n    worldTime: worldTime,\n    yesterdayGlobal: yesterdayGlobal\n  }), __jsx(InfoSection, null)));\n}\n\nIndexPage.getInitialProps = async ({\n  req\n}) => {\n  const worldTime = await useWorldData();\n  const globalData = await axios.get('https://corona.lmao.ninja/v2/all?yesterday=true');\n  const yesterdayGlobal = {\n    active: globalData.data.active,\n    critical: globalData.data.critical,\n    cases: globalData.data.cases,\n    todayCases: globalData.data.todayCases,\n    recovered: globalData.data.recovered,\n    deaths: globalData.data.deaths,\n    country: globalData.data.country,\n    affectedCountries: globalData.data.affectedCountries\n  };\n\n  if (req) {\n    // const ipAddress = req.headers['x-forwarded-for'] || req.connection.remoteAddress\n    const localAddresses = ['::1', '127.0.0.1', 'localhost'];\n    const ipAddress = '185.163.111.170'; // Construct URL with IP ADDRESS\n\n    const proxyUrl = !localAddresses.includes(ipAddress) && `https://extreme-ip-lookup.com/json/${ipAddress}` || null;\n\n    try {\n      const countryName = await currentCountry(proxyUrl);\n      const newProxy = {\n        countryName,\n        ipAddress\n      };\n      return {\n        newProxy,\n        worldTime,\n        yesterdayGlobal\n      };\n    } catch (e) {\n      return {\n        errorCode: e.code,\n        errorMessage: e.message,\n        yesterdayGlobal,\n        worldTime\n      };\n    }\n  }\n\n  return {\n    yesterdayGlobal,\n    worldTime,\n    newProxy: null\n  };\n};\n\nexport default IndexPage;","map":null,"metadata":{},"sourceType":"module"}