{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/components/InfoSection.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Container from './Container';\nimport styled from 'styled-components'; // URL for getting the CSV data.\n\nvar baseURL = '';\nvar Wrapper = styled.div.withConfig({\n  displayName: \"InfoSection__Wrapper\",\n  componentId: \"sc-1anhjcp-0\"\n})([\"text-align:none;display:flex;flex-wrap:wrap;justify-content:center;margin-left:15px;margin-right:15px;margin-bottom:32px;\"]);\nvar Section = styled.div.withConfig({\n  displayName: \"InfoSection__Section\",\n  componentId: \"sc-1anhjcp-1\"\n})([\"border-radius:4px;background:\", \";color:\", \";flex:0 0 50%;max-width:33%;position:relative;width:100%;border:1px solid;border-color:\", \";margin:2px;\"], function (props) {\n  return props.theme.bgColor;\n}, function (props) {\n  return props.theme.color;\n}, function (props) {\n  return props.theme.statColor;\n});\nvar SectionTitle = styled.h2.withConfig({\n  displayName: \"InfoSection__SectionTitle\",\n  componentId: \"sc-1anhjcp-2\"\n})([\"color:\", \";background:\", \";font-size:20px;padding:4px 8px;border-bottom:1px solid black;\"], function (props) {\n  return props.theme.btnColor;\n}, function (props) {\n  return props.theme.boxBg;\n});\nvar Link = styled.a.withConfig({\n  displayName: \"InfoSection__Link\",\n  componentId: \"sc-1anhjcp-3\"\n})([\"text-decoration:none;color:\", \";font-weight:700;font-size:18px;line-height:1.5;padding:0 4px;\"], function (props) {\n  return props.theme.statColor;\n});\nvar Desc = styled.p.withConfig({\n  displayName: \"InfoSection__Desc\",\n  componentId: \"sc-1anhjcp-4\"\n})([\"font-size:16px;line-height:1.22;color:\", \";padding:0 4px;\"], function (props) {\n  return props.theme.color;\n});\nvar categories = ['health', 'education', 'activity'];\n\nvar mapDataToSection = function mapDataToSection(item, idx) {\n  return __jsx(\"div\", {\n    key: idx,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: item.link,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, item.title), __jsx(Desc, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, item.desc));\n};\n\nvar renderSection = function renderSection(secData) {\n  return secData.map(function (it, ix) {\n    return __jsx(Section, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, __jsx(SectionTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, it.category), it.data.map(mapDataToSection));\n  });\n};\n\nexport default (function () {\n  var _useState = useState(),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useState2 = useState(),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  useEffect(function () {\n    function fetchData() {\n      var initObj, _ref, _data, catArray, d;\n\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setError();\n              _context.prev = 1;\n              initObj = {\n                category: '',\n                data: []\n              };\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(axios.get('http://covid19.borisky.me:3003/api/data/resources'));\n\n            case 5:\n              _ref = _context.sent;\n              _data = _ref.data;\n              catArray = [_data.health, _data.education];\n              console.log(catArray);\n              d = [_data.health, _data.education].map(function (categ) {\n                return categ.reduce(function (a, _ref2) {\n                  var category = _ref2.category,\n                      link = _ref2.link,\n                      description = _ref2.description,\n                      title = _ref2.title;\n                  return Object.assign(a, {\n                    category: category\n                  }, {\n                    data: [].concat(_toConsumableArray(a[_data]), [{\n                      title: title,\n                      description: description,\n                      link: link\n                    }])\n                  });\n                });\n              }, initObj);\n              setData(d);\n              _context.next = 16;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](1);\n              setError(_context.t0);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 13]], Promise);\n    }\n\n    fetchData();\n  }, []);\n\n  if (error) {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \" Received Error Fetching Information ... Let Me Know About This: boristofu@gmail.com\");\n  }\n\n  console.log(data && data);\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    style: {\n      fontSize: '24px',\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Useful Information For All\"), __jsx(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }));\n});","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/components/InfoSection.js"],"names":["useState","useEffect","axios","Container","styled","baseURL","Wrapper","div","Section","props","theme","bgColor","color","statColor","SectionTitle","h2","btnColor","boxBg","Link","a","Desc","p","categories","mapDataToSection","item","idx","link","title","desc","renderSection","secData","map","it","ix","category","data","setData","error","setError","fetchData","initObj","get","catArray","health","education","console","log","d","categ","reduce","description","Object","assign","fontSize","textAlign"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Container from './Container'\nimport styled from 'styled-components'\n\n// URL for getting the CSV data.\nconst baseURL = ''\n\nconst Wrapper = styled.div`\n  text-align: none;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-left: 15px;\n  margin-right: 15px;\n  margin-bottom: 32px;\n`\n\nconst Section = styled.div`\n  border-radius: 4px;\n  background: ${props => props.theme.bgColor};\n  color: ${props => props.theme.color};\n  flex: 0 0 50%;\n  max-width: 33%;\n  position: relative;\n  width: 100%;\n  border: 1px solid;\n  border-color: ${props => props.theme.statColor};\n  margin: 2px;\n`\n\nconst SectionTitle = styled.h2`\n  color: ${props => props.theme.btnColor};\n  background: ${props => props.theme.boxBg};\n  font-size: 20px;\n  padding: 4px 8px;\n  border-bottom: 1px solid black;\n`\n\nconst Link = styled.a`\n  text-decoration: none;\n  color: ${props => props.theme.statColor};\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 1.5;\n  padding: 0 4px;\n`\n\nconst Desc = styled.p`\n  font-size: 16px;\n  line-height: 1.22;\n  color: ${props => props.theme.color};\n  padding: 0 4px;\n`\n\nconst categories = ['health', 'education', 'activity']\n\nconst mapDataToSection = (item, idx) => {\n  return (\n    <div key={idx}>\n      <Link href={item.link}>\n        {item.title}\n      </Link>\n      <Desc>{item.desc}</Desc>\n    </div>\n  )\n}\n\nconst renderSection = secData => {\n  return secData.map((it, ix) => (\n    <Section>\n      <SectionTitle>\n        {it.category}\n      </SectionTitle>\n      {it.data.map(mapDataToSection)}\n    </Section>\n  ))\n}\n\nexport default () => {\n\n  const [data, setData] = useState()\n  const [error, setError] = useState()\n\n  useEffect(() => {\n    async function fetchData() {\n      setError()\n      try {\n        const initObj = { category: '', data: [] }\n        const { data } = await axios.get('http://covid19.borisky.me:3003/api/data/resources')\n        const catArray = [data.health, data.education]\n        console.log(catArray);\n        const d = [data.health, data.education]\n          .map(categ => categ.reduce((a,{ category, link, description, title }) => {\n            return Object.assign(a, {category}, {data: [...a[data], { title, description, link }]})\n            }), initObj)\n        setData(d)\n      } catch(e) {\n        setError(e)\n      }\n    }\n    fetchData()\n  }, [])\n\n\n  if (error) {\n    return <div> Received Error Fetching Information ... Let Me Know About This: boristofu@gmail.com</div>\n  }\n\n  console.log(data && data);\n\n  return (\n    <>\n      <h1 style={{fontSize: '24px', textAlign: 'center'}}>Useful Information For All</h1>\n\n      <Wrapper>\n\n\n{/*\n        {data && renderSection(data)}\n        <Section>\n        <SectionTitle>\n          בריאות\n        </SectionTitle>\n          {\n            healthData.map(mapDataToSection)\n          }\n        </Section>\n        <Section>\n          <SectionTitle>\n            לימודים\n          </SectionTitle>\n          {\n            eduData.map(mapDataToSection)\n          }\n        </Section>\n*/}\n\n      </Wrapper>\n\n    </>\n  )\n\n}\n"]},"metadata":{},"sourceType":"module"}