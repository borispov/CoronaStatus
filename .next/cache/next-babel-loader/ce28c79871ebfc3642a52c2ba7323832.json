{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport sortForChart from './sortForChart';\nvar baseURL = \"http://46.101.156.51:3003/api/v1/alltime/\";\n\nfunction currentCountry() {\n  return _regeneratorRuntime.async(function currentCountry$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios.get('https://extreme-ip-lookup.com/json/').then(function (res) {\n            return res.data.country;\n          })[\"catch\"](function (e) {\n            return 'israel';\n          }));\n\n        case 2:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction useTime(country) {\n  var url,\n      _useState,\n      countryStats,\n      setCountryStats,\n      _args2 = arguments;\n\n  return _regeneratorRuntime.async(function useTime$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          url = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : baseURL;\n          // const [timeStats, setData] = useState();\n          _useState = useState(), countryStats = _useState[0], setCountryStats = _useState[1]; // const [timeLoading, setLoading] = useState(false);\n          // const [timeError, setError] = useState(false);\n          // const [geo, setGeo] = useState('')\n          // useEffect(() => {\n          //   console.log('inside Geo Location Effect');\n          //   let geoLocation = currentCountry()\n          //   setGeo(geoLocation)\n          // }, [])\n          // async function fetchData(cn) {\n          //   setLoading(true)\n          //   setError()\n          //\n          //   const URL = cn === 'world' ? baseURL : baseURL + country || geo\n          //   const data = await axios.get(URL)\n          //     .then(res => res.data)\n          //     .catch(err => setError(err))\n          //   const timeStats = sortForChart(data);\n          //   setData(timeStats)\n          //   setLoading(false)\n          // }\n          // useEffect(() => {\n          //   console.log('inside World effect');\n          //   fetchData('world')\n          // }, [])\n          // useEffect(() => {\n          //   console.log('inside Country Effect');\n          //   fetchData(country);\n          // }, [country])\n\n          console.log(countryStats);\n          return _context2.abrupt(\"return\", {\n            countryStats: countryStats,\n            timeStats: timeStats,\n            timeLoading: timeLoading,\n            timeError: timeError\n          });\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexport default useTime;","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/utils/useTime.js"],"names":["useState","useEffect","axios","sortForChart","baseURL","currentCountry","get","then","res","data","country","e","useTime","url","countryStats","setCountryStats","console","log","timeStats","timeLoading","timeError"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,IAAMC,OAAO,8CAAb;;AAEA,SAAeC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACeH,KAAK,CACfI,GADU,CACN,qCADM,EAEVC,IAFU,CAEL,UAAAC,GAAG;AAAA,mBAAIA,GAAG,CAACC,IAAJ,CAASC,OAAb;AAAA,WAFE,WAGJ,UAAAC,CAAC;AAAA,mBAAI,QAAJ;AAAA,WAHG,CADf;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOA,SAAeC,OAAf,CAAuBF,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAgCG,UAAAA,GAAhC,8DAAsCT,OAAtC;AACE;AADF,sBAE0CJ,QAAQ,EAFlD,EAESc,YAFT,iBAEuBC,eAFvB,iBAGE;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEAC,UAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;AApCF,4CAsCS;AACLA,YAAAA,YAAY,EAAZA,YADK;AACSI,YAAAA,SAAS,EAATA,SADT;AACoBC,YAAAA,WAAW,EAAXA,WADpB;AACiCC,YAAAA,SAAS,EAATA;AADjC,WAtCT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA2CA,eAAeR,OAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport sortForChart from './sortForChart'\n\nconst baseURL = `http://46.101.156.51:3003/api/v1/alltime/`\n\nasync function currentCountry(){\n  return await axios\n    .get('https://extreme-ip-lookup.com/json/')\n    .then(res => res.data.country)\n    .catch(e => 'israel')\n}\n\nasync function useTime(country, url = baseURL) {\n  // const [timeStats, setData] = useState();\n  const [countryStats, setCountryStats] = useState();\n  // const [timeLoading, setLoading] = useState(false);\n  // const [timeError, setError] = useState(false);\n  // const [geo, setGeo] = useState('')\n\n  // useEffect(() => {\n  //   console.log('inside Geo Location Effect');\n  //   let geoLocation = currentCountry()\n  //   setGeo(geoLocation)\n  // }, [])\n\n  // async function fetchData(cn) {\n  //   setLoading(true)\n  //   setError()\n  //\n  //   const URL = cn === 'world' ? baseURL : baseURL + country || geo\n  //   const data = await axios.get(URL)\n  //     .then(res => res.data)\n  //     .catch(err => setError(err))\n  //   const timeStats = sortForChart(data);\n  //   setData(timeStats)\n  //   setLoading(false)\n  // }\n\n  // useEffect(() => {\n  //   console.log('inside World effect');\n  //   fetchData('world')\n  // }, [])\n\n  // useEffect(() => {\n  //   console.log('inside Country Effect');\n  //   fetchData(country);\n  // }, [country])\n\n  console.log(countryStats);\n\n  return {\n    countryStats, timeStats, timeLoading, timeError\n  }\n}\n\nexport default useTime;\n"]},"metadata":{},"sourceType":"module"}