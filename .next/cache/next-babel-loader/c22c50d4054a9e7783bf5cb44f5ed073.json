{"ast":null,"code":"import { useState, useEffect, useReducer } from 'react';\nimport axios from 'axios';\nimport sortForChart from './sortForChart';\nimport sortExternalApi from './sortExternalApi';\nconst baseURL = `https://nCorona.live/api/v1/alltime/`;\nconst baseURLv2 = 'https://pomber.github.io/covid19/timeseries.json';\n\nasync function currentCountry() {\n  return await axios.get('https://extreme-ip-lookup.com/json/').then(res => res.data.country).catch(e => 'israel');\n} // function useTime(loc, url = baseURL) {\n\n\nfunction useTime(loc, getCountryList) {\n  const {\n    0: countryStats,\n    1: setCountryStats\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState(false);\n  const {\n    0: countries,\n    1: setCountries\n  } = useState();\n  useEffect(() => {\n    async function fetchData(cn) {\n      setLoading(true);\n      setError();\n      const country = loc || (await currentCountry());\n      const URL = baseURL + country;\n      const data = await axios.get(URL).then(res => res.data).catch(err => setError(err)); // const data = await axios.get(baseURLv2)\n      //   .then(res => res.data[country])\n      //   .catch(err => setError(err))\n      // const timeStats = sortExternalApi(data);\n\n      const timeStats = sortForChart(data);\n      setCountryStats(timeStats);\n      setLoading(false);\n    }\n\n    fetchData(loc);\n  }, [loc]);\n  return {\n    countryStats,\n    loading,\n    error,\n    countries\n  };\n}\n\nexport default useTime;","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/utils/useTime.js"],"names":["useState","useEffect","useReducer","axios","sortForChart","sortExternalApi","baseURL","baseURLv2","currentCountry","get","then","res","data","country","catch","e","useTime","loc","getCountryList","countryStats","setCountryStats","loading","setLoading","error","setError","countries","setCountries","fetchData","cn","URL","err","timeStats"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAGA,MAAMC,OAAO,GAAI,sCAAjB;AACA,MAAMC,SAAS,GAAG,kDAAlB;;AAEA,eAAeC,cAAf,GAA+B;AAC7B,SAAO,MAAML,KAAK,CACfM,GADU,CACN,qCADM,EAEVC,IAFU,CAELC,GAAG,IAAIA,GAAG,CAACC,IAAJ,CAASC,OAFX,EAGVC,KAHU,CAGJC,CAAC,IAAI,QAHD,CAAb;AAID,C,CAED;;;AACA,SAASC,OAAT,CAAiBC,GAAjB,EAAsBC,cAAtB,EAAsC;AAGpC,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCpB,QAAQ,EAAhD;AACA,QAAM;AAAA,OAACqB,OAAD;AAAA,OAAUC;AAAV,MAAwBtB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACuB,KAAD;AAAA,OAAQC;AAAR,MAAoBxB,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM;AAAA,OAACyB,SAAD;AAAA,OAAYC;AAAZ,MAA4B1B,QAAQ,EAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAe0B,SAAf,CAAyBC,EAAzB,EAA6B;AAE3BN,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,MAAAA,QAAQ;AACR,YAAMX,OAAO,GAAGI,GAAG,KAAI,MAAMT,cAAc,EAAxB,CAAnB;AACA,YAAMqB,GAAG,GAAGvB,OAAO,GAAGO,OAAtB;AACA,YAAMD,IAAI,GAAG,MAAMT,KAAK,CAACM,GAAN,CAAUoB,GAAV,EAChBnB,IADgB,CACXC,GAAG,IAAIA,GAAG,CAACC,IADA,EAEhBE,KAFgB,CAEVgB,GAAG,IAAIN,QAAQ,CAACM,GAAD,CAFL,CAAnB,CAN2B,CAU3B;AACA;AACA;AAEA;;AACA,YAAMC,SAAS,GAAG3B,YAAY,CAACQ,IAAD,CAA9B;AACAQ,MAAAA,eAAe,CAACW,SAAD,CAAf;AACAT,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AACDK,IAAAA,SAAS,CAACV,GAAD,CAAT;AAED,GAtBQ,EAsBN,CAACA,GAAD,CAtBM,CAAT;AAwBA,SAAO;AACLE,IAAAA,YADK;AACSE,IAAAA,OADT;AACkBE,IAAAA,KADlB;AACyBE,IAAAA;AADzB,GAAP;AAGD;;AAED,eAAeT,OAAf","sourcesContent":["import { useState, useEffect, useReducer } from 'react'\nimport axios from 'axios'\nimport sortForChart from './sortForChart'\nimport sortExternalApi from './sortExternalApi'\n\n\nconst baseURL = `https://nCorona.live/api/v1/alltime/`\nconst baseURLv2 = 'https://pomber.github.io/covid19/timeseries.json'\n\nasync function currentCountry(){\n  return await axios\n    .get('https://extreme-ip-lookup.com/json/')\n    .then(res => res.data.country)\n    .catch(e => 'israel')\n}\n\n// function useTime(loc, url = baseURL) {\nfunction useTime(loc, getCountryList) {\n\n\n  const [countryStats, setCountryStats] = useState();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [countries, setCountries] = useState()\n\n  useEffect(() => {\n    async function fetchData(cn) {\n\n      setLoading(true)\n      setError()\n      const country = loc || await currentCountry()\n      const URL = baseURL + country\n      const data = await axios.get(URL)\n        .then(res => res.data)\n        .catch(err => setError(err))\n\n      // const data = await axios.get(baseURLv2)\n      //   .then(res => res.data[country])\n      //   .catch(err => setError(err))\n\n      // const timeStats = sortExternalApi(data);\n      const timeStats = sortForChart(data);\n      setCountryStats(timeStats)\n      setLoading(false)\n    }\n    fetchData(loc)\n\n  }, [loc])\n\n  return {\n    countryStats, loading, error, countries\n  }\n}\n\nexport default useTime;\n"]},"metadata":{},"sourceType":"module"}