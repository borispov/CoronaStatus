{"ast":null,"code":"var _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/components/QuickStats/QuickStats.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// Styles\nimport { Container } from '../S';\nimport { Column, InRow, Row, Percentage, Header, Number } from './QuickStats.styled'; // utils\n\nimport { F } from './QuickStats.utils';\nimport useTranslation from '../../hooks/useTranslation.js';\nexport default (({\n  S,\n  country,\n  isHeb,\n  yday,\n  comparison = true\n}) => {\n  const {\n    t,\n    locale\n  } = useTranslation();\n  const direction = locale === 'he' && 'rtl' || 'ltr';\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(Row, {\n    world: country.toLowerCase() === 'world',\n    direction: direction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, Object.keys(S).map((k, i) => {\n    return __jsx(Column, {\n      key: i,\n      direction: direction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, __jsx(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \" \", t(k, 'labels')), __jsx(InRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, __jsx(Number, {\n      label: k,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, S[k] && F.formatNumber(S[k]), comparison && yday && country !== 'world' && country !== 'World' && __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"(\", F.formatNumber(yday[k]), \")\")), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), comparison && yday && __jsx(Percentage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, F.calcDiff(S[k])(yday[k]) < 0 && \"\\u2B07\" || '\\u2B06'), \"%\", Math.abs(F.calcDiff(S[k])(yday[k])))));\n  })));\n});","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/components/QuickStats/QuickStats.js"],"names":["Container","Column","InRow","Row","Percentage","Header","Number","F","useTranslation","S","country","isHeb","yday","comparison","t","locale","direction","toLowerCase","Object","keys","map","k","i","formatNumber","calcDiff","Math","abs"],"mappings":";;;AAAA;AACA,SAASA,SAAT,QAA0B,MAA1B;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,GAAxB,EAA6BC,UAA7B,EAAyCC,MAAzC,EAAiDC,MAAjD,QAA+D,qBAA/D,C,CAGA;;AACA,SAASC,CAAT,QAAkB,oBAAlB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AAGA,gBAAe,CAAC;AAAEC,EAAAA,CAAF;AAAKC,EAAAA,OAAL;AAAcC,EAAAA,KAAd;AAAqBC,EAAAA,IAArB;AAA2BC,EAAAA,UAAU,GAAC;AAAtC,CAAD,KAAiD;AAE9D,QAAM;AAAEC,IAAAA,CAAF;AAAKC,IAAAA;AAAL,MAAgBP,cAAc,EAApC;AAGA,QAAMQ,SAAS,GAAGD,MAAM,KAAK,IAAX,IAAmB,KAAnB,IAA4B,KAA9C;AAEA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,KAAK,EAAEL,OAAO,CAACO,WAAR,OAA0B,OAAtC;AAA+C,IAAA,SAAS,EAAED,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGAE,MAAM,CAACC,IAAP,CAAYV,CAAZ,EAAeW,GAAf,CAAmB,CAACC,CAAD,EAAGC,CAAH,KAAS;AAC1B,WACE,MAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA,CAAb;AAAgB,MAAA,SAAS,EAAEN,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAWF,CAAC,CAACO,CAAD,EAAI,QAAJ,CAAZ,CADF,EAEE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAEA,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIZ,CAAC,CAACY,CAAD,CAAD,IAAQd,CAAC,CAACgB,YAAF,CAAed,CAAC,CAACY,CAAD,CAAhB,CAFZ,EAKIR,UAAU,IACLD,IADL,IAEKF,OAAO,KAAK,OAFjB,IAGKA,OAAO,KAAK,OAHjB,IAIK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACGH,CAAC,CAACgB,YAAF,CAAeX,IAAI,CAACS,CAAD,CAAnB,CADH,MATT,CADF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,EAiBIR,UAAU,IAAID,IAAd,IAAsB,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQL,CAAC,CAACiB,QAAF,CAAWf,CAAC,CAACY,CAAD,CAAZ,EAAiBT,IAAI,CAACS,CAAD,CAArB,IAA4B,CAA5B,IAAiC,QAAjC,IAA6C,QAArD,CADsB,OAEnBI,IAAI,CAACC,GAAL,CAASnB,CAAC,CAACiB,QAAF,CAAWf,CAAC,CAACY,CAAD,CAAZ,EAAiBT,IAAI,CAACS,CAAD,CAArB,CAAT,CAFmB,CAjB1B,CAFF,CADF;AA4BD,GA7BD,CAHA,CADF,CADF;AA0CD,CAjDD","sourcesContent":["// Styles\nimport { Container } from '../S'\nimport { Column, InRow, Row, Percentage, Header, Number } from './QuickStats.styled'\n\n\n// utils\nimport { F } from './QuickStats.utils'\nimport useTranslation from '../../hooks/useTranslation.js'\n\n\nexport default ({ S, country, isHeb, yday, comparison=true}) => {\n\n  const { t, locale } = useTranslation()\n\n\n  const direction = locale === 'he' && 'rtl' || 'ltr'\n\n  return (\n    <Container >\n      <Row world={country.toLowerCase() === 'world'} direction={direction}>\n\n    {\n      Object.keys(S).map((k,i) => {\n        return (\n          <Column key={i} direction={direction} >\n            <Header> { t(k, 'labels') }</Header>\n            <InRow>\n              <Number label={k}>\n                {\n                  S[k] && F.formatNumber(S[k])\n                }\n                {\n                  comparison\n                    && yday\n                    && country !== 'world'\n                    && country !== 'World'\n                    && <span>\n                        ({F.formatNumber(yday[k])})\n                       </span>\n                }\n              </Number>\n              <br />\n              {\n                comparison && yday && <Percentage>\n                <span>{ F.calcDiff(S[k])(yday[k]) < 0 && \"\\u2B07\" || '\\u2B06' }</span>\n                %{ Math.abs(F.calcDiff(S[k])(yday[k]))} \n                </Percentage>\n              }\n            </InRow>\n          </Column>\n        )\n      })\n    }\n\n\n      </Row>\n    </Container>\n  )\n\n}\n"]},"metadata":{},"sourceType":"module"}