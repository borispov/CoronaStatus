{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport { withTheme } from 'styled-components';\nimport Select from 'react-select';\nimport useTime from '../hooks/useTime';\nimport useTodayStats from '../hooks/useTodayStats';\nimport useCountries from '../hooks/useCountries';\nimport useYday from '../hooks/useYday';\nimport useTranslation from '../hooks/useTranslation';\nimport { Container } from './S';\nimport Stats from './Stats';\nimport Chart from './Chart';\nimport HeaderDescription from './HeaderDescription';\nimport countriesHebArray from '../assets/cns.js';\n\nconst calcDiff = current => prev => current !== 0 ? (current - prev) / 100 * 100 : 0;\n\nconst CoronaApp = ({\n  theme,\n  userLocation,\n  yesterdayC,\n  yesterdayGlobal,\n  worldTime\n}) => {\n  const {\n    t,\n    locale\n  } = useTranslation();\n  const isHeb = locale === 'he';\n  const {\n    0: country,\n    1: setCountry\n  } = useState(userLocation);\n  const {\n    0: inputValue,\n    1: setInput\n  } = useState('');\n  const url = 'https://nCorona.live/api/v1/';\n  const v2 = 'https://corona.lmao.ninja/v2/countries/';\n  const {\n    countryStats\n  } = useTime(country, theme);\n  const {\n    todayStats\n  } = useTodayStats(url, country);\n  const worldToday = useTodayStats(url, 'world').todayStats;\n  const {\n    yesterdayCn\n  } = useYday(v2, country);\n  const {\n    countries\n  } = useCountries();\n  const worldTodaySorted = worldToday && {\n    cases: worldToday.cases,\n    active: worldToday.active,\n    recovered: worldToday.recovered,\n    deaths: worldToday.deaths,\n    todayCases: worldToday.todayCases,\n    affectedCountries: yesterdayGlobal.affectedCountries\n  } || '';\n  const yesterdayStatsSorted = yesterdayCn && {\n    cases: yesterdayCn.cases,\n    todayCases: yesterdayCn.todayCases,\n    recovered: yesterdayCn.recovered,\n    deaths: yesterdayCn.deaths\n  } || '';\n  const yesterdayGlobalSorted = yesterdayGlobal && {\n    cases: yesterdayGlobal.cases,\n    active: yesterdayGlobal.active,\n    deaths: yesterdayGlobal.deaths,\n    todayCases: yesterdayGlobal.todayCases,\n    recovered: yesterdayGlobal.recovered,\n    affectedCountries: yesterdayGlobal.affectedCountries\n  } || '';\n  const todayStatsSorted = todayStats && {\n    cases: todayStats.cases,\n    todayCases: todayStats.todayCases,\n    recovered: todayStats.recovered,\n    deaths: todayStats.deaths\n  } || '';\n\n  const handleChange = selected => {\n    // setHebCountry(countryheb(selected.value))\n    setCountry(selected.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setCountry(inputValue);\n  };\n\n  const countryheb = country => {\n    if (countries) {\n      let lowerCased = countries.map(a => a.toLowerCase());\n      let engIndex = lowerCased.indexOf(country);\n      return countriesHebArray[engIndex];\n    }\n\n    return country;\n  }; // const selectOptions = countries && countries.map(a => ({ value: a, label: a }))\n\n\n  const selectOptions = !countries ? {\n    value: 'null',\n    label: 'Loading List...'\n  } : !isHeb ? countries.map(a => ({\n    value: a,\n    label: a\n  })) : countries.map((country, idx) => ({\n    value: country,\n    label: countriesHebArray[idx]\n  }));\n  return __jsx(\"div\", null, __jsx(Container, null, __jsx(\"form\", {\n    style: {\n      maxWidth: '520px',\n      margin: '54px auto 12px',\n      textAlign: 'center',\n      direction: isHeb && 'rtl'\n    },\n    onSubmit: handleSubmit\n  }, __jsx(\"label\", {\n    style: {\n      fontSize: '18px',\n      padding: '2em',\n      fontWeight: 'bold'\n    }\n  }, t('selectHeader', 'coronaApp')), __jsx(Select, {\n    className: 'Select',\n    options: selectOptions,\n    value: country === 'Israel' && isHeb ? 'ישראל' : country,\n    onChange: handleChange,\n    placeholder: country && isHeb ? countryheb(country) : country\n  })), __jsx(Stats, {\n    cn: country || todayStats && todayStats.country,\n    todayStats: todayStatsSorted,\n    yesteryday: yesterdayStatsSorted,\n    isHeb: isHeb\n  }), countryStats && __jsx(Chart, {\n    isHeb: isHeb,\n    type: \"line\",\n    labels: countryStats.labels // data={countryStats.datasets.filter(a => a.label === 'cases')}\n    ,\n    data: countryStats.datasets,\n    label: country || 'israel',\n    fill: false,\n    stops: 3,\n    showLegend: false\n  }), __jsx(Stats, {\n    cn: 'World',\n    todayWorld: worldTodaySorted,\n    yesteryday: yesterdayGlobalSorted,\n    isHeb: isHeb\n  }), __jsx(HeaderDescription, {\n    explanation: true,\n    secondary: true,\n    direction: locale === 'he' ? 'rtl' : 'ltr',\n    txt: '* ' + t('graphExplanation', 'coronaApp')\n  }), __jsx(Chart, {\n    isHeb: isHeb,\n    type: \"line\",\n    labels: worldTime.labels,\n    data: worldTime.datasets,\n    label: isHeb && 'עולם' || 'World',\n    fill: false,\n    stops: 3,\n    showLegend: true\n  })));\n};\n\nexport default withTheme(CoronaApp);","map":null,"metadata":{},"sourceType":"module"}