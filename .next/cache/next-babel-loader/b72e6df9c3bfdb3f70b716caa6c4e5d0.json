{"ast":null,"code":"import { useEffect } from 'react';\n\nvar getMobileDetect = function getMobileDetect(userAgent) {\n  var isAndroid = function isAndroid() {\n    return Boolean(userAgent.match(/Android/i));\n  };\n\n  var isIos = function isIos() {\n    return Boolean(userAgent.match(/iPhone|iPad|iPd/i));\n  };\n\n  var isOpera = function isOpera() {\n    return Boolean(userAgent.match(/Opera Mini/));\n  };\n\n  var isWindows = function isWindows() {\n    return Boolean(userAgent.match(/IEMobilei/));\n  };\n\n  var isSSR = function isSSR() {\n    return Boolean(userAgent.match(/SSR/i));\n  };\n\n  var isMobile = function isMobile() {\n    return Boolean(isAndroid() || isIos() || isOpera() || isWindows());\n  };\n\n  var isDesktop = function isDesktop() {\n    return Boolean(!isMobile() && !isSSR());\n  };\n\n  return {\n    isMobile: isMobile,\n    isDesktop: isDesktop,\n    isAndroid: isAndroid,\n    isIos: isIos,\n    isSSR: isSSR\n  };\n};\n\nexport var useMobileDetect = function useMobileDetect() {\n  useEffect(function () {}, []);\n  var userAgent = typeof navigator === 'undefined' ? 'SSR' : navigator.userAgent;\n  return getMobileDetect(userAgent);\n};","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/utils/isMobile.js"],"names":["useEffect","getMobileDetect","userAgent","isAndroid","Boolean","match","isIos","isOpera","isWindows","isSSR","isMobile","isDesktop","useMobileDetect","navigator"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,SAAS,EAAI;AACnC,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,WAAMC,OAAO,CAACF,SAAS,CAACG,KAAV,CAAgB,UAAhB,CAAD,CAAb;AAAA,GAAlB;;AACA,MAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,WAAMF,OAAO,CAACF,SAAS,CAACG,KAAV,CAAgB,kBAAhB,CAAD,CAAb;AAAA,GAAd;;AACA,MAAME,OAAO,GAAG,SAAVA,OAAU;AAAA,WAAMH,OAAO,CAACF,SAAS,CAACG,KAAV,CAAgB,YAAhB,CAAD,CAAb;AAAA,GAAhB;;AACA,MAAMG,SAAS,GAAG,SAAZA,SAAY;AAAA,WAAMJ,OAAO,CAACF,SAAS,CAACG,KAAV,CAAgB,WAAhB,CAAD,CAAb;AAAA,GAAlB;;AACA,MAAMI,KAAK,GAAG,SAARA,KAAQ;AAAA,WAAML,OAAO,CAACF,SAAS,CAACG,KAAV,CAAgB,MAAhB,CAAD,CAAb;AAAA,GAAd;;AAEA,MAAMK,QAAQ,GAAG,SAAXA,QAAW;AAAA,WAAMN,OAAO,CAACD,SAAS,MAAMG,KAAK,EAApB,IAA0BC,OAAO,EAAjC,IAAuCC,SAAS,EAAjD,CAAb;AAAA,GAAjB;;AACA,MAAMG,SAAS,GAAG,SAAZA,SAAY;AAAA,WAAMP,OAAO,CAAC,CAACM,QAAQ,EAAT,IAAe,CAACD,KAAK,EAAtB,CAAb;AAAA,GAAlB;;AACA,SAAO;AACLC,IAAAA,QAAQ,EAARA,QADK;AAELC,IAAAA,SAAS,EAATA,SAFK;AAGLR,IAAAA,SAAS,EAATA,SAHK;AAILG,IAAAA,KAAK,EAALA,KAJK;AAKLG,IAAAA,KAAK,EAALA;AALK,GAAP;AAOD,CAhBD;;AAiBA,OAAO,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AACnCZ,EAAAA,SAAS,CAAC,YAAM,CAAE,CAAT,EAAW,EAAX,CAAT;AACA,MAAME,SAAS,GAAG,OAAOW,SAAP,KAAqB,WAArB,GAAmC,KAAnC,GAA2CA,SAAS,CAACX,SAAvE;AACA,SAAOD,eAAe,CAACC,SAAD,CAAtB;AACD,CAJM","sourcesContent":["import { useEffect } from 'react'\n\nconst getMobileDetect = userAgent => {\n  const isAndroid = () => Boolean(userAgent.match(/Android/i))\n  const isIos = () => Boolean(userAgent.match(/iPhone|iPad|iPd/i));\n  const isOpera = () => Boolean(userAgent.match(/Opera Mini/));\n  const isWindows = () => Boolean(userAgent.match(/IEMobilei/));\n  const isSSR = () => Boolean(userAgent.match(/SSR/i))\n\n  const isMobile = () => Boolean(isAndroid() || isIos() || isOpera() || isWindows())\n  const isDesktop = () => Boolean(!isMobile() && !isSSR())\n  return {\n    isMobile,\n    isDesktop,\n    isAndroid,\n    isIos,\n    isSSR\n  }\n}\nexport const useMobileDetect = () => {\n  useEffect(() => {}, [])\n  const userAgent = typeof navigator === 'undefined' ? 'SSR' : navigator.userAgent\n  return getMobileDetect(userAgent)\n}\n"]},"metadata":{},"sourceType":"module"}