{"ast":null,"code":"var _jsxFileName = \"/Users/raypo/Desktop/Projectos/CoronaStatus/components/QuickStats/QuickStats.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// Styles\nimport { Container } from '../S';\nimport { Column, InRow, Row, Percentage, Header, Number } from './QuickStats.styled'; // utils\n\nimport { F } from './QuickStats.utils';\nimport useTranslation from '../../hooks/useTranslation.js';\nexport default (function (_ref) {\n  var S = _ref.S,\n      country = _ref.country,\n      isHeb = _ref.isHeb,\n      yday = _ref.yday,\n      _ref$comparison = _ref.comparison,\n      comparison = _ref$comparison === void 0 ? true : _ref$comparison;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, __jsx(Row, {\n    world: country.toLowerCase() === 'world',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, Object.keys(S).map(function (k, i) {\n    return __jsx(Column, {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, __jsx(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \" \", t(k, 'labels')), __jsx(InRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, __jsx(Number, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, S[k] && F.formatNumber(S[k]), comparison && yday && country !== 'world' && country !== 'World' && __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"(\", F.formatNumber(yday[k]), \")\")), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), comparison && yday && __jsx(Percentage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, F.calcDiff(S[k])(yday[k]) < 0 && \"\\u2B07\" || \"\\u2B06\"), \"%\", Math.abs(F.calcDiff(S[k])(yday[k])))));\n  })));\n});","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/components/QuickStats/QuickStats.js"],"names":["Container","Column","InRow","Row","Percentage","Header","Number","F","useTranslation","S","country","isHeb","yday","comparison","t","toLowerCase","Object","keys","map","k","i","formatNumber","calcDiff","Math","abs"],"mappings":";;;AAAA;AACA,SAASA,SAAT,QAA0B,MAA1B;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,GAAxB,EAA6BC,UAA7B,EAAyCC,MAAzC,EAAiDC,MAAjD,QAA+D,qBAA/D,C,CAGA;;AACA,SAASC,CAAT,QAAkB,oBAAlB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AAGA,gBAAe,gBAAiD;AAAA,MAA9CC,CAA8C,QAA9CA,CAA8C;AAAA,MAA3CC,OAA2C,QAA3CA,OAA2C;AAAA,MAAlCC,KAAkC,QAAlCA,KAAkC;AAAA,MAA3BC,IAA2B,QAA3BA,IAA2B;AAAA,6BAArBC,UAAqB;AAAA,MAArBA,UAAqB,gCAAV,IAAU;;AAAA,wBAEhDL,cAAc,EAFkC;AAAA,MAEtDM,CAFsD,mBAEtDA,CAFsD;;AAI9D,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,KAAK,EAAEJ,OAAO,CAACK,WAAR,OAA0B,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGAC,MAAM,CAACC,IAAP,CAAYR,CAAZ,EAAeS,GAAf,CAAmB,UAACC,CAAD,EAAGC,CAAH,EAAS;AAC1B,WACE,MAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAWN,CAAC,CAACK,CAAD,EAAI,QAAJ,CAAZ,CADF,EAEE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIV,CAAC,CAACU,CAAD,CAAD,IAAQZ,CAAC,CAACc,YAAF,CAAeZ,CAAC,CAACU,CAAD,CAAhB,CAFZ,EAKIN,UAAU,IACLD,IADL,IAEKF,OAAO,KAAK,OAFjB,IAGKA,OAAO,KAAK,OAHjB,IAIK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACGH,CAAC,CAACc,YAAF,CAAeT,IAAI,CAACO,CAAD,CAAnB,CADH,MATT,CADF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,EAiBIN,UAAU,IAAID,IAAd,IAAsB,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQL,CAAC,CAACe,QAAF,CAAWb,CAAC,CAACU,CAAD,CAAZ,EAAiBP,IAAI,CAACO,CAAD,CAArB,IAA4B,CAA5B,IAAiC,QAAjC,IAA6C,QAArD,CADsB,OAEnBI,IAAI,CAACC,GAAL,CAASjB,CAAC,CAACe,QAAF,CAAWb,CAAC,CAACU,CAAD,CAAZ,EAAiBP,IAAI,CAACO,CAAD,CAArB,CAAT,CAFmB,CAjB1B,CAFF,CADF;AA4BD,GA7BD,CAHA,CADF,CADF;AA0CD,CA9CD","sourcesContent":["// Styles\nimport { Container } from '../S'\nimport { Column, InRow, Row, Percentage, Header, Number } from './QuickStats.styled'\n\n\n// utils\nimport { F } from './QuickStats.utils'\nimport useTranslation from '../../hooks/useTranslation.js'\n\n\nexport default ({ S, country, isHeb, yday, comparison=true}) => {\n\n  const { t } = useTranslation()\n\n  return (\n    <Container>\n      <Row world={country.toLowerCase() === 'world'}>\n\n    {\n      Object.keys(S).map((k,i) => {\n        return (\n          <Column key={i}>\n            <Header> { t(k, 'labels') }</Header>\n            <InRow>\n              <Number>\n                {\n                  S[k] && F.formatNumber(S[k])\n                }\n                {\n                  comparison  \n                    && yday \n                    && country !== 'world' \n                    && country !== 'World' \n                    && <span>\n                        ({F.formatNumber(yday[k])})\n                       </span>\n                }\n              </Number>\n              <br />\n              {\n                comparison && yday && <Percentage>\n                <span>{ F.calcDiff(S[k])(yday[k]) < 0 && \"\\u2B07\" || '\\u2B06' }</span>\n                %{ Math.abs(F.calcDiff(S[k])(yday[k]))} \n                </Percentage>\n              }\n            </InRow>\n          </Column>\n        )\n      })\n    }\n\n\n      </Row>\n    </Container>\n  )\n\n}\n"]},"metadata":{},"sourceType":"module"}