{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nvar baseURL = \"http://46.101.156.51:3003/api/v1/alltime/\"; // async function currentCountry(){\n//   return await axios\n//     .get('https://extreme-ip-lookup.com/json/')\n//     .then(res => res.data.country)\n//     .catch(e => 'Israel')\n// }\n\nfunction useTime() {\n  var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : baseURL;\n  var country = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'world';\n\n  var _useState = useState(),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  console.log('hi');\n  useEffect(function () {\n    console.log('hi again');\n\n    function fetchData() {\n      var URL, data;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              setError();\n              URL = country === 'world' ? baseURL : baseURL + country;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(axios.get(URL).then(function (res) {\n                return res.data;\n              })[\"catch\"](function (err) {\n                return setError(err);\n              }));\n\n            case 5:\n              data = _context.sent;\n              console.log('finished fetching...???');\n              console.log(data);\n              setData(data);\n              setLoading(false);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData();\n  }, [country]);\n  var worldStats = data;\n  return {\n    worldStats: worldStats,\n    loading: loading,\n    error: error\n  };\n}\n\nexport default useTime;","map":{"version":3,"sources":["/Users/raypo/Desktop/Projectos/CoronaStatus/utils/useTime.js"],"names":["useState","useEffect","axios","baseURL","useTime","url","country","data","setData","loading","setLoading","error","setError","console","log","fetchData","URL","get","then","res","err","worldStats"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAMC,OAAO,8CAAb,C,CAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,OAAT,GAAmD;AAAA,MAAlCC,GAAkC,uEAA5BF,OAA4B;AAAA,MAAnBG,OAAmB,uEAAT,OAAS;;AAAA,kBACzBN,QAAQ,EADiB;AAAA,MAC1CO,IAD0C;AAAA,MACpCC,OADoC;;AAAA,mBAEnBR,QAAQ,CAAC,KAAD,CAFW;AAAA,MAE1CS,OAF0C;AAAA,MAEjCC,UAFiC;;AAAA,mBAGvBV,QAAQ,CAAC,KAAD,CAHe;AAAA,MAG1CW,KAH0C;AAAA,MAGnCC,QAHmC;;AAKjDC,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AAEAb,EAAAA,SAAS,CAAC,YAAM;AAEdY,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;;AACA,aAAeC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACEL,cAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,cAAAA,QAAQ;AAEFI,cAAAA,GAJR,GAIcV,OAAO,KAAK,OAAZ,GAAsBH,OAAtB,GAAgCA,OAAO,GAACG,OAJtD;AAAA;AAAA,+CAKqBJ,KAAK,CAACe,GAAN,CAAUD,GAAV,EAChBE,IADgB,CACX,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAACZ,IAAR;AAAA,eADQ,WAEV,UAAAa,GAAG;AAAA,uBAAIR,QAAQ,CAACQ,GAAD,CAAZ;AAAA,eAFO,CALrB;;AAAA;AAKQb,cAAAA,IALR;AAQEM,cAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAD,cAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACAC,cAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,cAAAA,UAAU,CAAC,KAAD,CAAV;;AAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcAK,IAAAA,SAAS;AACV,GAlBQ,EAkBN,CAACT,OAAD,CAlBM,CAAT;AAoBA,MAAMe,UAAU,GAAGd,IAAnB;AAEA,SAAO;AACLc,IAAAA,UAAU,EAAVA,UADK;AACOZ,IAAAA,OAAO,EAAPA,OADP;AACgBE,IAAAA,KAAK,EAALA;AADhB,GAAP;AAGD;;AAED,eAAeP,OAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nconst baseURL = `http://46.101.156.51:3003/api/v1/alltime/`\n\n// async function currentCountry(){\n//   return await axios\n//     .get('https://extreme-ip-lookup.com/json/')\n//     .then(res => res.data.country)\n//     .catch(e => 'Israel')\n// }\n\nfunction useTime(url = baseURL, country = 'world') {\n  const [data, setData] = useState();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  console.log('hi');\n\n  useEffect(() => {\n\n    console.log('hi again');\n    async function fetchData() {\n      setLoading(true)\n      setError()\n\n      const URL = country === 'world' ? baseURL : baseURL+country\n      const data = await axios.get(URL)\n        .then(res => res.data)\n        .catch(err => setError(err))\n      console.log('finished fetching...???');\n      console.log(data);\n      setData(data)\n      setLoading(false)\n    }\n\n    fetchData();\n  }, [country])\n\n  const worldStats = data;\n\n  return {\n    worldStats, loading, error\n  }\n}\n\nexport default useTime;\n"]},"metadata":{},"sourceType":"module"}